{"ast":null,"code":"// pass in an arborist object, and it'll output the data about what\n// was done, what was audited, etc.\n//\n// added ## packages, removed ## packages, and audited ## packages in 19.157s\n//\n// 1 package is looking for funding\n//   run `npm fund` for details\n//\n// found 37 vulnerabilities (5 low, 7 moderate, 25 high)\n//   run `npm audit fix` to fix them, or `npm audit` for details\n\nconst log = require('npmlog');\nconst {\n  depth\n} = require('treeverse');\nconst ms = require('ms');\nconst auditReport = require('npm-audit-report');\nconst {\n  readTree: getFundingInfo\n} = require('libnpmfund');\nconst auditError = require('./audit-error.js');\n\n// TODO: output JSON if flatOptions.json is true\nconst reifyOutput = (npm, arb) => {\n  const {\n    diff,\n    actualTree\n  } = arb;\n\n  // note: fails and crashes if we're running audit fix and there was an error\n  // which is a good thing, because there's no point printing all this other\n  // stuff in that case!\n  const auditReport = auditError(npm, arb.auditReport) ? null : arb.auditReport;\n\n  // don't print any info in --silent mode, but we still need to\n  // set the exitCode properly from the audit report, if we have one.\n  if (log.levels[log.level] > log.levels.error) {\n    getAuditReport(npm, auditReport);\n    return;\n  }\n  const summary = {\n    added: 0,\n    removed: 0,\n    changed: 0,\n    audited: auditReport && !auditReport.error ? actualTree.inventory.size : 0,\n    funding: 0\n  };\n  if (diff) {\n    depth({\n      tree: diff,\n      visit: d => {\n        switch (d.action) {\n          case 'REMOVE':\n            summary.removed++;\n            break;\n          case 'ADD':\n            actualTree.inventory.has(d.ideal) && summary.added++;\n            break;\n          case 'CHANGE':\n            summary.changed++;\n            break;\n          default:\n            return;\n        }\n        const node = d.actual || d.ideal;\n        log.silly(d.action, node.location);\n      },\n      getChildren: d => d.children\n    });\n  }\n  if (npm.flatOptions.fund) {\n    const fundingInfo = getFundingInfo(actualTree, {\n      countOnly: true\n    });\n    summary.funding = fundingInfo.length;\n  }\n  if (npm.flatOptions.json) {\n    if (auditReport) {\n      // call this to set the exit code properly\n      getAuditReport(npm, auditReport);\n      summary.audit = npm.command === 'audit' ? auditReport : auditReport.toJSON().metadata;\n    }\n    npm.output(JSON.stringify(summary, 0, 2));\n  } else {\n    packagesChangedMessage(npm, summary);\n    packagesFundingMessage(npm, summary);\n    printAuditReport(npm, auditReport);\n  }\n};\n\n// if we're running `npm audit fix`, then we print the full audit report\n// at the end if there's still stuff, because it's silly for `npm audit`\n// to tell you to run `npm audit` for details.  otherwise, use the summary\n// report.  if we get here, we know it's not quiet or json.\n// If the loglevel is set higher than 'error', then we just run the report\n// to get the exitCode set appropriately.\nconst printAuditReport = (npm, report) => {\n  const res = getAuditReport(npm, report);\n  if (!res || !res.report) return;\n  npm.output(`\\n${res.report}`);\n};\nconst getAuditReport = (npm, report) => {\n  if (!report) return;\n\n  // when in silent mode, we print nothing.  the JSON output is\n  // going to just JSON.stringify() the report object.\n  const reporter = log.levels[log.level] > log.levels.error ? 'quiet' : npm.flatOptions.json ? 'quiet' : npm.command !== 'audit' ? 'install' : 'detail';\n  const defaultAuditLevel = npm.command !== 'audit' ? 'none' : 'low';\n  const auditLevel = npm.flatOptions.auditLevel || defaultAuditLevel;\n  const res = auditReport(report, {\n    reporter,\n    ...npm.flatOptions,\n    auditLevel\n  });\n  if (npm.command === 'audit') process.exitCode = process.exitCode || res.exitCode;\n  return res;\n};\nconst packagesChangedMessage = (npm, {\n  added,\n  removed,\n  changed,\n  audited\n}) => {\n  const msg = ['\\n'];\n  if (added === 0 && removed === 0 && changed === 0) {\n    msg.push('up to date');\n    if (audited) msg.push(', ');\n  } else {\n    if (added) msg.push(`added ${added} package${added === 1 ? '' : 's'}`);\n    if (removed) {\n      if (added) msg.push(', ');\n      if (added && !audited && !changed) msg.push('and ');\n      msg.push(`removed ${removed} package${removed === 1 ? '' : 's'}`);\n    }\n    if (changed) {\n      if (added || removed) msg.push(', ');\n      if (!audited && (added || removed)) msg.push('and ');\n      msg.push(`changed ${changed} package${changed === 1 ? '' : 's'}`);\n    }\n    if (audited) msg.push(', and ');\n  }\n  if (audited) msg.push(`audited ${audited} package${audited === 1 ? '' : 's'}`);\n  msg.push(` in ${ms(Date.now() - npm.started)}`);\n  npm.output(msg.join(''));\n};\nconst packagesFundingMessage = (npm, {\n  funding\n}) => {\n  if (!funding) return;\n  npm.output('');\n  const pkg = funding === 1 ? 'package' : 'packages';\n  const is = funding === 1 ? 'is' : 'are';\n  npm.output(`${funding} ${pkg} ${is} looking for funding`);\n  npm.output('  run `npm fund` for details');\n};\nmodule.exports = reifyOutput;","map":{"version":3,"names":["log","require","depth","ms","auditReport","readTree","getFundingInfo","auditError","reifyOutput","npm","arb","diff","actualTree","levels","level","error","getAuditReport","summary","added","removed","changed","audited","inventory","size","funding","tree","visit","d","action","has","ideal","node","actual","silly","location","getChildren","children","flatOptions","fund","fundingInfo","countOnly","length","json","audit","command","toJSON","metadata","output","JSON","stringify","packagesChangedMessage","packagesFundingMessage","printAuditReport","report","res","reporter","defaultAuditLevel","auditLevel","process","exitCode","msg","push","Date","now","started","join","pkg","is","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/utils/reify-output.js"],"sourcesContent":["// pass in an arborist object, and it'll output the data about what\n// was done, what was audited, etc.\n//\n// added ## packages, removed ## packages, and audited ## packages in 19.157s\n//\n// 1 package is looking for funding\n//   run `npm fund` for details\n//\n// found 37 vulnerabilities (5 low, 7 moderate, 25 high)\n//   run `npm audit fix` to fix them, or `npm audit` for details\n\nconst log = require('npmlog')\nconst { depth } = require('treeverse')\nconst ms = require('ms')\nconst auditReport = require('npm-audit-report')\nconst { readTree: getFundingInfo } = require('libnpmfund')\nconst auditError = require('./audit-error.js')\n\n// TODO: output JSON if flatOptions.json is true\nconst reifyOutput = (npm, arb) => {\n  const { diff, actualTree } = arb\n\n  // note: fails and crashes if we're running audit fix and there was an error\n  // which is a good thing, because there's no point printing all this other\n  // stuff in that case!\n  const auditReport = auditError(npm, arb.auditReport) ? null : arb.auditReport\n\n  // don't print any info in --silent mode, but we still need to\n  // set the exitCode properly from the audit report, if we have one.\n  if (log.levels[log.level] > log.levels.error) {\n    getAuditReport(npm, auditReport)\n    return\n  }\n\n  const summary = {\n    added: 0,\n    removed: 0,\n    changed: 0,\n    audited: auditReport && !auditReport.error ? actualTree.inventory.size : 0,\n    funding: 0,\n  }\n\n  if (diff) {\n    depth({\n      tree: diff,\n      visit: d => {\n        switch (d.action) {\n          case 'REMOVE':\n            summary.removed++\n            break\n          case 'ADD':\n            actualTree.inventory.has(d.ideal) && summary.added++\n            break\n          case 'CHANGE':\n            summary.changed++\n            break\n          default:\n            return\n        }\n        const node = d.actual || d.ideal\n        log.silly(d.action, node.location)\n      },\n      getChildren: d => d.children,\n    })\n  }\n\n  if (npm.flatOptions.fund) {\n    const fundingInfo = getFundingInfo(actualTree, { countOnly: true })\n    summary.funding = fundingInfo.length\n  }\n\n  if (npm.flatOptions.json) {\n    if (auditReport) {\n      // call this to set the exit code properly\n      getAuditReport(npm, auditReport)\n      summary.audit = npm.command === 'audit' ? auditReport\n        : auditReport.toJSON().metadata\n    }\n    npm.output(JSON.stringify(summary, 0, 2))\n  } else {\n    packagesChangedMessage(npm, summary)\n    packagesFundingMessage(npm, summary)\n    printAuditReport(npm, auditReport)\n  }\n}\n\n// if we're running `npm audit fix`, then we print the full audit report\n// at the end if there's still stuff, because it's silly for `npm audit`\n// to tell you to run `npm audit` for details.  otherwise, use the summary\n// report.  if we get here, we know it's not quiet or json.\n// If the loglevel is set higher than 'error', then we just run the report\n// to get the exitCode set appropriately.\nconst printAuditReport = (npm, report) => {\n  const res = getAuditReport(npm, report)\n  if (!res || !res.report)\n    return\n  npm.output(`\\n${res.report}`)\n}\n\nconst getAuditReport = (npm, report) => {\n  if (!report)\n    return\n\n  // when in silent mode, we print nothing.  the JSON output is\n  // going to just JSON.stringify() the report object.\n  const reporter = log.levels[log.level] > log.levels.error ? 'quiet'\n    : npm.flatOptions.json ? 'quiet'\n    : npm.command !== 'audit' ? 'install'\n    : 'detail'\n  const defaultAuditLevel = npm.command !== 'audit' ? 'none' : 'low'\n  const auditLevel = npm.flatOptions.auditLevel || defaultAuditLevel\n\n  const res = auditReport(report, {\n    reporter,\n    ...npm.flatOptions,\n    auditLevel,\n  })\n  if (npm.command === 'audit')\n    process.exitCode = process.exitCode || res.exitCode\n  return res\n}\n\nconst packagesChangedMessage = (npm, { added, removed, changed, audited }) => {\n  const msg = ['\\n']\n  if (added === 0 && removed === 0 && changed === 0) {\n    msg.push('up to date')\n    if (audited)\n      msg.push(', ')\n  } else {\n    if (added)\n      msg.push(`added ${added} package${added === 1 ? '' : 's'}`)\n\n    if (removed) {\n      if (added)\n        msg.push(', ')\n\n      if (added && !audited && !changed)\n        msg.push('and ')\n\n      msg.push(`removed ${removed} package${removed === 1 ? '' : 's'}`)\n    }\n    if (changed) {\n      if (added || removed)\n        msg.push(', ')\n\n      if (!audited && (added || removed))\n        msg.push('and ')\n\n      msg.push(`changed ${changed} package${changed === 1 ? '' : 's'}`)\n    }\n    if (audited)\n      msg.push(', and ')\n  }\n  if (audited)\n    msg.push(`audited ${audited} package${audited === 1 ? '' : 's'}`)\n\n  msg.push(` in ${ms(Date.now() - npm.started)}`)\n  npm.output(msg.join(''))\n}\n\nconst packagesFundingMessage = (npm, { funding }) => {\n  if (!funding)\n    return\n\n  npm.output('')\n  const pkg = funding === 1 ? 'package' : 'packages'\n  const is = funding === 1 ? 'is' : 'are'\n  npm.output(`${funding} ${pkg} ${is} looking for funding`)\n  npm.output('  run `npm fund` for details')\n}\n\nmodule.exports = reifyOutput\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}