{"ast":null,"code":"const Fetcher = require('./fetcher.js');\nconst FileFetcher = require('./file.js');\nconst _tarballFromResolved = Symbol.for('pacote.Fetcher._tarballFromResolved');\nconst pacoteVersion = require('../package.json').version;\nconst fetch = require('npm-registry-fetch');\nconst ssri = require('ssri');\nconst Minipass = require('minipass');\n// The default registry URL is a string of great magic.\nconst magic = /^https?:\\/\\/registry\\.npmjs\\.org\\//;\nconst _cacheFetches = Symbol.for('pacote.Fetcher._cacheFetches');\nconst _headers = Symbol('_headers');\nclass RemoteFetcher extends Fetcher {\n  constructor(spec, opts) {\n    super(spec, opts);\n    this.resolved = this.spec.fetchSpec;\n    if (magic.test(this.resolved) && !magic.test(this.registry + '/')) this.resolved = this.resolved.replace(magic, this.registry + '/');\n\n    // nam is a fermented pork sausage that is good to eat\n    const nameat = this.spec.name ? `${this.spec.name}@` : '';\n    this.pkgid = opts.pkgid ? opts.pkgid : `remote:${nameat}${this.resolved}`;\n  }\n\n  // Don't need to cache tarball fetches in pacote, because make-fetch-happen\n  // will write into cacache anyway.\n  get [_cacheFetches]() {\n    return false;\n  }\n  [_tarballFromResolved]() {\n    const stream = new Minipass();\n    const fetchOpts = {\n      ...this.opts,\n      headers: this[_headers](),\n      spec: this.spec,\n      integrity: this.integrity,\n      algorithms: [this.pickIntegrityAlgorithm()]\n    };\n    fetch(this.resolved, fetchOpts).then(res => {\n      const hash = res.headers.get('x-local-cache-hash');\n      if (hash) {\n        this.integrity = decodeURIComponent(hash);\n      }\n      res.body.on('error', /* istanbul ignore next - exceedingly rare and hard to simulate */\n      er => stream.emit('error', er)).pipe(stream);\n    }).catch(er => stream.emit('error', er));\n    return stream;\n  }\n  [_headers]() {\n    return {\n      // npm will override this, but ensure that we always send *something*\n      'user-agent': this.opts.userAgent || `pacote/${pacoteVersion} node/${process.version}`,\n      ...(this.opts.headers || {}),\n      'pacote-version': pacoteVersion,\n      'pacote-req-type': 'tarball',\n      'pacote-pkg-id': this.pkgid,\n      ...(this.integrity ? {\n        'pacote-integrity': String(this.integrity)\n      } : {}),\n      ...(this.opts.headers || {})\n    };\n  }\n  get types() {\n    return ['remote'];\n  }\n\n  // getting a packument and/or manifest is the same as with a file: spec.\n  // unpack the tarball stream, and then read from the package.json file.\n  packument() {\n    return FileFetcher.prototype.packument.apply(this);\n  }\n  manifest() {\n    return FileFetcher.prototype.manifest.apply(this);\n  }\n}\nmodule.exports = RemoteFetcher;","map":{"version":3,"names":["Fetcher","require","FileFetcher","_tarballFromResolved","Symbol","for","pacoteVersion","version","fetch","ssri","Minipass","magic","_cacheFetches","_headers","RemoteFetcher","constructor","spec","opts","resolved","fetchSpec","test","registry","replace","nameat","name","pkgid","stream","fetchOpts","headers","integrity","algorithms","pickIntegrityAlgorithm","then","res","hash","get","decodeURIComponent","body","on","er","emit","pipe","catch","userAgent","process","String","types","packument","prototype","apply","manifest","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/pacote/lib/remote.js"],"sourcesContent":["const Fetcher = require('./fetcher.js')\nconst FileFetcher = require('./file.js')\nconst _tarballFromResolved = Symbol.for('pacote.Fetcher._tarballFromResolved')\nconst pacoteVersion = require('../package.json').version\nconst fetch = require('npm-registry-fetch')\nconst ssri = require('ssri')\nconst Minipass = require('minipass')\n// The default registry URL is a string of great magic.\nconst magic = /^https?:\\/\\/registry\\.npmjs\\.org\\//\n\nconst _cacheFetches = Symbol.for('pacote.Fetcher._cacheFetches')\nconst _headers = Symbol('_headers')\nclass RemoteFetcher extends Fetcher {\n  constructor (spec, opts) {\n    super(spec, opts)\n    this.resolved = this.spec.fetchSpec\n    if (magic.test(this.resolved) && !magic.test(this.registry + '/'))\n      this.resolved = this.resolved.replace(magic, this.registry + '/')\n\n    // nam is a fermented pork sausage that is good to eat\n    const nameat = this.spec.name ? `${this.spec.name}@` : ''\n    this.pkgid = opts.pkgid ? opts.pkgid : `remote:${nameat}${this.resolved}`\n  }\n\n  // Don't need to cache tarball fetches in pacote, because make-fetch-happen\n  // will write into cacache anyway.\n  get [_cacheFetches] () {\n    return false\n  }\n\n  [_tarballFromResolved] () {\n    const stream = new Minipass()\n    const fetchOpts = {\n      ...this.opts,\n      headers: this[_headers](),\n      spec: this.spec,\n      integrity: this.integrity,\n      algorithms: [ this.pickIntegrityAlgorithm() ],\n    }\n    fetch(this.resolved, fetchOpts).then(res => {\n      const hash = res.headers.get('x-local-cache-hash')\n      if (hash) {\n        this.integrity = decodeURIComponent(hash)\n      }\n\n      res.body.on('error',\n        /* istanbul ignore next - exceedingly rare and hard to simulate */\n        er => stream.emit('error', er)\n      ).pipe(stream)\n    }).catch(er => stream.emit('error', er))\n\n    return stream\n  }\n\n  [_headers] () {\n    return {\n      // npm will override this, but ensure that we always send *something*\n      'user-agent': this.opts.userAgent ||\n        `pacote/${pacoteVersion} node/${process.version}`,\n      ...(this.opts.headers || {}),\n      'pacote-version': pacoteVersion,\n      'pacote-req-type': 'tarball',\n      'pacote-pkg-id': this.pkgid,\n      ...(this.integrity ? { 'pacote-integrity': String(this.integrity) }\n        : {}),\n      ...(this.opts.headers || {}),\n    }\n  }\n\n  get types () {\n    return ['remote']\n  }\n\n  // getting a packument and/or manifest is the same as with a file: spec.\n  // unpack the tarball stream, and then read from the package.json file.\n  packument () {\n    return FileFetcher.prototype.packument.apply(this)\n  }\n\n  manifest () {\n    return FileFetcher.prototype.manifest.apply(this)\n  }\n}\nmodule.exports = RemoteFetcher\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}