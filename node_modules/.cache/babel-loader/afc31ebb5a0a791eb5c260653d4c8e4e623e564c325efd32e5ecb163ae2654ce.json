{"ast":null,"code":"// don't expand so that we only assemble the set of defaults when needed\nconst configDefs = require('./utils/config/index.js');\nconst mkdirp = require('mkdirp-infer-owner');\nconst {\n  dirname\n} = require('path');\nconst {\n  promisify\n} = require('util');\nconst fs = require('fs');\nconst readFile = promisify(fs.readFile);\nconst writeFile = promisify(fs.writeFile);\nconst {\n  spawn\n} = require('child_process');\nconst {\n  EOL\n} = require('os');\nconst ini = require('ini');\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\n\n// take an array of `[key, value, k2=v2, k3, v3, ...]` and turn into\n// { key: value, k2: v2, k3: v3 }\nconst keyValues = args => {\n  const kv = {};\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i].split('=');\n    const key = arg.shift();\n    const val = arg.length ? arg.join('=') : i < args.length - 1 ? args[++i] : '';\n    kv[key.trim()] = val.trim();\n  }\n  return kv;\n};\nconst publicVar = k => !/^(\\/\\/[^:]+:)?_/.test(k);\nconst BaseCommand = require('./base-command.js');\nclass Config extends BaseCommand {\n  static get description() {\n    return 'Manage the npm configuration files';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'config';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['set <key>=<value> [<key>=<value> ...]', 'get [<key> [<key> ...]]', 'delete <key> [<key> ...]', 'list [--json]', 'edit'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['json', 'global', 'editor', 'location', 'long'];\n  }\n  async completion(opts) {\n    const argv = opts.conf.argv.remain;\n    if (argv[1] !== 'config') argv.unshift('config');\n    if (argv.length === 2) {\n      const cmds = ['get', 'set', 'delete', 'ls', 'rm', 'edit'];\n      if (opts.partialWord !== 'l') cmds.push('list');\n      return cmds;\n    }\n    const action = argv[2];\n    switch (action) {\n      case 'set':\n        // todo: complete with valid values, if possible.\n        if (argv.length > 3) return [];\n\n      // fallthrough\n      /* eslint no-fallthrough:0 */\n      case 'get':\n      case 'delete':\n      case 'rm':\n        return Object.keys(configDefs.definitions);\n      case 'edit':\n      case 'list':\n      case 'ls':\n      default:\n        return [];\n    }\n  }\n  exec(args, cb) {\n    this.config(args).then(() => cb()).catch(cb);\n  }\n  execWorkspaces(args, filters, cb) {\n    this.npm.log.warn('config', 'This command does not support workspaces.');\n    this.exec(args, cb);\n  }\n  async config([action, ...args]) {\n    this.npm.log.disableProgress();\n    try {\n      switch (action) {\n        case 'set':\n          await this.set(args);\n          break;\n        case 'get':\n          await this.get(args);\n          break;\n        case 'delete':\n        case 'rm':\n        case 'del':\n          await this.del(args);\n          break;\n        case 'list':\n        case 'ls':\n          await (this.npm.flatOptions.json ? this.listJson() : this.list());\n          break;\n        case 'edit':\n          await this.edit();\n          break;\n        default:\n          throw this.usageError();\n      }\n    } finally {\n      this.npm.log.enableProgress();\n    }\n  }\n  async set(args) {\n    if (!args.length) throw this.usageError();\n    const where = this.npm.flatOptions.location;\n    for (const [key, val] of Object.entries(keyValues(args))) {\n      this.npm.log.info('config', 'set %j %j', key, val);\n      this.npm.config.set(key, val || '', where);\n      if (!this.npm.config.validate(where)) this.npm.log.warn('config', 'omitting invalid config values');\n    }\n    await this.npm.config.save(where);\n  }\n  async get(keys) {\n    if (!keys.length) return this.list();\n    const out = [];\n    for (const key of keys) {\n      if (!publicVar(key)) throw `The ${key} option is protected, and cannot be retrieved in this way`;\n      const pref = keys.length > 1 ? `${key}=` : '';\n      out.push(pref + this.npm.config.get(key));\n    }\n    this.npm.output(out.join('\\n'));\n  }\n  async del(keys) {\n    if (!keys.length) throw this.usageError();\n    const where = this.npm.flatOptions.location;\n    for (const key of keys) this.npm.config.delete(key, where);\n    await this.npm.config.save(where);\n  }\n  async edit() {\n    const e = this.npm.flatOptions.editor;\n    const where = this.npm.flatOptions.location;\n    const file = this.npm.config.data.get(where).source;\n\n    // save first, just to make sure it's synced up\n    // this also removes all the comments from the last time we edited it.\n    await this.npm.config.save(where);\n    const data = (await readFile(file, 'utf8').catch(() => '')).replace(/\\r\\n/g, '\\n');\n    const entries = Object.entries(configDefs.defaults);\n    const defData = entries.reduce((str, [key, val]) => {\n      const obj = {\n        [key]: val\n      };\n      const i = ini.stringify(obj).replace(/\\r\\n/g, '\\n') // normalizes output from ini.stringify\n      .replace(/\\n$/m, '').replace(/^/g, '; ').replace(/\\n/g, '\\n; ').split('\\n');\n      return str + '\\n' + i;\n    }, '');\n    const tmpData = `;;;;\n; npm ${where}config file: ${file}\n; this is a simple ini-formatted file\n; lines that start with semi-colons are comments\n; run \\`npm help 7 config\\` for documentation of the various options\n;\n; Configs like \\`@scope:registry\\` map a scope to a given registry url.\n;\n; Configs like \\`//<hostname>/:_authToken\\` are auth that is restricted\n; to the registry host specified.\n\n${data.split('\\n').sort(localeCompare).join('\\n').trim()}\n\n;;;;\n; all available options shown below with default values\n;;;;\n\n${defData}\n`.split('\\n').join(EOL);\n    await mkdirp(dirname(file));\n    await writeFile(file, tmpData, 'utf8');\n    await new Promise((resolve, reject) => {\n      const [bin, ...args] = e.split(/\\s+/);\n      const editor = spawn(bin, [...args, file], {\n        stdio: 'inherit'\n      });\n      editor.on('exit', code => {\n        if (code) return reject(new Error(`editor process exited with code: ${code}`));\n        return resolve();\n      });\n    });\n  }\n  async list() {\n    const msg = [];\n    // long does not have a flattener\n    const long = this.npm.config.get('long');\n    for (const [where, {\n      data,\n      source\n    }] of this.npm.config.data.entries()) {\n      if (where === 'default' && !long) continue;\n      const keys = Object.keys(data).sort(localeCompare);\n      if (!keys.length) continue;\n      msg.push(`; \"${where}\" config from ${source}`, '');\n      for (const k of keys) {\n        const v = publicVar(k) ? JSON.stringify(data[k]) : '(protected)';\n        const src = this.npm.config.find(k);\n        const overridden = src !== where;\n        msg.push((overridden ? '; ' : '') + `${k} = ${v} ${overridden ? `; overridden by ${src}` : ''}`);\n      }\n      msg.push('');\n    }\n    if (!long) {\n      msg.push(`; node bin location = ${process.execPath}`, `; cwd = ${process.cwd()}`, `; HOME = ${process.env.HOME}`, '; Run `npm config ls -l` to show all defaults.');\n    }\n    this.npm.output(msg.join('\\n').trim());\n  }\n  async listJson() {\n    const publicConf = {};\n    for (const key in this.npm.config.list[0]) {\n      if (!publicVar(key)) continue;\n      publicConf[key] = this.npm.config.get(key);\n    }\n    this.npm.output(JSON.stringify(publicConf, null, 2));\n  }\n}\nmodule.exports = Config;","map":{"version":3,"names":["configDefs","require","mkdirp","dirname","promisify","fs","readFile","writeFile","spawn","EOL","ini","localeCompare","keyValues","args","kv","i","length","arg","split","key","shift","val","join","trim","publicVar","k","test","BaseCommand","Config","description","name","usage","params","completion","opts","argv","conf","remain","unshift","cmds","partialWord","push","action","Object","keys","definitions","exec","cb","config","then","catch","execWorkspaces","filters","npm","log","warn","disableProgress","set","get","del","flatOptions","json","listJson","list","edit","usageError","enableProgress","where","location","entries","info","validate","save","out","pref","output","delete","e","editor","file","data","source","replace","defaults","defData","reduce","str","obj","stringify","tmpData","sort","Promise","resolve","reject","bin","stdio","on","code","Error","msg","long","v","JSON","src","find","overridden","process","execPath","cwd","env","HOME","publicConf","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/config.js"],"sourcesContent":["// don't expand so that we only assemble the set of defaults when needed\nconst configDefs = require('./utils/config/index.js')\n\nconst mkdirp = require('mkdirp-infer-owner')\nconst { dirname } = require('path')\nconst { promisify } = require('util')\nconst fs = require('fs')\nconst readFile = promisify(fs.readFile)\nconst writeFile = promisify(fs.writeFile)\nconst { spawn } = require('child_process')\nconst { EOL } = require('os')\nconst ini = require('ini')\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\n\n// take an array of `[key, value, k2=v2, k3, v3, ...]` and turn into\n// { key: value, k2: v2, k3: v3 }\nconst keyValues = args => {\n  const kv = {}\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i].split('=')\n    const key = arg.shift()\n    const val = arg.length ? arg.join('=')\n      : i < args.length - 1 ? args[++i]\n      : ''\n    kv[key.trim()] = val.trim()\n  }\n  return kv\n}\n\nconst publicVar = k => !/^(\\/\\/[^:]+:)?_/.test(k)\n\nconst BaseCommand = require('./base-command.js')\nclass Config extends BaseCommand {\n  static get description () {\n    return 'Manage the npm configuration files'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'config'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return [\n      'set <key>=<value> [<key>=<value> ...]',\n      'get [<key> [<key> ...]]',\n      'delete <key> [<key> ...]',\n      'list [--json]',\n      'edit',\n    ]\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'json',\n      'global',\n      'editor',\n      'location',\n      'long',\n    ]\n  }\n\n  async completion (opts) {\n    const argv = opts.conf.argv.remain\n    if (argv[1] !== 'config')\n      argv.unshift('config')\n\n    if (argv.length === 2) {\n      const cmds = ['get', 'set', 'delete', 'ls', 'rm', 'edit']\n      if (opts.partialWord !== 'l')\n        cmds.push('list')\n\n      return cmds\n    }\n\n    const action = argv[2]\n    switch (action) {\n      case 'set':\n        // todo: complete with valid values, if possible.\n        if (argv.length > 3)\n          return []\n\n        // fallthrough\n        /* eslint no-fallthrough:0 */\n      case 'get':\n      case 'delete':\n      case 'rm':\n        return Object.keys(configDefs.definitions)\n      case 'edit':\n      case 'list':\n      case 'ls':\n      default:\n        return []\n    }\n  }\n\n  exec (args, cb) {\n    this.config(args).then(() => cb()).catch(cb)\n  }\n\n  execWorkspaces (args, filters, cb) {\n    this.npm.log.warn('config', 'This command does not support workspaces.')\n    this.exec(args, cb)\n  }\n\n  async config ([action, ...args]) {\n    this.npm.log.disableProgress()\n    try {\n      switch (action) {\n        case 'set':\n          await this.set(args)\n          break\n        case 'get':\n          await this.get(args)\n          break\n        case 'delete':\n        case 'rm':\n        case 'del':\n          await this.del(args)\n          break\n        case 'list':\n        case 'ls':\n          await (this.npm.flatOptions.json ? this.listJson() : this.list())\n          break\n        case 'edit':\n          await this.edit()\n          break\n        default:\n          throw this.usageError()\n      }\n    } finally {\n      this.npm.log.enableProgress()\n    }\n  }\n\n  async set (args) {\n    if (!args.length)\n      throw this.usageError()\n\n    const where = this.npm.flatOptions.location\n    for (const [key, val] of Object.entries(keyValues(args))) {\n      this.npm.log.info('config', 'set %j %j', key, val)\n      this.npm.config.set(key, val || '', where)\n      if (!this.npm.config.validate(where))\n        this.npm.log.warn('config', 'omitting invalid config values')\n    }\n\n    await this.npm.config.save(where)\n  }\n\n  async get (keys) {\n    if (!keys.length)\n      return this.list()\n\n    const out = []\n    for (const key of keys) {\n      if (!publicVar(key))\n        throw `The ${key} option is protected, and cannot be retrieved in this way`\n\n      const pref = keys.length > 1 ? `${key}=` : ''\n      out.push(pref + this.npm.config.get(key))\n    }\n    this.npm.output(out.join('\\n'))\n  }\n\n  async del (keys) {\n    if (!keys.length)\n      throw this.usageError()\n\n    const where = this.npm.flatOptions.location\n    for (const key of keys)\n      this.npm.config.delete(key, where)\n    await this.npm.config.save(where)\n  }\n\n  async edit () {\n    const e = this.npm.flatOptions.editor\n    const where = this.npm.flatOptions.location\n    const file = this.npm.config.data.get(where).source\n\n    // save first, just to make sure it's synced up\n    // this also removes all the comments from the last time we edited it.\n    await this.npm.config.save(where)\n\n    const data = (\n      await readFile(file, 'utf8').catch(() => '')\n    ).replace(/\\r\\n/g, '\\n')\n    const entries = Object.entries(configDefs.defaults)\n    const defData = entries.reduce((str, [key, val]) => {\n      const obj = { [key]: val }\n      const i = ini.stringify(obj)\n        .replace(/\\r\\n/g, '\\n') // normalizes output from ini.stringify\n        .replace(/\\n$/m, '')\n        .replace(/^/g, '; ')\n        .replace(/\\n/g, '\\n; ')\n        .split('\\n')\n      return str + '\\n' + i\n    }, '')\n\n    const tmpData = `;;;;\n; npm ${where}config file: ${file}\n; this is a simple ini-formatted file\n; lines that start with semi-colons are comments\n; run \\`npm help 7 config\\` for documentation of the various options\n;\n; Configs like \\`@scope:registry\\` map a scope to a given registry url.\n;\n; Configs like \\`//<hostname>/:_authToken\\` are auth that is restricted\n; to the registry host specified.\n\n${data.split('\\n').sort(localeCompare).join('\\n').trim()}\n\n;;;;\n; all available options shown below with default values\n;;;;\n\n${defData}\n`.split('\\n').join(EOL)\n    await mkdirp(dirname(file))\n    await writeFile(file, tmpData, 'utf8')\n    await new Promise((resolve, reject) => {\n      const [bin, ...args] = e.split(/\\s+/)\n      const editor = spawn(bin, [...args, file], { stdio: 'inherit' })\n      editor.on('exit', (code) => {\n        if (code)\n          return reject(new Error(`editor process exited with code: ${code}`))\n        return resolve()\n      })\n    })\n  }\n\n  async list () {\n    const msg = []\n    // long does not have a flattener\n    const long = this.npm.config.get('long')\n    for (const [where, { data, source }] of this.npm.config.data.entries()) {\n      if (where === 'default' && !long)\n        continue\n\n      const keys = Object.keys(data).sort(localeCompare)\n      if (!keys.length)\n        continue\n\n      msg.push(`; \"${where}\" config from ${source}`, '')\n      for (const k of keys) {\n        const v = publicVar(k) ? JSON.stringify(data[k]) : '(protected)'\n        const src = this.npm.config.find(k)\n        const overridden = src !== where\n        msg.push((overridden ? '; ' : '') +\n          `${k} = ${v} ${overridden ? `; overridden by ${src}` : ''}`)\n      }\n      msg.push('')\n    }\n\n    if (!long) {\n      msg.push(\n        `; node bin location = ${process.execPath}`,\n        `; cwd = ${process.cwd()}`,\n        `; HOME = ${process.env.HOME}`,\n        '; Run `npm config ls -l` to show all defaults.'\n      )\n    }\n\n    this.npm.output(msg.join('\\n').trim())\n  }\n\n  async listJson () {\n    const publicConf = {}\n    for (const key in this.npm.config.list[0]) {\n      if (!publicVar(key))\n        continue\n\n      publicConf[key] = this.npm.config.get(key)\n    }\n    this.npm.output(JSON.stringify(publicConf, null, 2))\n  }\n}\n\nmodule.exports = Config\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}