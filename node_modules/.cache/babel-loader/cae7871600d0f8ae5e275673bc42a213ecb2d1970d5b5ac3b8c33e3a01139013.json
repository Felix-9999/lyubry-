{"ast":null,"code":"const nopt = require('nopt');\nconst {\n  Umask,\n  validate: validateUmask\n} = require('./umask.js');\nconst semver = require('semver');\nconst validateSemver = (data, k, val) => {\n  const valid = semver.valid(val);\n  if (!valid) return false;\n  data[k] = valid;\n};\nconst noptValidatePath = nopt.typeDefs.path.validate;\nconst validatePath = (data, k, val) => {\n  if (typeof val !== 'string') return false;\n  return noptValidatePath(data, k, val);\n};\n\n// add descriptions so we can validate more usefully\nmodule.exports = {\n  ...nopt.typeDefs,\n  semver: {\n    type: semver,\n    validate: validateSemver,\n    description: 'full valid SemVer string'\n  },\n  Umask: {\n    type: Umask,\n    validate: validateUmask,\n    description: 'octal number in range 0o000..0o777 (0..511)'\n  },\n  url: {\n    ...nopt.typeDefs.url,\n    description: 'full url with \"http://\"'\n  },\n  path: {\n    ...nopt.typeDefs.path,\n    validate: validatePath,\n    description: 'valid filesystem path'\n  },\n  Number: {\n    ...nopt.typeDefs.Number,\n    description: 'numeric value'\n  },\n  Boolean: {\n    ...nopt.typeDefs.Boolean,\n    description: 'boolean value (true or false)'\n  },\n  Date: {\n    ...nopt.typeDefs.Date,\n    description: 'valid Date string'\n  }\n};\n\n// TODO: make nopt less of a global beast so this kludge isn't necessary\nnopt.typeDefs = module.exports;","map":{"version":3,"names":["nopt","require","Umask","validate","validateUmask","semver","validateSemver","data","k","val","valid","noptValidatePath","typeDefs","path","validatePath","module","exports","type","description","url","Number","Boolean","Date"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/config/lib/type-defs.js"],"sourcesContent":["const nopt = require('nopt')\n\nconst { Umask, validate: validateUmask } = require('./umask.js')\n\nconst semver = require('semver')\nconst validateSemver = (data, k, val) => {\n  const valid = semver.valid(val)\n  if (!valid)\n    return false\n  data[k] = valid\n}\n\nconst noptValidatePath = nopt.typeDefs.path.validate\nconst validatePath = (data, k, val) => {\n  if (typeof val !== 'string')\n    return false\n  return noptValidatePath(data, k, val)\n}\n\n// add descriptions so we can validate more usefully\nmodule.exports = {\n  ...nopt.typeDefs,\n  semver: {\n    type: semver,\n    validate: validateSemver,\n    description: 'full valid SemVer string',\n  },\n  Umask: {\n    type: Umask,\n    validate: validateUmask,\n    description: 'octal number in range 0o000..0o777 (0..511)',\n  },\n  url: {\n    ...nopt.typeDefs.url,\n    description: 'full url with \"http://\"',\n  },\n  path: {\n    ...nopt.typeDefs.path,\n    validate: validatePath,\n    description: 'valid filesystem path',\n  },\n  Number: {\n    ...nopt.typeDefs.Number,\n    description: 'numeric value',\n  },\n  Boolean: {\n    ...nopt.typeDefs.Boolean,\n    description: 'boolean value (true or false)',\n  },\n  Date: {\n    ...nopt.typeDefs.Date,\n    description: 'valid Date string',\n  },\n}\n\n// TODO: make nopt less of a global beast so this kludge isn't necessary\nnopt.typeDefs = module.exports\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAM;EAAEC,KAAK;EAAEC,QAAQ,EAAEC;AAAc,CAAC,GAAGH,OAAO,CAAC,YAAY,CAAC;AAEhE,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMK,cAAc,GAAGA,CAACC,IAAI,EAAEC,CAAC,EAAEC,GAAG,KAAK;EACvC,MAAMC,KAAK,GAAGL,MAAM,CAACK,KAAK,CAACD,GAAG,CAAC;EAC/B,IAAI,CAACC,KAAK,EACR,OAAO,KAAK;EACdH,IAAI,CAACC,CAAC,CAAC,GAAGE,KAAK;AACjB,CAAC;AAED,MAAMC,gBAAgB,GAAGX,IAAI,CAACY,QAAQ,CAACC,IAAI,CAACV,QAAQ;AACpD,MAAMW,YAAY,GAAGA,CAACP,IAAI,EAAEC,CAAC,EAAEC,GAAG,KAAK;EACrC,IAAI,OAAOA,GAAG,KAAK,QAAQ,EACzB,OAAO,KAAK;EACd,OAAOE,gBAAgB,CAACJ,IAAI,EAAEC,CAAC,EAAEC,GAAG,CAAC;AACvC,CAAC;;AAED;AACAM,MAAM,CAACC,OAAO,GAAG;EACf,GAAGhB,IAAI,CAACY,QAAQ;EAChBP,MAAM,EAAE;IACNY,IAAI,EAAEZ,MAAM;IACZF,QAAQ,EAAEG,cAAc;IACxBY,WAAW,EAAE;EACf,CAAC;EACDhB,KAAK,EAAE;IACLe,IAAI,EAAEf,KAAK;IACXC,QAAQ,EAAEC,aAAa;IACvBc,WAAW,EAAE;EACf,CAAC;EACDC,GAAG,EAAE;IACH,GAAGnB,IAAI,CAACY,QAAQ,CAACO,GAAG;IACpBD,WAAW,EAAE;EACf,CAAC;EACDL,IAAI,EAAE;IACJ,GAAGb,IAAI,CAACY,QAAQ,CAACC,IAAI;IACrBV,QAAQ,EAAEW,YAAY;IACtBI,WAAW,EAAE;EACf,CAAC;EACDE,MAAM,EAAE;IACN,GAAGpB,IAAI,CAACY,QAAQ,CAACQ,MAAM;IACvBF,WAAW,EAAE;EACf,CAAC;EACDG,OAAO,EAAE;IACP,GAAGrB,IAAI,CAACY,QAAQ,CAACS,OAAO;IACxBH,WAAW,EAAE;EACf,CAAC;EACDI,IAAI,EAAE;IACJ,GAAGtB,IAAI,CAACY,QAAQ,CAACU,IAAI;IACrBJ,WAAW,EAAE;EACf;AACF,CAAC;;AAED;AACAlB,IAAI,CAACY,QAAQ,GAAGG,MAAM,CAACC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}