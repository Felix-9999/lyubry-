{"ast":null,"code":"'use strict';\n\nconst fetch = require('npm-registry-fetch');\nconst {\n  HttpErrorBase\n} = require('npm-registry-fetch/errors.js');\nconst os = require('os');\nconst {\n  URL\n} = require('url');\n\n// try loginWeb, catch the \"not supported\" message and fall back to couch\nconst login = (opener, prompter, opts = {}) => {\n  const {\n    creds\n  } = opts;\n  return loginWeb(opener, opts).catch(er => {\n    if (er instanceof WebLoginNotSupported) {\n      process.emit('log', 'verbose', 'web login not supported, trying couch');\n      return prompter(creds).then(data => loginCouch(data.username, data.password, opts));\n    } else {\n      throw er;\n    }\n  });\n};\nconst adduser = (opener, prompter, opts = {}) => {\n  const {\n    creds\n  } = opts;\n  return adduserWeb(opener, opts).catch(er => {\n    if (er instanceof WebLoginNotSupported) {\n      process.emit('log', 'verbose', 'web adduser not supported, trying couch');\n      return prompter(creds).then(data => adduserCouch(data.username, data.email, data.password, opts));\n    } else {\n      throw er;\n    }\n  });\n};\nconst adduserWeb = (opener, opts = {}) => {\n  process.emit('log', 'verbose', 'web adduser', 'before first POST');\n  return webAuth(opener, opts, {\n    create: true\n  });\n};\nconst loginWeb = (opener, opts = {}) => {\n  process.emit('log', 'verbose', 'web login', 'before first POST');\n  return webAuth(opener, opts, {});\n};\nconst isValidUrl = u => {\n  try {\n    return /^https?:$/.test(new URL(u).protocol);\n  } catch (er) {\n    return false;\n  }\n};\nconst webAuth = (opener, opts, body) => {\n  const {\n    hostname\n  } = opts;\n  body.hostname = hostname || os.hostname();\n  const target = '/-/v1/login';\n  return fetch(target, {\n    ...opts,\n    method: 'POST',\n    body\n  }).then(res => {\n    return Promise.all([res, res.json()]);\n  }).then(([res, content]) => {\n    const {\n      doneUrl,\n      loginUrl\n    } = content;\n    process.emit('log', 'verbose', 'web auth', 'got response', content);\n    if (!isValidUrl(doneUrl) || !isValidUrl(loginUrl)) {\n      throw new WebLoginInvalidResponse('POST', res, content);\n    }\n    return content;\n  }).then(({\n    doneUrl,\n    loginUrl\n  }) => {\n    process.emit('log', 'verbose', 'web auth', 'opening url pair');\n    return opener(loginUrl).then(() => webAuthCheckLogin(doneUrl, {\n      ...opts,\n      cache: false\n    }));\n  }).catch(er => {\n    if (er.statusCode >= 400 && er.statusCode <= 499 || er.statusCode === 500) {\n      throw new WebLoginNotSupported('POST', {\n        status: er.statusCode,\n        headers: {\n          raw: () => er.headers\n        }\n      }, er.body);\n    } else {\n      throw er;\n    }\n  });\n};\nconst webAuthCheckLogin = (doneUrl, opts) => {\n  return fetch(doneUrl, opts).then(res => {\n    return Promise.all([res, res.json()]);\n  }).then(([res, content]) => {\n    if (res.status === 200) {\n      if (!content.token) {\n        throw new WebLoginInvalidResponse('GET', res, content);\n      } else {\n        return content;\n      }\n    } else if (res.status === 202) {\n      const retry = +res.headers.get('retry-after') * 1000;\n      if (retry > 0) {\n        return sleep(retry).then(() => webAuthCheckLogin(doneUrl, opts));\n      } else {\n        return webAuthCheckLogin(doneUrl, opts);\n      }\n    } else {\n      throw new WebLoginInvalidResponse('GET', res, content);\n    }\n  });\n};\nconst adduserCouch = (username, email, password, opts = {}) => {\n  const body = {\n    _id: 'org.couchdb.user:' + username,\n    name: username,\n    password: password,\n    email: email,\n    type: 'user',\n    roles: [],\n    date: new Date().toISOString()\n  };\n  const logObj = {\n    ...body,\n    password: 'XXXXX'\n  };\n  process.emit('log', 'verbose', 'adduser', 'before first PUT', logObj);\n  const target = '/-/user/org.couchdb.user:' + encodeURIComponent(username);\n  return fetch.json(target, {\n    ...opts,\n    method: 'PUT',\n    body\n  }).then(result => {\n    result.username = username;\n    return result;\n  });\n};\nconst loginCouch = (username, password, opts = {}) => {\n  const body = {\n    _id: 'org.couchdb.user:' + username,\n    name: username,\n    password: password,\n    type: 'user',\n    roles: [],\n    date: new Date().toISOString()\n  };\n  const logObj = {\n    ...body,\n    password: 'XXXXX'\n  };\n  process.emit('log', 'verbose', 'login', 'before first PUT', logObj);\n  const target = '-/user/org.couchdb.user:' + encodeURIComponent(username);\n  return fetch.json(target, {\n    ...opts,\n    method: 'PUT',\n    body\n  }).catch(err => {\n    if (err.code === 'E400') {\n      err.message = `There is no user with the username \"${username}\".`;\n      throw err;\n    }\n    if (err.code !== 'E409') throw err;\n    return fetch.json(target, {\n      ...opts,\n      query: {\n        write: true\n      }\n    }).then(result => {\n      Object.keys(result).forEach(k => {\n        if (!body[k] || k === 'roles') {\n          body[k] = result[k];\n        }\n      });\n      const {\n        otp\n      } = opts;\n      return fetch.json(`${target}/-rev/${body._rev}`, {\n        ...opts,\n        method: 'PUT',\n        body,\n        forceAuth: {\n          username,\n          password: Buffer.from(password, 'utf8').toString('base64'),\n          otp\n        }\n      });\n    });\n  }).then(result => {\n    result.username = username;\n    return result;\n  });\n};\nconst get = (opts = {}) => fetch.json('/-/npm/v1/user', opts);\nconst set = (profile, opts = {}) => {\n  Object.keys(profile).forEach(key => {\n    // profile keys can't be empty strings, but they CAN be null\n    if (profile[key] === '') profile[key] = null;\n  });\n  return fetch.json('/-/npm/v1/user', {\n    ...opts,\n    method: 'POST',\n    body: profile\n  });\n};\nconst listTokens = (opts = {}) => {\n  const untilLastPage = (href, objects) => {\n    return fetch.json(href, opts).then(result => {\n      objects = objects ? objects.concat(result.objects) : result.objects;\n      if (result.urls.next) {\n        return untilLastPage(result.urls.next, objects);\n      } else {\n        return objects;\n      }\n    });\n  };\n  return untilLastPage('/-/npm/v1/tokens');\n};\nconst removeToken = (tokenKey, opts = {}) => {\n  const target = `/-/npm/v1/tokens/token/${tokenKey}`;\n  return fetch(target, {\n    ...opts,\n    method: 'DELETE',\n    ignoreBody: true\n  }).then(() => null);\n};\nconst createToken = (password, readonly, cidrs, opts = {}) => {\n  return fetch.json('/-/npm/v1/tokens', {\n    ...opts,\n    method: 'POST',\n    body: {\n      password: password,\n      readonly: readonly,\n      cidr_whitelist: cidrs\n    }\n  });\n};\nclass WebLoginInvalidResponse extends HttpErrorBase {\n  constructor(method, res, body) {\n    super(method, res, body);\n    this.message = 'Invalid response from web login endpoint';\n    Error.captureStackTrace(this, WebLoginInvalidResponse);\n  }\n}\nclass WebLoginNotSupported extends HttpErrorBase {\n  constructor(method, res, body) {\n    super(method, res, body);\n    this.message = 'Web login not supported';\n    this.code = 'ENYI';\n    Error.captureStackTrace(this, WebLoginNotSupported);\n  }\n}\nconst sleep = ms => new Promise((resolve, reject) => setTimeout(resolve, ms));\nmodule.exports = {\n  adduserCouch,\n  loginCouch,\n  adduserWeb,\n  loginWeb,\n  login,\n  adduser,\n  get,\n  set,\n  listTokens,\n  removeToken,\n  createToken\n};","map":{"version":3,"names":["fetch","require","HttpErrorBase","os","URL","login","opener","prompter","opts","creds","loginWeb","catch","er","WebLoginNotSupported","process","emit","then","data","loginCouch","username","password","adduser","adduserWeb","adduserCouch","email","webAuth","create","isValidUrl","u","test","protocol","body","hostname","target","method","res","Promise","all","json","content","doneUrl","loginUrl","WebLoginInvalidResponse","webAuthCheckLogin","cache","statusCode","status","headers","raw","token","retry","get","sleep","_id","name","type","roles","date","Date","toISOString","logObj","encodeURIComponent","result","err","code","message","query","write","Object","keys","forEach","k","otp","_rev","forceAuth","Buffer","from","toString","set","profile","key","listTokens","untilLastPage","href","objects","concat","urls","next","removeToken","tokenKey","ignoreBody","createToken","readonly","cidrs","cidr_whitelist","constructor","Error","captureStackTrace","ms","resolve","reject","setTimeout","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/npm-profile/index.js"],"sourcesContent":["'use strict'\n\nconst fetch = require('npm-registry-fetch')\nconst { HttpErrorBase } = require('npm-registry-fetch/errors.js')\nconst os = require('os')\nconst { URL } = require('url')\n\n// try loginWeb, catch the \"not supported\" message and fall back to couch\nconst login = (opener, prompter, opts = {}) => {\n  const { creds } = opts\n  return loginWeb(opener, opts).catch(er => {\n    if (er instanceof WebLoginNotSupported) {\n      process.emit('log', 'verbose', 'web login not supported, trying couch')\n      return prompter(creds)\n        .then(data => loginCouch(data.username, data.password, opts))\n    } else {\n      throw er\n    }\n  })\n}\n\nconst adduser = (opener, prompter, opts = {}) => {\n  const { creds } = opts\n  return adduserWeb(opener, opts).catch(er => {\n    if (er instanceof WebLoginNotSupported) {\n      process.emit('log', 'verbose', 'web adduser not supported, trying couch')\n      return prompter(creds)\n        .then(data => adduserCouch(data.username, data.email, data.password, opts))\n    } else {\n      throw er\n    }\n  })\n}\n\nconst adduserWeb = (opener, opts = {}) => {\n  process.emit('log', 'verbose', 'web adduser', 'before first POST')\n  return webAuth(opener, opts, { create: true })\n}\n\nconst loginWeb = (opener, opts = {}) => {\n  process.emit('log', 'verbose', 'web login', 'before first POST')\n  return webAuth(opener, opts, {})\n}\n\nconst isValidUrl = u => {\n  try {\n    return /^https?:$/.test(new URL(u).protocol)\n  } catch (er) {\n    return false\n  }\n}\n\nconst webAuth = (opener, opts, body) => {\n  const { hostname } = opts\n  body.hostname = hostname || os.hostname()\n  const target = '/-/v1/login'\n  return fetch(target, {\n    ...opts,\n    method: 'POST',\n    body\n  }).then(res => {\n    return Promise.all([res, res.json()])\n  }).then(([res, content]) => {\n    const { doneUrl, loginUrl } = content\n    process.emit('log', 'verbose', 'web auth', 'got response', content)\n    if (!isValidUrl(doneUrl) || !isValidUrl(loginUrl)) {\n      throw new WebLoginInvalidResponse('POST', res, content)\n    }\n    return content\n  }).then(({ doneUrl, loginUrl }) => {\n    process.emit('log', 'verbose', 'web auth', 'opening url pair')\n    return opener(loginUrl).then(\n      () => webAuthCheckLogin(doneUrl, { ...opts, cache: false })\n    )\n  }).catch(er => {\n    if ((er.statusCode >= 400 && er.statusCode <= 499) || er.statusCode === 500) {\n      throw new WebLoginNotSupported('POST', {\n        status: er.statusCode,\n        headers: { raw: () => er.headers }\n      }, er.body)\n    } else {\n      throw er\n    }\n  })\n}\n\nconst webAuthCheckLogin = (doneUrl, opts) => {\n  return fetch(doneUrl, opts).then(res => {\n    return Promise.all([res, res.json()])\n  }).then(([res, content]) => {\n    if (res.status === 200) {\n      if (!content.token) {\n        throw new WebLoginInvalidResponse('GET', res, content)\n      } else {\n        return content\n      }\n    } else if (res.status === 202) {\n      const retry = +res.headers.get('retry-after') * 1000\n      if (retry > 0) {\n        return sleep(retry).then(() => webAuthCheckLogin(doneUrl, opts))\n      } else {\n        return webAuthCheckLogin(doneUrl, opts)\n      }\n    } else {\n      throw new WebLoginInvalidResponse('GET', res, content)\n    }\n  })\n}\n\nconst adduserCouch = (username, email, password, opts = {}) => {\n  const body = {\n    _id: 'org.couchdb.user:' + username,\n    name: username,\n    password: password,\n    email: email,\n    type: 'user',\n    roles: [],\n    date: new Date().toISOString()\n  }\n  const logObj = {\n    ...body,\n    password: 'XXXXX'\n  }\n  process.emit('log', 'verbose', 'adduser', 'before first PUT', logObj)\n\n  const target = '/-/user/org.couchdb.user:' + encodeURIComponent(username)\n  return fetch.json(target, {\n    ...opts,\n    method: 'PUT',\n    body\n  }).then(result => {\n    result.username = username\n    return result\n  })\n}\n\nconst loginCouch = (username, password, opts = {}) => {\n  const body = {\n    _id: 'org.couchdb.user:' + username,\n    name: username,\n    password: password,\n    type: 'user',\n    roles: [],\n    date: new Date().toISOString()\n  }\n  const logObj = {\n    ...body,\n    password: 'XXXXX'\n  }\n  process.emit('log', 'verbose', 'login', 'before first PUT', logObj)\n\n  const target = '-/user/org.couchdb.user:' + encodeURIComponent(username)\n  return fetch.json(target, {\n    ...opts,\n    method: 'PUT',\n    body\n  }).catch(err => {\n    if (err.code === 'E400') {\n      err.message = `There is no user with the username \"${username}\".`\n      throw err\n    }\n    if (err.code !== 'E409') throw err\n    return fetch.json(target, {\n      ...opts,\n      query: { write: true }\n    }).then(result => {\n      Object.keys(result).forEach(k => {\n        if (!body[k] || k === 'roles') {\n          body[k] = result[k]\n        }\n      })\n      const { otp } = opts\n      return fetch.json(`${target}/-rev/${body._rev}`, {\n        ...opts,\n        method: 'PUT',\n        body,\n        forceAuth: {\n          username,\n          password: Buffer.from(password, 'utf8').toString('base64'),\n          otp\n        }\n      })\n    })\n  }).then(result => {\n    result.username = username\n    return result\n  })\n}\n\nconst get = (opts = {}) => fetch.json('/-/npm/v1/user', opts)\n\nconst set = (profile, opts = {}) => {\n  Object.keys(profile).forEach(key => {\n    // profile keys can't be empty strings, but they CAN be null\n    if (profile[key] === '') profile[key] = null\n  })\n  return fetch.json('/-/npm/v1/user', {\n    ...opts,\n    method: 'POST',\n    body: profile\n  })\n}\n\nconst listTokens = (opts = {}) => {\n  const untilLastPage = (href, objects) => {\n    return fetch.json(href, opts).then(result => {\n      objects = objects ? objects.concat(result.objects) : result.objects\n      if (result.urls.next) {\n        return untilLastPage(result.urls.next, objects)\n      } else {\n        return objects\n      }\n    })\n  }\n  return untilLastPage('/-/npm/v1/tokens')\n}\n\nconst removeToken = (tokenKey, opts = {}) => {\n  const target = `/-/npm/v1/tokens/token/${tokenKey}`\n  return fetch(target, {\n    ...opts,\n    method: 'DELETE',\n    ignoreBody: true\n  }).then(() => null)\n}\n\nconst createToken = (password, readonly, cidrs, opts = {}) => {\n  return fetch.json('/-/npm/v1/tokens', {\n    ...opts,\n    method: 'POST',\n    body: {\n      password: password,\n      readonly: readonly,\n      cidr_whitelist: cidrs\n    }\n  })\n}\n\nclass WebLoginInvalidResponse extends HttpErrorBase {\n  constructor (method, res, body) {\n    super(method, res, body)\n    this.message = 'Invalid response from web login endpoint'\n    Error.captureStackTrace(this, WebLoginInvalidResponse)\n  }\n}\n\nclass WebLoginNotSupported extends HttpErrorBase {\n  constructor (method, res, body) {\n    super(method, res, body)\n    this.message = 'Web login not supported'\n    this.code = 'ENYI'\n    Error.captureStackTrace(this, WebLoginNotSupported)\n  }\n}\n\nconst sleep = (ms) =>\n  new Promise((resolve, reject) => setTimeout(resolve, ms))\n\nmodule.exports = {\n  adduserCouch,\n  loginCouch,\n  adduserWeb,\n  loginWeb,\n  login,\n  adduser,\n  get,\n  set,\n  listTokens,\n  removeToken,\n  createToken\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}