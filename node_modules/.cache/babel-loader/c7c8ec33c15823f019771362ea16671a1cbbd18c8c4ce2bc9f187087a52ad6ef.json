{"ast":null,"code":"// dedupe duplicated packages, or find them in the tree\nconst Arborist = require('@npmcli/arborist');\nconst reifyFinish = require('./utils/reify-finish.js');\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js');\nclass Dedupe extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Reduce duplication in the package tree';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'dedupe';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['global-style', 'legacy-bundling', 'strict-peer-deps', 'package-lock', 'omit', 'ignore-scripts', 'audit', 'bin-links', 'fund', 'dry-run', ...super.params];\n  }\n  exec(args, cb) {\n    this.dedupe(args).then(() => cb()).catch(cb);\n  }\n  async dedupe(args) {\n    if (this.npm.config.get('global')) {\n      const er = new Error('`npm dedupe` does not work in global mode.');\n      er.code = 'EDEDUPEGLOBAL';\n      throw er;\n    }\n    const dryRun = this.npm.config.get('dry-run');\n    const where = this.npm.prefix;\n    const opts = {\n      ...this.npm.flatOptions,\n      log: this.npm.log,\n      path: where,\n      dryRun,\n      workspaces: this.workspaceNames\n    };\n    const arb = new Arborist(opts);\n    await arb.dedupe(opts);\n    await reifyFinish(this.npm, arb);\n  }\n}\nmodule.exports = Dedupe;","map":{"version":3,"names":["Arborist","require","reifyFinish","ArboristWorkspaceCmd","Dedupe","description","name","params","exec","args","cb","dedupe","then","catch","npm","config","get","er","Error","code","dryRun","where","prefix","opts","flatOptions","log","path","workspaces","workspaceNames","arb","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/dedupe.js"],"sourcesContent":["// dedupe duplicated packages, or find them in the tree\nconst Arborist = require('@npmcli/arborist')\nconst reifyFinish = require('./utils/reify-finish.js')\n\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js')\n\nclass Dedupe extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Reduce duplication in the package tree'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'dedupe'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'global-style',\n      'legacy-bundling',\n      'strict-peer-deps',\n      'package-lock',\n      'omit',\n      'ignore-scripts',\n      'audit',\n      'bin-links',\n      'fund',\n      'dry-run',\n      ...super.params,\n    ]\n  }\n\n  exec (args, cb) {\n    this.dedupe(args).then(() => cb()).catch(cb)\n  }\n\n  async dedupe (args) {\n    if (this.npm.config.get('global')) {\n      const er = new Error('`npm dedupe` does not work in global mode.')\n      er.code = 'EDEDUPEGLOBAL'\n      throw er\n    }\n\n    const dryRun = this.npm.config.get('dry-run')\n    const where = this.npm.prefix\n    const opts = {\n      ...this.npm.flatOptions,\n      log: this.npm.log,\n      path: where,\n      dryRun,\n      workspaces: this.workspaceNames,\n    }\n    const arb = new Arborist(opts)\n    await arb.dedupe(opts)\n    await reifyFinish(this.npm, arb)\n  }\n}\n\nmodule.exports = Dedupe\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC5C,MAAMC,WAAW,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAEtD,MAAME,oBAAoB,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AAEpE,MAAMG,MAAM,SAASD,oBAAoB,CAAC;EACxC;EACA,WAAWE,WAAWA,CAAA,EAAI;IACxB,OAAO,wCAAwC;EACjD;;EAEA;EACA,WAAWC,IAAIA,CAAA,EAAI;IACjB,OAAO,QAAQ;EACjB;;EAEA;EACA,WAAWC,MAAMA,CAAA,EAAI;IACnB,OAAO,CACL,cAAc,EACd,iBAAiB,EACjB,kBAAkB,EAClB,cAAc,EACd,MAAM,EACN,gBAAgB,EAChB,OAAO,EACP,WAAW,EACX,MAAM,EACN,SAAS,EACT,GAAG,KAAK,CAACA,MAAM,CAChB;EACH;EAEAC,IAAIA,CAAEC,IAAI,EAAEC,EAAE,EAAE;IACd,IAAI,CAACC,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,MAAMF,EAAE,CAAC,CAAC,CAAC,CAACG,KAAK,CAACH,EAAE,CAAC;EAC9C;EAEA,MAAMC,MAAMA,CAAEF,IAAI,EAAE;IAClB,IAAI,IAAI,CAACK,GAAG,CAACC,MAAM,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAE;MACjC,MAAMC,EAAE,GAAG,IAAIC,KAAK,CAAC,4CAA4C,CAAC;MAClED,EAAE,CAACE,IAAI,GAAG,eAAe;MACzB,MAAMF,EAAE;IACV;IAEA,MAAMG,MAAM,GAAG,IAAI,CAACN,GAAG,CAACC,MAAM,CAACC,GAAG,CAAC,SAAS,CAAC;IAC7C,MAAMK,KAAK,GAAG,IAAI,CAACP,GAAG,CAACQ,MAAM;IAC7B,MAAMC,IAAI,GAAG;MACX,GAAG,IAAI,CAACT,GAAG,CAACU,WAAW;MACvBC,GAAG,EAAE,IAAI,CAACX,GAAG,CAACW,GAAG;MACjBC,IAAI,EAAEL,KAAK;MACXD,MAAM;MACNO,UAAU,EAAE,IAAI,CAACC;IACnB,CAAC;IACD,MAAMC,GAAG,GAAG,IAAI7B,QAAQ,CAACuB,IAAI,CAAC;IAC9B,MAAMM,GAAG,CAAClB,MAAM,CAACY,IAAI,CAAC;IACtB,MAAMrB,WAAW,CAAC,IAAI,CAACY,GAAG,EAAEe,GAAG,CAAC;EAClC;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG3B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}