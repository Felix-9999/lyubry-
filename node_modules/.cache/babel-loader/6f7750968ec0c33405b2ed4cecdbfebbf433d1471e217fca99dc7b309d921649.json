{"ast":null,"code":"const log = require('npmlog');\nconst {\n  inspect\n} = require('util');\nmodule.exports = () => {\n  process.on('log', (level, ...args) => {\n    try {\n      log[level](...args);\n    } catch (ex) {\n      try {\n        // if it crashed once, it might again!\n        log.verbose(`attempt to log ${inspect([level, ...args])} crashed`, ex);\n      } catch (ex2) {\n        console.error(`attempt to log ${inspect([level, ...args])} crashed`, ex);\n      }\n    }\n  });\n};\n\n// for tests\n/* istanbul ignore next */\nmodule.exports.reset = () => {\n  process.removeAllListeners('log');\n};","map":{"version":3,"names":["log","require","inspect","module","exports","process","on","level","args","ex","verbose","ex2","console","error","reset","removeAllListeners"],"sources":["C:/Users/Felo/node_modules/npm/lib/utils/proc-log-listener.js"],"sourcesContent":["const log = require('npmlog')\nconst { inspect } = require('util')\nmodule.exports = () => {\n  process.on('log', (level, ...args) => {\n    try {\n      log[level](...args)\n    } catch (ex) {\n      try {\n        // if it crashed once, it might again!\n        log.verbose(`attempt to log ${inspect([level, ...args])} crashed`, ex)\n      } catch (ex2) {\n        console.error(`attempt to log ${inspect([level, ...args])} crashed`, ex)\n      }\n    }\n  })\n}\n\n// for tests\n/* istanbul ignore next */\nmodule.exports.reset = () => {\n  process.removeAllListeners('log')\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC7B,MAAM;EAAEC;AAAQ,CAAC,GAAGD,OAAO,CAAC,MAAM,CAAC;AACnCE,MAAM,CAACC,OAAO,GAAG,MAAM;EACrBC,OAAO,CAACC,EAAE,CAAC,KAAK,EAAE,CAACC,KAAK,EAAE,GAAGC,IAAI,KAAK;IACpC,IAAI;MACFR,GAAG,CAACO,KAAK,CAAC,CAAC,GAAGC,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOC,EAAE,EAAE;MACX,IAAI;QACF;QACAT,GAAG,CAACU,OAAO,CAAC,kBAAkBR,OAAO,CAAC,CAACK,KAAK,EAAE,GAAGC,IAAI,CAAC,CAAC,UAAU,EAAEC,EAAE,CAAC;MACxE,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,kBAAkBX,OAAO,CAAC,CAACK,KAAK,EAAE,GAAGC,IAAI,CAAC,CAAC,UAAU,EAAEC,EAAE,CAAC;MAC1E;IACF;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACAN,MAAM,CAACC,OAAO,CAACU,KAAK,GAAG,MAAM;EAC3BT,OAAO,CAACU,kBAAkB,CAAC,KAAK,CAAC;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}