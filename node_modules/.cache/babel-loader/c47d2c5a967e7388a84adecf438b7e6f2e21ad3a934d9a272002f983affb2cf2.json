{"ast":null,"code":"const isWindows = require('./is-windows.js');\nconst binTarget = require('./bin-target.js');\nconst {\n  dirname,\n  resolve,\n  relative\n} = require('path');\nconst linkBin = isWindows ? require('./shim-bin.js') : require('./link-bin.js');\nconst normalize = require('npm-normalize-package-bin');\nconst linkBins = ({\n  path,\n  pkg,\n  top,\n  force\n}) => {\n  pkg = normalize(pkg);\n  if (!pkg.bin) return Promise.resolve([]);\n  const promises = [];\n  const target = binTarget({\n    path,\n    top\n  });\n  for (const [key, val] of Object.entries(pkg.bin)) {\n    const to = resolve(target, key);\n    const absFrom = resolve(path, val);\n    const from = relative(dirname(to), absFrom);\n    promises.push(linkBin({\n      path,\n      from,\n      to,\n      absFrom,\n      force\n    }));\n  }\n  return Promise.all(promises);\n};\nmodule.exports = linkBins;","map":{"version":3,"names":["isWindows","require","binTarget","dirname","resolve","relative","linkBin","normalize","linkBins","path","pkg","top","force","bin","Promise","promises","target","key","val","Object","entries","to","absFrom","from","push","all","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/bin-links/lib/link-bins.js"],"sourcesContent":["const isWindows = require('./is-windows.js')\nconst binTarget = require('./bin-target.js')\nconst { dirname, resolve, relative } = require('path')\nconst linkBin = isWindows ? require('./shim-bin.js') : require('./link-bin.js')\nconst normalize = require('npm-normalize-package-bin')\n\nconst linkBins = ({path, pkg, top, force}) => {\n  pkg = normalize(pkg)\n  if (!pkg.bin)\n    return Promise.resolve([])\n  const promises = []\n  const target = binTarget({path, top})\n  for (const [key, val] of Object.entries(pkg.bin)) {\n    const to = resolve(target, key)\n    const absFrom = resolve(path, val)\n    const from = relative(dirname(to), absFrom)\n    promises.push(linkBin({path, from, to, absFrom, force}))\n  }\n  return Promise.all(promises)\n}\n\nmodule.exports = linkBins\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC5C,MAAMC,SAAS,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC5C,MAAM;EAAEE,OAAO;EAAEC,OAAO;EAAEC;AAAS,CAAC,GAAGJ,OAAO,CAAC,MAAM,CAAC;AACtD,MAAMK,OAAO,GAAGN,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC,GAAGA,OAAO,CAAC,eAAe,CAAC;AAC/E,MAAMM,SAAS,GAAGN,OAAO,CAAC,2BAA2B,CAAC;AAEtD,MAAMO,QAAQ,GAAGA,CAAC;EAACC,IAAI;EAAEC,GAAG;EAAEC,GAAG;EAAEC;AAAK,CAAC,KAAK;EAC5CF,GAAG,GAAGH,SAAS,CAACG,GAAG,CAAC;EACpB,IAAI,CAACA,GAAG,CAACG,GAAG,EACV,OAAOC,OAAO,CAACV,OAAO,CAAC,EAAE,CAAC;EAC5B,MAAMW,QAAQ,GAAG,EAAE;EACnB,MAAMC,MAAM,GAAGd,SAAS,CAAC;IAACO,IAAI;IAAEE;EAAG,CAAC,CAAC;EACrC,KAAK,MAAM,CAACM,GAAG,EAAEC,GAAG,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACV,GAAG,CAACG,GAAG,CAAC,EAAE;IAChD,MAAMQ,EAAE,GAAGjB,OAAO,CAACY,MAAM,EAAEC,GAAG,CAAC;IAC/B,MAAMK,OAAO,GAAGlB,OAAO,CAACK,IAAI,EAAES,GAAG,CAAC;IAClC,MAAMK,IAAI,GAAGlB,QAAQ,CAACF,OAAO,CAACkB,EAAE,CAAC,EAAEC,OAAO,CAAC;IAC3CP,QAAQ,CAACS,IAAI,CAAClB,OAAO,CAAC;MAACG,IAAI;MAAEc,IAAI;MAAEF,EAAE;MAAEC,OAAO;MAAEV;IAAK,CAAC,CAAC,CAAC;EAC1D;EACA,OAAOE,OAAO,CAACW,GAAG,CAACV,QAAQ,CAAC;AAC9B,CAAC;AAEDW,MAAM,CAACC,OAAO,GAAGnB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}