{"ast":null,"code":"const BaseCommand = require('./base-command.js');\nclass Root extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Display npm root';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'root';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['global'];\n  }\n  exec(args, cb) {\n    this.root(args).then(() => cb()).catch(cb);\n  }\n  async root() {\n    this.npm.output(this.npm.dir);\n  }\n}\nmodule.exports = Root;","map":{"version":3,"names":["BaseCommand","require","Root","description","name","params","exec","args","cb","root","then","catch","npm","output","dir","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/root.js"],"sourcesContent":["const BaseCommand = require('./base-command.js')\nclass Root extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Display npm root'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'root'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['global']\n  }\n\n  exec (args, cb) {\n    this.root(args).then(() => cb()).catch(cb)\n  }\n\n  async root () {\n    this.npm.output(this.npm.dir)\n  }\n}\nmodule.exports = Root\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAChD,MAAMC,IAAI,SAASF,WAAW,CAAC;EAC7B;EACA,WAAWG,WAAWA,CAAA,EAAI;IACxB,OAAO,kBAAkB;EAC3B;;EAEA;EACA,WAAWC,IAAIA,CAAA,EAAI;IACjB,OAAO,MAAM;EACf;;EAEA;EACA,WAAWC,MAAMA,CAAA,EAAI;IACnB,OAAO,CAAC,QAAQ,CAAC;EACnB;EAEAC,IAAIA,CAAEC,IAAI,EAAEC,EAAE,EAAE;IACd,IAAI,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,MAAMF,EAAE,CAAC,CAAC,CAAC,CAACG,KAAK,CAACH,EAAE,CAAC;EAC5C;EAEA,MAAMC,IAAIA,CAAA,EAAI;IACZ,IAAI,CAACG,GAAG,CAACC,MAAM,CAAC,IAAI,CAACD,GAAG,CAACE,GAAG,CAAC;EAC/B;AACF;AACAC,MAAM,CAACC,OAAO,GAAGd,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}