{"ast":null,"code":"const mapWorkspaces = require('@npmcli/map-workspaces');\nconst _appendWorkspaces = Symbol('appendWorkspaces');\n// shared ref used by other mixins/Arborist\nconst _loadWorkspaces = Symbol.for('loadWorkspaces');\nconst _loadWorkspacesVirtual = Symbol.for('loadWorkspacesVirtual');\nmodule.exports = cls => class MapWorkspaces extends cls {\n  [_appendWorkspaces](node, workspaces) {\n    if (node && workspaces.size) {\n      node.workspaces = workspaces;\n    }\n    return node;\n  }\n  async [_loadWorkspaces](node) {\n    if (node.workspaces) {\n      return node;\n    }\n    const workspaces = await mapWorkspaces({\n      cwd: node.path,\n      pkg: node.package\n    });\n    return this[_appendWorkspaces](node, workspaces);\n  }\n  [_loadWorkspacesVirtual](opts) {\n    return mapWorkspaces.virtual(opts);\n  }\n};","map":{"version":3,"names":["mapWorkspaces","require","_appendWorkspaces","Symbol","_loadWorkspaces","for","_loadWorkspacesVirtual","module","exports","cls","MapWorkspaces","node","workspaces","size","cwd","path","pkg","package","opts","virtual"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/arborist/lib/arborist/load-workspaces.js"],"sourcesContent":["const mapWorkspaces = require('@npmcli/map-workspaces')\n\nconst _appendWorkspaces = Symbol('appendWorkspaces')\n// shared ref used by other mixins/Arborist\nconst _loadWorkspaces = Symbol.for('loadWorkspaces')\nconst _loadWorkspacesVirtual = Symbol.for('loadWorkspacesVirtual')\n\nmodule.exports = cls => class MapWorkspaces extends cls {\n  [_appendWorkspaces] (node, workspaces) {\n    if (node && workspaces.size) {\n      node.workspaces = workspaces\n    }\n\n    return node\n  }\n\n  async [_loadWorkspaces] (node) {\n    if (node.workspaces) {\n      return node\n    }\n\n    const workspaces = await mapWorkspaces({\n      cwd: node.path,\n      pkg: node.package,\n    })\n\n    return this[_appendWorkspaces](node, workspaces)\n  }\n\n  [_loadWorkspacesVirtual] (opts) {\n    return mapWorkspaces.virtual(opts)\n  }\n}\n"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAEvD,MAAMC,iBAAiB,GAAGC,MAAM,CAAC,kBAAkB,CAAC;AACpD;AACA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAG,CAAC,gBAAgB,CAAC;AACpD,MAAMC,sBAAsB,GAAGH,MAAM,CAACE,GAAG,CAAC,uBAAuB,CAAC;AAElEE,MAAM,CAACC,OAAO,GAAGC,GAAG,IAAI,MAAMC,aAAa,SAASD,GAAG,CAAC;EACtD,CAACP,iBAAiB,EAAGS,IAAI,EAAEC,UAAU,EAAE;IACrC,IAAID,IAAI,IAAIC,UAAU,CAACC,IAAI,EAAE;MAC3BF,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC9B;IAEA,OAAOD,IAAI;EACb;EAEA,OAAOP,eAAe,EAAGO,IAAI,EAAE;IAC7B,IAAIA,IAAI,CAACC,UAAU,EAAE;MACnB,OAAOD,IAAI;IACb;IAEA,MAAMC,UAAU,GAAG,MAAMZ,aAAa,CAAC;MACrCc,GAAG,EAAEH,IAAI,CAACI,IAAI;MACdC,GAAG,EAAEL,IAAI,CAACM;IACZ,CAAC,CAAC;IAEF,OAAO,IAAI,CAACf,iBAAiB,CAAC,CAACS,IAAI,EAAEC,UAAU,CAAC;EAClD;EAEA,CAACN,sBAAsB,EAAGY,IAAI,EAAE;IAC9B,OAAOlB,aAAa,CAACmB,OAAO,CAACD,IAAI,CAAC;EACpC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}