{"ast":null,"code":"const crypto = require('crypto');\nconst {\n  dirname,\n  basename,\n  resolve\n} = require('path');\n\n// use sha1 because it's faster, and collisions extremely unlikely anyway\nconst pathSafeHash = s => crypto.createHash('sha1').update(s).digest('base64').replace(/[^a-zA-Z0-9]+/g, '').substr(0, 8);\nconst retirePath = from => {\n  const d = dirname(from);\n  const b = basename(from);\n  const hash = pathSafeHash(from);\n  return resolve(d, `.${b}-${hash}`);\n};\nmodule.exports = retirePath;","map":{"version":3,"names":["crypto","require","dirname","basename","resolve","pathSafeHash","s","createHash","update","digest","replace","substr","retirePath","from","d","b","hash","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/arborist/lib/retire-path.js"],"sourcesContent":["const crypto = require('crypto')\nconst {dirname, basename, resolve} = require('path')\n\n// use sha1 because it's faster, and collisions extremely unlikely anyway\nconst pathSafeHash = s =>\n  crypto.createHash('sha1')\n    .update(s)\n    .digest('base64')\n    .replace(/[^a-zA-Z0-9]+/g, '')\n    .substr(0, 8)\n\nconst retirePath = from => {\n  const d = dirname(from)\n  const b = basename(from)\n  const hash = pathSafeHash(from)\n  return resolve(d, `.${b}-${hash}`)\n}\n\nmodule.exports = retirePath\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAM;EAACC,OAAO;EAAEC,QAAQ;EAAEC;AAAO,CAAC,GAAGH,OAAO,CAAC,MAAM,CAAC;;AAEpD;AACA,MAAMI,YAAY,GAAGC,CAAC,IACpBN,MAAM,CAACO,UAAU,CAAC,MAAM,CAAC,CACtBC,MAAM,CAACF,CAAC,CAAC,CACTG,MAAM,CAAC,QAAQ,CAAC,CAChBC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAC7BC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAEjB,MAAMC,UAAU,GAAGC,IAAI,IAAI;EACzB,MAAMC,CAAC,GAAGZ,OAAO,CAACW,IAAI,CAAC;EACvB,MAAME,CAAC,GAAGZ,QAAQ,CAACU,IAAI,CAAC;EACxB,MAAMG,IAAI,GAAGX,YAAY,CAACQ,IAAI,CAAC;EAC/B,OAAOT,OAAO,CAACU,CAAC,EAAE,IAAIC,CAAC,IAAIC,IAAI,EAAE,CAAC;AACpC,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGN,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}