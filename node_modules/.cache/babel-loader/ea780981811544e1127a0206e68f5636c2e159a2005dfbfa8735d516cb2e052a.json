{"ast":null,"code":"const path = require('path');\nconst libaccess = require('libnpmaccess');\nconst readPackageJson = require('read-package-json-fast');\nconst otplease = require('./utils/otplease.js');\nconst getIdentity = require('./utils/get-identity.js');\nconst BaseCommand = require('./base-command.js');\nconst subcommands = ['public', 'restricted', 'grant', 'revoke', 'ls-packages', 'ls-collaborators', 'edit', '2fa-required', '2fa-not-required'];\nclass Access extends BaseCommand {\n  static get description() {\n    return 'Set access level on published packages';\n  }\n  static get name() {\n    return 'access';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['registry', 'otp'];\n  }\n  static get usage() {\n    return ['public [<package>]', 'restricted [<package>]', 'grant <read-only|read-write> <scope:team> [<package>]', 'revoke <scope:team> [<package>]', '2fa-required [<package>]', '2fa-not-required [<package>]', 'ls-packages [<user>|<scope>|<scope:team>]', 'ls-collaborators [<package> [<user>]]', 'edit [<package>]'];\n  }\n  async completion(opts) {\n    const argv = opts.conf.argv.remain;\n    if (argv.length === 2) return subcommands;\n    switch (argv[2]) {\n      case 'grant':\n        if (argv.length === 3) return ['read-only', 'read-write'];else return [];\n      case 'public':\n      case 'restricted':\n      case 'ls-packages':\n      case 'ls-collaborators':\n      case 'edit':\n      case '2fa-required':\n      case '2fa-not-required':\n      case 'revoke':\n        return [];\n      default:\n        throw new Error(argv[2] + ' not recognized');\n    }\n  }\n  exec(args, cb) {\n    this.access(args).then(() => cb()).catch(cb);\n  }\n  async access([cmd, ...args]) {\n    if (!cmd) throw this.usageError('Subcommand is required.');\n    if (!subcommands.includes(cmd) || !this[cmd]) throw this.usageError(`${cmd} is not a recognized subcommand.`);\n    return this[cmd](args, this.npm.flatOptions);\n  }\n  public([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.public);\n  }\n  restricted([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.restricted);\n  }\n  async grant([perms, scopeteam, pkg], opts) {\n    if (!perms || perms !== 'read-only' && perms !== 'read-write') throw this.usageError('First argument must be either `read-only` or `read-write`.');\n    if (!scopeteam) throw this.usageError('`<scope:team>` argument is required.');\n    const [, scope, team] = scopeteam.match(/^@?([^:]+):(.*)$/) || [];\n    if (!scope && !team) {\n      throw this.usageError('Second argument used incorrect format.\\n' + 'Example: @example:developers');\n    }\n    return this.modifyPackage(pkg, opts, (pkgName, opts) => libaccess.grant(pkgName, scopeteam, perms, opts), false);\n  }\n  async revoke([scopeteam, pkg], opts) {\n    if (!scopeteam) throw this.usageError('`<scope:team>` argument is required.');\n    const [, scope, team] = scopeteam.match(/^@?([^:]+):(.*)$/) || [];\n    if (!scope || !team) {\n      throw this.usageError('First argument used incorrect format.\\n' + 'Example: @example:developers');\n    }\n    return this.modifyPackage(pkg, opts, (pkgName, opts) => libaccess.revoke(pkgName, scopeteam, opts));\n  }\n  get ['2fa-required']() {\n    return this.tfaRequired;\n  }\n  tfaRequired([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.tfaRequired, false);\n  }\n  get ['2fa-not-required']() {\n    return this.tfaNotRequired;\n  }\n  tfaNotRequired([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.tfaNotRequired, false);\n  }\n  get ['ls-packages']() {\n    return this.lsPackages;\n  }\n  async lsPackages([owner], opts) {\n    if (!owner) owner = await getIdentity(this.npm, opts);\n    const pkgs = await libaccess.lsPackages(owner, opts);\n\n    // TODO - print these out nicely (breaking change)\n    this.npm.output(JSON.stringify(pkgs, null, 2));\n  }\n  get ['ls-collaborators']() {\n    return this.lsCollaborators;\n  }\n  async lsCollaborators([pkg, usr], opts) {\n    const pkgName = await this.getPackage(pkg, false);\n    const collabs = await libaccess.lsCollaborators(pkgName, usr, opts);\n\n    // TODO - print these out nicely (breaking change)\n    this.npm.output(JSON.stringify(collabs, null, 2));\n  }\n  async edit() {\n    throw new Error('edit subcommand is not implemented yet');\n  }\n  modifyPackage(pkg, opts, fn, requireScope = true) {\n    return this.getPackage(pkg, requireScope).then(pkgName => otplease(opts, opts => fn(pkgName, opts)));\n  }\n  async getPackage(name, requireScope) {\n    if (name && name.trim()) return name.trim();else {\n      try {\n        const pkg = await readPackageJson(path.resolve(this.npm.prefix, 'package.json'));\n        name = pkg.name;\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          throw new Error('no package name passed to command and no package.json found');\n        } else throw err;\n      }\n      if (requireScope && !name.match(/^@[^/]+\\/.*$/)) throw this.usageError('This command is only available for scoped packages.');else return name;\n    }\n  }\n}\nmodule.exports = Access;","map":{"version":3,"names":["path","require","libaccess","readPackageJson","otplease","getIdentity","BaseCommand","subcommands","Access","description","name","params","usage","completion","opts","argv","conf","remain","length","Error","exec","args","cb","access","then","catch","cmd","usageError","includes","npm","flatOptions","public","pkg","modifyPackage","restricted","grant","perms","scopeteam","scope","team","match","pkgName","revoke","2fa-required","tfaRequired","2fa-not-required","tfaNotRequired","ls-packages","lsPackages","owner","pkgs","output","JSON","stringify","ls-collaborators","lsCollaborators","usr","getPackage","collabs","edit","fn","requireScope","trim","resolve","prefix","err","code","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/access.js"],"sourcesContent":["const path = require('path')\n\nconst libaccess = require('libnpmaccess')\nconst readPackageJson = require('read-package-json-fast')\n\nconst otplease = require('./utils/otplease.js')\nconst getIdentity = require('./utils/get-identity.js')\nconst BaseCommand = require('./base-command.js')\n\nconst subcommands = [\n  'public',\n  'restricted',\n  'grant',\n  'revoke',\n  'ls-packages',\n  'ls-collaborators',\n  'edit',\n  '2fa-required',\n  '2fa-not-required',\n]\n\nclass Access extends BaseCommand {\n  static get description () {\n    return 'Set access level on published packages'\n  }\n\n  static get name () {\n    return 'access'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'registry',\n      'otp',\n    ]\n  }\n\n  static get usage () {\n    return [\n      'public [<package>]',\n      'restricted [<package>]',\n      'grant <read-only|read-write> <scope:team> [<package>]',\n      'revoke <scope:team> [<package>]',\n      '2fa-required [<package>]',\n      '2fa-not-required [<package>]',\n      'ls-packages [<user>|<scope>|<scope:team>]',\n      'ls-collaborators [<package> [<user>]]',\n      'edit [<package>]',\n    ]\n  }\n\n  async completion (opts) {\n    const argv = opts.conf.argv.remain\n    if (argv.length === 2)\n      return subcommands\n\n    switch (argv[2]) {\n      case 'grant':\n        if (argv.length === 3)\n          return ['read-only', 'read-write']\n        else\n          return []\n\n      case 'public':\n      case 'restricted':\n      case 'ls-packages':\n      case 'ls-collaborators':\n      case 'edit':\n      case '2fa-required':\n      case '2fa-not-required':\n      case 'revoke':\n        return []\n      default:\n        throw new Error(argv[2] + ' not recognized')\n    }\n  }\n\n  exec (args, cb) {\n    this.access(args).then(() => cb()).catch(cb)\n  }\n\n  async access ([cmd, ...args]) {\n    if (!cmd)\n      throw this.usageError('Subcommand is required.')\n\n    if (!subcommands.includes(cmd) || !this[cmd])\n      throw this.usageError(`${cmd} is not a recognized subcommand.`)\n\n    return this[cmd](args, this.npm.flatOptions)\n  }\n\n  public ([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.public)\n  }\n\n  restricted ([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.restricted)\n  }\n\n  async grant ([perms, scopeteam, pkg], opts) {\n    if (!perms || (perms !== 'read-only' && perms !== 'read-write'))\n      throw this.usageError('First argument must be either `read-only` or `read-write`.')\n\n    if (!scopeteam)\n      throw this.usageError('`<scope:team>` argument is required.')\n\n    const [, scope, team] = scopeteam.match(/^@?([^:]+):(.*)$/) || []\n\n    if (!scope && !team) {\n      throw this.usageError(\n        'Second argument used incorrect format.\\n' +\n        'Example: @example:developers'\n      )\n    }\n\n    return this.modifyPackage(pkg, opts, (pkgName, opts) =>\n      libaccess.grant(pkgName, scopeteam, perms, opts), false)\n  }\n\n  async revoke ([scopeteam, pkg], opts) {\n    if (!scopeteam)\n      throw this.usageError('`<scope:team>` argument is required.')\n\n    const [, scope, team] = scopeteam.match(/^@?([^:]+):(.*)$/) || []\n\n    if (!scope || !team) {\n      throw this.usageError(\n        'First argument used incorrect format.\\n' +\n        'Example: @example:developers'\n      )\n    }\n\n    return this.modifyPackage(pkg, opts, (pkgName, opts) =>\n      libaccess.revoke(pkgName, scopeteam, opts))\n  }\n\n  get ['2fa-required'] () {\n    return this.tfaRequired\n  }\n\n  tfaRequired ([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.tfaRequired, false)\n  }\n\n  get ['2fa-not-required'] () {\n    return this.tfaNotRequired\n  }\n\n  tfaNotRequired ([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.tfaNotRequired, false)\n  }\n\n  get ['ls-packages'] () {\n    return this.lsPackages\n  }\n\n  async lsPackages ([owner], opts) {\n    if (!owner)\n      owner = await getIdentity(this.npm, opts)\n\n    const pkgs = await libaccess.lsPackages(owner, opts)\n\n    // TODO - print these out nicely (breaking change)\n    this.npm.output(JSON.stringify(pkgs, null, 2))\n  }\n\n  get ['ls-collaborators'] () {\n    return this.lsCollaborators\n  }\n\n  async lsCollaborators ([pkg, usr], opts) {\n    const pkgName = await this.getPackage(pkg, false)\n    const collabs = await libaccess.lsCollaborators(pkgName, usr, opts)\n\n    // TODO - print these out nicely (breaking change)\n    this.npm.output(JSON.stringify(collabs, null, 2))\n  }\n\n  async edit () {\n    throw new Error('edit subcommand is not implemented yet')\n  }\n\n  modifyPackage (pkg, opts, fn, requireScope = true) {\n    return this.getPackage(pkg, requireScope)\n      .then(pkgName => otplease(opts, opts => fn(pkgName, opts)))\n  }\n\n  async getPackage (name, requireScope) {\n    if (name && name.trim())\n      return name.trim()\n    else {\n      try {\n        const pkg = await readPackageJson(path.resolve(this.npm.prefix, 'package.json'))\n        name = pkg.name\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          throw new Error(\n            'no package name passed to command and no package.json found'\n          )\n        } else\n          throw err\n      }\n\n      if (requireScope && !name.match(/^@[^/]+\\/.*$/))\n        throw this.usageError('This command is only available for scoped packages.')\n      else\n        return name\n    }\n  }\n}\n\nmodule.exports = Access\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}