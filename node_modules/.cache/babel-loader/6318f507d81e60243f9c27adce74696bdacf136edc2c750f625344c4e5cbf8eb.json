{"ast":null,"code":"const fetch = require('npm-registry-fetch');\nconst otplease = require('./utils/otplease.js');\nconst npa = require('npm-package-arg');\nconst semver = require('semver');\nconst getIdentity = require('./utils/get-identity.js');\nconst libaccess = require('libnpmaccess');\nconst BaseCommand = require('./base-command.js');\nclass Deprecate extends BaseCommand {\n  static get description() {\n    return 'Deprecate a version of a package';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'deprecate';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['<pkg>[@<version>] <message>'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['registry', 'otp'];\n  }\n  async completion(opts) {\n    if (opts.conf.argv.remain.length > 1) return [];\n    const username = await getIdentity(this.npm, this.npm.flatOptions);\n    const packages = await libaccess.lsPackages(username, this.npm.flatOptions);\n    return Object.keys(packages).filter(name => packages[name] === 'write' && (opts.conf.argv.remain.length === 0 || name.startsWith(opts.conf.argv.remain[0])));\n  }\n  exec(args, cb) {\n    this.deprecate(args).then(() => cb()).catch(err => cb(err.code === 'EUSAGE' ? err.message : err));\n  }\n  async deprecate([pkg, msg]) {\n    // msg == null because '' is a valid value, it indicates undeprecate\n    if (!pkg || msg == null) throw this.usageError();\n\n    // fetch the data and make sure it exists.\n    const p = npa(pkg);\n    // npa makes the default spec \"latest\", but for deprecation\n    // \"*\" is the appropriate default.\n    const spec = p.rawSpec === '' ? '*' : p.fetchSpec;\n    if (semver.validRange(spec, true) === null) throw new Error(`invalid version range: ${spec}`);\n    const uri = '/' + p.escapedName;\n    const packument = await fetch.json(uri, {\n      ...this.npm.flatOptions,\n      spec: p,\n      query: {\n        write: true\n      }\n    });\n    Object.keys(packument.versions).filter(v => semver.satisfies(v, spec, {\n      includePrerelease: true\n    })).forEach(v => {\n      packument.versions[v].deprecated = msg;\n    });\n    return otplease(this.npm.flatOptions, opts => fetch(uri, {\n      ...opts,\n      spec: p,\n      method: 'PUT',\n      body: packument,\n      ignoreBody: true\n    }));\n  }\n}\nmodule.exports = Deprecate;","map":{"version":3,"names":["fetch","require","otplease","npa","semver","getIdentity","libaccess","BaseCommand","Deprecate","description","name","usage","params","completion","opts","conf","argv","remain","length","username","npm","flatOptions","packages","lsPackages","Object","keys","filter","startsWith","exec","args","cb","deprecate","then","catch","err","code","message","pkg","msg","usageError","p","spec","rawSpec","fetchSpec","validRange","Error","uri","escapedName","packument","json","query","write","versions","v","satisfies","includePrerelease","forEach","deprecated","method","body","ignoreBody","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/deprecate.js"],"sourcesContent":["const fetch = require('npm-registry-fetch')\nconst otplease = require('./utils/otplease.js')\nconst npa = require('npm-package-arg')\nconst semver = require('semver')\nconst getIdentity = require('./utils/get-identity.js')\nconst libaccess = require('libnpmaccess')\nconst BaseCommand = require('./base-command.js')\n\nclass Deprecate extends BaseCommand {\n  static get description () {\n    return 'Deprecate a version of a package'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'deprecate'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['<pkg>[@<version>] <message>']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'registry',\n      'otp',\n    ]\n  }\n\n  async completion (opts) {\n    if (opts.conf.argv.remain.length > 1)\n      return []\n\n    const username = await getIdentity(this.npm, this.npm.flatOptions)\n    const packages = await libaccess.lsPackages(username, this.npm.flatOptions)\n    return Object.keys(packages)\n      .filter((name) =>\n        packages[name] === 'write' &&\n        (opts.conf.argv.remain.length === 0 ||\n          name.startsWith(opts.conf.argv.remain[0])))\n  }\n\n  exec (args, cb) {\n    this.deprecate(args)\n      .then(() => cb())\n      .catch(err => cb(err.code === 'EUSAGE' ? err.message : err))\n  }\n\n  async deprecate ([pkg, msg]) {\n    // msg == null because '' is a valid value, it indicates undeprecate\n    if (!pkg || msg == null)\n      throw this.usageError()\n\n    // fetch the data and make sure it exists.\n    const p = npa(pkg)\n    // npa makes the default spec \"latest\", but for deprecation\n    // \"*\" is the appropriate default.\n    const spec = p.rawSpec === '' ? '*' : p.fetchSpec\n\n    if (semver.validRange(spec, true) === null)\n      throw new Error(`invalid version range: ${spec}`)\n\n    const uri = '/' + p.escapedName\n    const packument = await fetch.json(uri, {\n      ...this.npm.flatOptions,\n      spec: p,\n      query: { write: true },\n    })\n\n    Object.keys(packument.versions)\n      .filter(v => semver.satisfies(v, spec, { includePrerelease: true }))\n      .forEach(v => {\n        packument.versions[v].deprecated = msg\n      })\n\n    return otplease(this.npm.flatOptions, opts => fetch(uri, {\n      ...opts,\n      spec: p,\n      method: 'PUT',\n      body: packument,\n      ignoreBody: true,\n    }))\n  }\n}\n\nmodule.exports = Deprecate\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}