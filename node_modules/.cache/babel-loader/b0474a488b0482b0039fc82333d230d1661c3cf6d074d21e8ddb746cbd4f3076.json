{"ast":null,"code":"// This is the base for all commands whose execWorkspaces just gets\n// a list of workspace names and passes it on to new Arborist() to\n// be able to run a filtered Arborist.reify() at some point.\n\nconst BaseCommand = require('../base-command.js');\nclass ArboristCmd extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['workspace', 'workspaces'];\n  }\n  execWorkspaces(args, filters, cb) {\n    this.setWorkspaces(filters).then(() => {\n      this.exec(args, cb);\n    }).catch(er => cb(er));\n  }\n}\nmodule.exports = ArboristCmd;","map":{"version":3,"names":["BaseCommand","require","ArboristCmd","params","execWorkspaces","args","filters","cb","setWorkspaces","then","exec","catch","er","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/workspaces/arborist-cmd.js"],"sourcesContent":["// This is the base for all commands whose execWorkspaces just gets\n// a list of workspace names and passes it on to new Arborist() to\n// be able to run a filtered Arborist.reify() at some point.\n\nconst BaseCommand = require('../base-command.js')\nclass ArboristCmd extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'workspace',\n      'workspaces',\n    ]\n  }\n\n  execWorkspaces (args, filters, cb) {\n    this.setWorkspaces(filters)\n      .then(() => {\n        this.exec(args, cb)\n      })\n      .catch(er => cb(er))\n  }\n}\n\nmodule.exports = ArboristCmd\n"],"mappings":"AAAA;AACA;AACA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAMC,WAAW,SAASF,WAAW,CAAC;EACpC;EACA,WAAWG,MAAMA,CAAA,EAAI;IACnB,OAAO,CACL,WAAW,EACX,YAAY,CACb;EACH;EAEAC,cAAcA,CAAEC,IAAI,EAAEC,OAAO,EAAEC,EAAE,EAAE;IACjC,IAAI,CAACC,aAAa,CAACF,OAAO,CAAC,CACxBG,IAAI,CAAC,MAAM;MACV,IAAI,CAACC,IAAI,CAACL,IAAI,EAAEE,EAAE,CAAC;IACrB,CAAC,CAAC,CACDI,KAAK,CAACC,EAAE,IAAIL,EAAE,CAACK,EAAE,CAAC,CAAC;EACxB;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}