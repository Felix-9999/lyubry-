{"ast":null,"code":"const {\n  spawn\n} = require('child_process');\nconst path = require('path');\nconst openUrl = require('./utils/open-url.js');\nconst {\n  promisify\n} = require('util');\nconst glob = promisify(require('glob'));\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\nconst BaseCommand = require('./base-command.js');\n\n// Strips out the number from foo.7 or foo.7. or foo.7.tgz\n// We don't currently compress our man pages but if we ever did this would\n// seemlessly continue supporting it\nconst manNumberRegex = /\\.(\\d+)(\\.[^/\\\\]*)?$/;\nclass Help extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Get help on npm';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'help';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['<term> [<terms..>]'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['viewer'];\n  }\n  async completion(opts) {\n    if (opts.conf.argv.remain.length > 2) return [];\n    const g = path.resolve(__dirname, '../man/man[0-9]/*.[0-9]');\n    const files = await glob(g);\n    return Object.keys(files.reduce(function (acc, file) {\n      file = path.basename(file).replace(/\\.[0-9]+$/, '');\n      file = file.replace(/^npm-/, '');\n      acc[file] = true;\n      return acc;\n    }, {\n      help: true\n    }));\n  }\n  exec(args, cb) {\n    this.help(args).then(() => cb()).catch(cb);\n  }\n  async help(args) {\n    // By default we search all of our man subdirectories, but if the user has\n    // asked for a specific one we limit the search to just there\n    let manSearch = 'man*';\n    if (/^\\d+$/.test(args[0])) manSearch = `man${args.shift()}`;\n    if (!args.length) return this.npm.output(this.npm.usage);\n\n    // npm help foo bar baz: search topics\n    if (args.length > 1) return this.helpSearch(args);\n    let section = this.npm.deref(args[0]) || args[0];\n\n    // support `npm help package.json`\n    section = section.replace('.json', '-json');\n    const manroot = path.resolve(__dirname, '..', 'man');\n    // find either section.n or npm-section.n\n    const f = `${manroot}/${manSearch}/?(npm-)${section}.[0-9]*`;\n    let mans = await glob(f);\n    mans = mans.sort((a, b) => {\n      // Because of the glob we know the manNumberRegex will pass\n      const aManNumber = a.match(manNumberRegex)[1];\n      const bManNumber = b.match(manNumberRegex)[1];\n\n      // man number sort first so that 1 aka commands are preferred\n      if (aManNumber !== bManNumber) return aManNumber - bManNumber;\n      return localeCompare(a, b);\n    });\n    const man = mans[0];\n    if (man) await this.viewMan(man);else return this.helpSearch(args);\n  }\n  helpSearch(args) {\n    return new Promise((resolve, reject) => {\n      this.npm.commands['help-search'](args, err => {\n        // This would only error if args was empty, which it never is\n        /* istanbul ignore next */\n        if (err) return reject(err);\n        resolve();\n      });\n    });\n  }\n  async viewMan(man) {\n    const env = {};\n    Object.keys(process.env).forEach(function (i) {\n      env[i] = process.env[i];\n    });\n    const viewer = this.npm.config.get('viewer');\n    const opts = {\n      env,\n      stdio: 'inherit'\n    };\n    let bin = 'man';\n    const args = [];\n    switch (viewer) {\n      case 'woman':\n        bin = 'emacsclient';\n        args.push('-e', `(woman-find-file '${man}')`);\n        break;\n      case 'browser':\n        await openUrl(this.npm, this.htmlMan(man), 'help available at the following URL');\n        return;\n      default:\n        args.push(man);\n        break;\n    }\n    const proc = spawn(bin, args, opts);\n    return new Promise((resolve, reject) => {\n      proc.on('exit', code => {\n        if (code) return reject(new Error(`help process exited with code: ${code}`));\n        return resolve();\n      });\n    });\n  }\n\n  // Returns the path to the html version of the man page\n  htmlMan(man) {\n    let sect = man.match(manNumberRegex)[1];\n    const f = path.basename(man).replace(manNumberRegex, '');\n    switch (sect) {\n      case '1':\n        sect = 'commands';\n        break;\n      case '5':\n        sect = 'configuring-npm';\n        break;\n      case '7':\n        sect = 'using-npm';\n        break;\n    }\n    return 'file://' + path.resolve(__dirname, '..', 'docs', 'output', sect, f + '.html');\n  }\n}\nmodule.exports = Help;","map":{"version":3,"names":["spawn","require","path","openUrl","promisify","glob","localeCompare","BaseCommand","manNumberRegex","Help","description","name","usage","params","completion","opts","conf","argv","remain","length","g","resolve","__dirname","files","Object","keys","reduce","acc","file","basename","replace","help","exec","args","cb","then","catch","manSearch","test","shift","npm","output","helpSearch","section","deref","manroot","f","mans","sort","a","b","aManNumber","match","bManNumber","man","viewMan","Promise","reject","commands","err","env","process","forEach","i","viewer","config","get","stdio","bin","push","htmlMan","proc","on","code","Error","sect","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/help.js"],"sourcesContent":["const { spawn } = require('child_process')\nconst path = require('path')\nconst openUrl = require('./utils/open-url.js')\nconst { promisify } = require('util')\nconst glob = promisify(require('glob'))\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\n\nconst BaseCommand = require('./base-command.js')\n\n// Strips out the number from foo.7 or foo.7. or foo.7.tgz\n// We don't currently compress our man pages but if we ever did this would\n// seemlessly continue supporting it\nconst manNumberRegex = /\\.(\\d+)(\\.[^/\\\\]*)?$/\n\nclass Help extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Get help on npm'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'help'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['<term> [<terms..>]']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['viewer']\n  }\n\n  async completion (opts) {\n    if (opts.conf.argv.remain.length > 2)\n      return []\n    const g = path.resolve(__dirname, '../man/man[0-9]/*.[0-9]')\n    const files = await glob(g)\n\n    return Object.keys(files.reduce(function (acc, file) {\n      file = path.basename(file).replace(/\\.[0-9]+$/, '')\n      file = file.replace(/^npm-/, '')\n      acc[file] = true\n      return acc\n    }, { help: true }))\n  }\n\n  exec (args, cb) {\n    this.help(args).then(() => cb()).catch(cb)\n  }\n\n  async help (args) {\n    // By default we search all of our man subdirectories, but if the user has\n    // asked for a specific one we limit the search to just there\n    let manSearch = 'man*'\n    if (/^\\d+$/.test(args[0]))\n      manSearch = `man${args.shift()}`\n\n    if (!args.length)\n      return this.npm.output(this.npm.usage)\n\n    // npm help foo bar baz: search topics\n    if (args.length > 1)\n      return this.helpSearch(args)\n\n    let section = this.npm.deref(args[0]) || args[0]\n\n    // support `npm help package.json`\n    section = section.replace('.json', '-json')\n\n    const manroot = path.resolve(__dirname, '..', 'man')\n    // find either section.n or npm-section.n\n    const f = `${manroot}/${manSearch}/?(npm-)${section}.[0-9]*`\n    let mans = await glob(f)\n    mans = mans.sort((a, b) => {\n      // Because of the glob we know the manNumberRegex will pass\n      const aManNumber = a.match(manNumberRegex)[1]\n      const bManNumber = b.match(manNumberRegex)[1]\n\n      // man number sort first so that 1 aka commands are preferred\n      if (aManNumber !== bManNumber)\n        return aManNumber - bManNumber\n\n      return localeCompare(a, b)\n    })\n    const man = mans[0]\n\n    if (man)\n      await this.viewMan(man)\n    else\n      return this.helpSearch(args)\n  }\n\n  helpSearch (args) {\n    return new Promise((resolve, reject) => {\n      this.npm.commands['help-search'](args, (err) => {\n        // This would only error if args was empty, which it never is\n        /* istanbul ignore next */\n        if (err)\n          return reject(err)\n\n        resolve()\n      })\n    })\n  }\n\n  async viewMan (man) {\n    const env = {}\n    Object.keys(process.env).forEach(function (i) {\n      env[i] = process.env[i]\n    })\n    const viewer = this.npm.config.get('viewer')\n\n    const opts = {\n      env,\n      stdio: 'inherit',\n    }\n\n    let bin = 'man'\n    const args = []\n    switch (viewer) {\n      case 'woman':\n        bin = 'emacsclient'\n        args.push('-e', `(woman-find-file '${man}')`)\n        break\n\n      case 'browser':\n        await openUrl(this.npm, this.htmlMan(man), 'help available at the following URL')\n        return\n\n      default:\n        args.push(man)\n        break\n    }\n\n    const proc = spawn(bin, args, opts)\n    return new Promise((resolve, reject) => {\n      proc.on('exit', (code) => {\n        if (code)\n          return reject(new Error(`help process exited with code: ${code}`))\n\n        return resolve()\n      })\n    })\n  }\n\n  // Returns the path to the html version of the man page\n  htmlMan (man) {\n    let sect = man.match(manNumberRegex)[1]\n    const f = path.basename(man).replace(manNumberRegex, '')\n    switch (sect) {\n      case '1':\n        sect = 'commands'\n        break\n      case '5':\n        sect = 'configuring-npm'\n        break\n      case '7':\n        sect = 'using-npm'\n        break\n    }\n    return 'file://' + path.resolve(__dirname, '..', 'docs', 'output', sect, f + '.html')\n  }\n}\nmodule.exports = Help\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}