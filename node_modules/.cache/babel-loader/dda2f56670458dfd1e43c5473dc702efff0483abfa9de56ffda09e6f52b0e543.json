{"ast":null,"code":"//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of \n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n// Modified to work in node for this project (and some refactoring)\n//---------------------------------------------------------------------\n\nvar QR8bitByte = require('./QR8bitByte');\nvar QRUtil = require('./QRUtil');\nvar QRPolynomial = require('./QRPolynomial');\nvar QRRSBlock = require('./QRRSBlock');\nvar QRBitBuffer = require('./QRBitBuffer');\nfunction QRCode(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n}\nQRCode.prototype = {\n  addData: function (data) {\n    var newData = new QR8bitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n  },\n  isDark: function (row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + \",\" + col);\n    }\n    return this.modules[row][col];\n  },\n  getModuleCount: function () {\n    return this.moduleCount;\n  },\n  make: function () {\n    // Calculate automatically typeNumber if provided is < 1\n    if (this.typeNumber < 1) {\n      var typeNumber = 1;\n      for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n        var buffer = new QRBitBuffer();\n        var totalDataCount = 0;\n        for (var i = 0; i < rsBlocks.length; i++) {\n          totalDataCount += rsBlocks[i].dataCount;\n        }\n        for (var x = 0; x < this.dataList.length; x++) {\n          var data = this.dataList[x];\n          buffer.put(data.mode, 4);\n          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n          data.write(buffer);\n        }\n        if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n      }\n      this.typeNumber = typeNumber;\n    }\n    this.makeImpl(false, this.getBestMaskPattern());\n  },\n  makeImpl: function (test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n    for (var row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n      for (var col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null; //(col + row) % 3;\n      }\n    }\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n    if (this.dataCache === null) {\n      this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n    this.mapData(this.dataCache, maskPattern);\n  },\n  setupPositionProbePattern: function (row, col) {\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n        if (0 <= r && r <= 6 && (c === 0 || c === 6) || 0 <= c && c <= 6 && (r === 0 || r === 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n          this.modules[row + r][col + c] = true;\n        } else {\n          this.modules[row + r][col + c] = false;\n        }\n      }\n    }\n  },\n  getBestMaskPattern: function () {\n    var minLostPoint = 0;\n    var pattern = 0;\n    for (var i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      var lostPoint = QRUtil.getLostPoint(this);\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n    return pattern;\n  },\n  createMovieClip: function (target_mc, instance_name, depth) {\n    var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    var cs = 1;\n    this.make();\n    for (var row = 0; row < this.modules.length; row++) {\n      var y = row * cs;\n      for (var col = 0; col < this.modules[row].length; col++) {\n        var x = col * cs;\n        var dark = this.modules[row][col];\n        if (dark) {\n          qr_mc.beginFill(0, 100);\n          qr_mc.moveTo(x, y);\n          qr_mc.lineTo(x + cs, y);\n          qr_mc.lineTo(x + cs, y + cs);\n          qr_mc.lineTo(x, y + cs);\n          qr_mc.endFill();\n        }\n      }\n    }\n    return qr_mc;\n  },\n  setupTimingPattern: function () {\n    for (var r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] !== null) {\n        continue;\n      }\n      this.modules[r][6] = r % 2 === 0;\n    }\n    for (var c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] !== null) {\n        continue;\n      }\n      this.modules[6][c] = c % 2 === 0;\n    }\n  },\n  setupPositionAdjustPattern: function () {\n    var pos = QRUtil.getPatternPosition(this.typeNumber);\n    for (var i = 0; i < pos.length; i++) {\n      for (var j = 0; j < pos.length; j++) {\n        var row = pos[i];\n        var col = pos[j];\n        if (this.modules[row][col] !== null) {\n          continue;\n        }\n        for (var r = -2; r <= 2; r++) {\n          for (var c = -2; c <= 2; c++) {\n            if (Math.abs(r) === 2 || Math.abs(c) === 2 || r === 0 && c === 0) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  },\n  setupTypeNumber: function (test) {\n    var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n    var mod;\n    for (var i = 0; i < 18; i++) {\n      mod = !test && (bits >> i & 1) === 1;\n      this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n    }\n    for (var x = 0; x < 18; x++) {\n      mod = !test && (bits >> x & 1) === 1;\n      this.modules[x % 3 + this.moduleCount - 8 - 3][Math.floor(x / 3)] = mod;\n    }\n  },\n  setupTypeInfo: function (test, maskPattern) {\n    var data = this.errorCorrectLevel << 3 | maskPattern;\n    var bits = QRUtil.getBCHTypeInfo(data);\n    var mod;\n\n    // vertical\t\t\n    for (var v = 0; v < 15; v++) {\n      mod = !test && (bits >> v & 1) === 1;\n      if (v < 6) {\n        this.modules[v][8] = mod;\n      } else if (v < 8) {\n        this.modules[v + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + v][8] = mod;\n      }\n    }\n\n    // horizontal\n    for (var h = 0; h < 15; h++) {\n      mod = !test && (bits >> h & 1) === 1;\n      if (h < 8) {\n        this.modules[8][this.moduleCount - h - 1] = mod;\n      } else if (h < 9) {\n        this.modules[8][15 - h - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - h - 1] = mod;\n      }\n    }\n\n    // fixed module\n    this.modules[this.moduleCount - 8][8] = !test;\n  },\n  mapData: function (data, maskPattern) {\n    var inc = -1;\n    var row = this.moduleCount - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n    for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col === 6) col--;\n      while (true) {\n        for (var c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] === null) {\n            var dark = false;\n            if (byteIndex < data.length) {\n              dark = (data[byteIndex] >>> bitIndex & 1) === 1;\n            }\n            var mask = QRUtil.getMask(maskPattern, row, col - c);\n            if (mask) {\n              dark = !dark;\n            }\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n        row += inc;\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n};\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  var buffer = new QRBitBuffer();\n  for (var i = 0; i < dataList.length; i++) {\n    var data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  }\n\n  // calc num max data.\n  var totalDataCount = 0;\n  for (var x = 0; x < rsBlocks.length; x++) {\n    totalDataCount += rsBlocks[x].dataCount;\n  }\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n  }\n\n  // end code\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  }\n\n  // padding\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(false);\n  }\n\n  // padding\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCode.PAD0, 8);\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCode.PAD1, 8);\n  }\n  return QRCode.createBytes(buffer, rsBlocks);\n};\nQRCode.createBytes = function (buffer, rsBlocks) {\n  var offset = 0;\n  var maxDcCount = 0;\n  var maxEcCount = 0;\n  var dcdata = new Array(rsBlocks.length);\n  var ecdata = new Array(rsBlocks.length);\n  for (var r = 0; r < rsBlocks.length; r++) {\n    var dcCount = rsBlocks[r].dataCount;\n    var ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n    offset += dcCount;\n    var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n    var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n    var modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n    for (var x = 0; x < ecdata[r].length; x++) {\n      var modIndex = x + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][x] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n    }\n  }\n  var totalCodeCount = 0;\n  for (var y = 0; y < rsBlocks.length; y++) {\n    totalCodeCount += rsBlocks[y].totalCount;\n  }\n  var data = new Array(totalCodeCount);\n  var index = 0;\n  for (var z = 0; z < maxDcCount; z++) {\n    for (var s = 0; s < rsBlocks.length; s++) {\n      if (z < dcdata[s].length) {\n        data[index++] = dcdata[s][z];\n      }\n    }\n  }\n  for (var xx = 0; xx < maxEcCount; xx++) {\n    for (var t = 0; t < rsBlocks.length; t++) {\n      if (xx < ecdata[t].length) {\n        data[index++] = ecdata[t][xx];\n      }\n    }\n  }\n  return data;\n};\nmodule.exports = QRCode;","map":{"version":3,"names":["QR8bitByte","require","QRUtil","QRPolynomial","QRRSBlock","QRBitBuffer","QRCode","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","prototype","addData","data","newData","push","isDark","row","col","Error","getModuleCount","make","rsBlocks","getRSBlocks","buffer","totalDataCount","i","length","dataCount","x","put","mode","getLength","getLengthInBits","write","makeImpl","getBestMaskPattern","test","maskPattern","Array","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","Math","abs","bits","getBCHTypeNumber","mod","floor","getBCHTypeInfo","v","h","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","get","totalCodeCount","index","z","s","xx","t","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/qrcode-terminal/vendor/QRCode/index.js"],"sourcesContent":["//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of \n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n// Modified to work in node for this project (and some refactoring)\n//---------------------------------------------------------------------\n\nvar QR8bitByte = require('./QR8bitByte');\nvar QRUtil = require('./QRUtil');\nvar QRPolynomial = require('./QRPolynomial');\nvar QRRSBlock = require('./QRRSBlock');\nvar QRBitBuffer = require('./QRBitBuffer');\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n\tthis.typeNumber = typeNumber;\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;\n\tthis.moduleCount = 0;\n\tthis.dataCache = null;\n\tthis.dataList = [];\n}\n\nQRCode.prototype = {\n\t\n\taddData : function(data) {\n\t\tvar newData = new QR8bitByte(data);\n\t\tthis.dataList.push(newData);\n\t\tthis.dataCache = null;\n\t},\n\t\n\tisDark : function(row, col) {\n\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\t\tthrow new Error(row + \",\" + col);\n\t\t}\n\t\treturn this.modules[row][col];\n\t},\n\n\tgetModuleCount : function() {\n\t\treturn this.moduleCount;\n\t},\n\t\n\tmake : function() {\n\t\t// Calculate automatically typeNumber if provided is < 1\n\t\tif (this.typeNumber < 1 ){\n\t\t\tvar typeNumber = 1;\n\t\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n\t\t\t\tvar buffer = new QRBitBuffer();\n\t\t\t\tvar totalDataCount = 0;\n\t\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t\t}\n\n\t\t\t\tfor (var x = 0; x < this.dataList.length; x++) {\n\t\t\t\t\tvar data = this.dataList[x];\n\t\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\n\t\t\t\t\tdata.write(buffer);\n\t\t\t\t}\n\t\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.typeNumber = typeNumber;\n\t\t}\n\t\tthis.makeImpl(false, this.getBestMaskPattern() );\n\t},\n\t\n\tmakeImpl : function(test, maskPattern) {\n\t\t\n\t\tthis.moduleCount = this.typeNumber * 4 + 17;\n\t\tthis.modules = new Array(this.moduleCount);\n\t\t\n\t\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\t\n\t\t\tthis.modules[row] = new Array(this.moduleCount);\n\t\t\t\n\t\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t\t}\n\t\t}\n\t\n\t\tthis.setupPositionProbePattern(0, 0);\n\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\t\tthis.setupPositionAdjustPattern();\n\t\tthis.setupTimingPattern();\n\t\tthis.setupTypeInfo(test, maskPattern);\n\t\t\n\t\tif (this.typeNumber >= 7) {\n\t\t\tthis.setupTypeNumber(test);\n\t\t}\n\t\n\t\tif (this.dataCache === null) {\n\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t\t}\n\t\n\t\tthis.mapData(this.dataCache, maskPattern);\n\t},\n\n\tsetupPositionProbePattern : function(row, col)  {\n\t\t\n\t\tfor (var r = -1; r <= 7; r++) {\n\t\t\t\n\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\t\n\t\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\t\n\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\t\n\t\t\t\tif ( (0 <= r && r <= 6 && (c === 0 || c === 6) ) || \n                     (0 <= c && c <= 6 && (r === 0 || r === 6) ) || \n                     (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\t\t\n\t},\n\t\n\tgetBestMaskPattern : function() {\n\t\n\t\tvar minLostPoint = 0;\n\t\tvar pattern = 0;\n\t\n\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\n\t\t\tthis.makeImpl(true, i);\n\t\n\t\t\tvar lostPoint = QRUtil.getLostPoint(this);\n\t\n\t\t\tif (i === 0 || minLostPoint >  lostPoint) {\n\t\t\t\tminLostPoint = lostPoint;\n\t\t\t\tpattern = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn pattern;\n\t},\n\t\n\tcreateMovieClip : function(target_mc, instance_name, depth) {\n\t\n\t\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\t\tvar cs = 1;\n\t\n\t\tthis.make();\n\n\t\tfor (var row = 0; row < this.modules.length; row++) {\n\t\t\t\n\t\t\tvar y = row * cs;\n\t\t\t\n\t\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\t\n\t\t\t\tvar x = col * cs;\n\t\t\t\tvar dark = this.modules[row][col];\n\t\t\t\n\t\t\t\tif (dark) {\n\t\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\t\tqr_mc.endFill();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn qr_mc;\n\t},\n\n\tsetupTimingPattern : function() {\n\t\t\n\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\t\tif (this.modules[r][6] !== null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[r][6] = (r % 2 === 0);\n\t\t}\n\t\n\t\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\t\tif (this.modules[6][c] !== null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[6][c] = (c % 2 === 0);\n\t\t}\n\t},\n\t\n\tsetupPositionAdjustPattern : function() {\n\t\n\t\tvar pos = QRUtil.getPatternPosition(this.typeNumber);\n\t\t\n\t\tfor (var i = 0; i < pos.length; i++) {\n\t\t\n\t\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\t\n\t\t\t\tvar row = pos[i];\n\t\t\t\tvar col = pos[j];\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col] !== null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\t\n\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\t\n\t\t\t\t\t\tif (Math.abs(r) === 2 || \n                            Math.abs(c) === 2 ||\n                            (r === 0 && c === 0) ) {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\tsetupTypeNumber : function(test) {\n\t\n\t\tvar bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n        var mod;\n\t\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tmod = (!test && ( (bits >> i) & 1) === 1);\n\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t\t}\n\t\n\t\tfor (var x = 0; x < 18; x++) {\n\t\t\tmod = (!test && ( (bits >> x) & 1) === 1);\n\t\t\tthis.modules[x % 3 + this.moduleCount - 8 - 3][Math.floor(x / 3)] = mod;\n\t\t}\n\t},\n\t\n\tsetupTypeInfo : function(test, maskPattern) {\n\t\n\t\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\t\tvar bits = QRUtil.getBCHTypeInfo(data);\n        var mod;\n\t\n\t\t// vertical\t\t\n\t\tfor (var v = 0; v < 15; v++) {\n\t\n\t\t\tmod = (!test && ( (bits >> v) & 1) === 1);\n\t\n\t\t\tif (v < 6) {\n\t\t\t\tthis.modules[v][8] = mod;\n\t\t\t} else if (v < 8) {\n\t\t\t\tthis.modules[v + 1][8] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[this.moduleCount - 15 + v][8] = mod;\n\t\t\t}\n\t\t}\n\t\n\t\t// horizontal\n\t\tfor (var h = 0; h < 15; h++) {\n\t\n\t\t\tmod = (!test && ( (bits >> h) & 1) === 1);\n\t\t\t\n\t\t\tif (h < 8) {\n\t\t\t\tthis.modules[8][this.moduleCount - h - 1] = mod;\n\t\t\t} else if (h < 9) {\n\t\t\t\tthis.modules[8][15 - h - 1 + 1] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[8][15 - h - 1] = mod;\n\t\t\t}\n\t\t}\n\t\n\t\t// fixed module\n\t\tthis.modules[this.moduleCount - 8][8] = (!test);\n\t\n\t},\n\t\n\tmapData : function(data, maskPattern) {\n\t\t\n\t\tvar inc = -1;\n\t\tvar row = this.moduleCount - 1;\n\t\tvar bitIndex = 7;\n\t\tvar byteIndex = 0;\n\t\t\n\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\t\n\t\t\tif (col === 6) col--;\n\t\n\t\t\twhile (true) {\n\t\n\t\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\t\n\t\t\t\t\tif (this.modules[row][col - c] === null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar dark = false;\n\t\n\t\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) === 1);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar mask = QRUtil.getMask(maskPattern, row, col - c);\n\t\n\t\t\t\t\t\tif (mask) {\n\t\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\t\tbitIndex--;\n\t\n\t\t\t\t\t\tif (bitIndex === -1) {\n\t\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\trow += inc;\n\t\n\t\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\t\trow -= inc;\n\t\t\t\t\tinc = -inc;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\n\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\tvar buffer = new QRBitBuffer();\n\t\n\tfor (var i = 0; i < dataList.length; i++) {\n\t\tvar data = dataList[i];\n\t\tbuffer.put(data.mode, 4);\n\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\n\t\tdata.write(buffer);\n\t}\n\n\t// calc num max data.\n\tvar totalDataCount = 0;\n\tfor (var x = 0; x < rsBlocks.length; x++) {\n\t\ttotalDataCount += rsBlocks[x].dataCount;\n\t}\n\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\tthrow new Error(\"code length overflow. (\" + \n            buffer.getLengthInBits() + \n            \">\" +  \n            totalDataCount * 8 + \n            \")\");\n\t}\n\n\t// end code\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.getLengthInBits() % 8 !== 0) {\n\t\tbuffer.putBit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD1, 8);\n\t}\n\n\treturn QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function(buffer, rsBlocks) {\n\n\tvar offset = 0;\n\t\n\tvar maxDcCount = 0;\n\tvar maxEcCount = 0;\n\t\n\tvar dcdata = new Array(rsBlocks.length);\n\tvar ecdata = new Array(rsBlocks.length);\n\t\n\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\n\t\tdcdata[r] = new Array(dcCount);\n\t\t\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t}\n\t\toffset += dcCount;\n\t\t\n\t\tvar rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n\t\tvar rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\tfor (var x = 0; x < ecdata[r].length; x++) {\n            var modIndex = x + modPoly.getLength() - ecdata[r].length;\n\t\t\tecdata[r][x] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t}\n\n\t}\n\t\n\tvar totalCodeCount = 0;\n\tfor (var y = 0; y < rsBlocks.length; y++) {\n\t\ttotalCodeCount += rsBlocks[y].totalCount;\n\t}\n\n\tvar data = new Array(totalCodeCount);\n\tvar index = 0;\n\n\tfor (var z = 0; z < maxDcCount; z++) {\n\t\tfor (var s = 0; s < rsBlocks.length; s++) {\n\t\t\tif (z < dcdata[s].length) {\n\t\t\t\tdata[index++] = dcdata[s][z];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var xx = 0; xx < maxEcCount; xx++) {\n\t\tfor (var t = 0; t < rsBlocks.length; t++) {\n\t\t\tif (xx < ecdata[t].length) {\n\t\t\t\tdata[index++] = ecdata[t][xx];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n\n};\n\nmodule.exports = QRCode;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIE,YAAY,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIG,SAAS,GAAGH,OAAO,CAAC,aAAa,CAAC;AACtC,IAAII,WAAW,GAAGJ,OAAO,CAAC,eAAe,CAAC;AAE1C,SAASK,MAAMA,CAACC,UAAU,EAAEC,iBAAiB,EAAE;EAC9C,IAAI,CAACD,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;EAC1C,IAAI,CAACC,OAAO,GAAG,IAAI;EACnB,IAAI,CAACC,WAAW,GAAG,CAAC;EACpB,IAAI,CAACC,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,QAAQ,GAAG,EAAE;AACnB;AAEAN,MAAM,CAACO,SAAS,GAAG;EAElBC,OAAO,EAAG,SAAAA,CAASC,IAAI,EAAE;IACxB,IAAIC,OAAO,GAAG,IAAIhB,UAAU,CAACe,IAAI,CAAC;IAClC,IAAI,CAACH,QAAQ,CAACK,IAAI,CAACD,OAAO,CAAC;IAC3B,IAAI,CAACL,SAAS,GAAG,IAAI;EACtB,CAAC;EAEDO,MAAM,EAAG,SAAAA,CAASC,GAAG,EAAEC,GAAG,EAAE;IAC3B,IAAID,GAAG,GAAG,CAAC,IAAI,IAAI,CAACT,WAAW,IAAIS,GAAG,IAAIC,GAAG,GAAG,CAAC,IAAI,IAAI,CAACV,WAAW,IAAIU,GAAG,EAAE;MAC7E,MAAM,IAAIC,KAAK,CAACF,GAAG,GAAG,GAAG,GAAGC,GAAG,CAAC;IACjC;IACA,OAAO,IAAI,CAACX,OAAO,CAACU,GAAG,CAAC,CAACC,GAAG,CAAC;EAC9B,CAAC;EAEDE,cAAc,EAAG,SAAAA,CAAA,EAAW;IAC3B,OAAO,IAAI,CAACZ,WAAW;EACxB,CAAC;EAEDa,IAAI,EAAG,SAAAA,CAAA,EAAW;IACjB;IACA,IAAI,IAAI,CAAChB,UAAU,GAAG,CAAC,EAAE;MACxB,IAAIA,UAAU,GAAG,CAAC;MAClB,KAAKA,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAG,EAAE,EAAEA,UAAU,EAAE,EAAE;QACnD,IAAIiB,QAAQ,GAAGpB,SAAS,CAACqB,WAAW,CAAClB,UAAU,EAAE,IAAI,CAACC,iBAAiB,CAAC;QAExE,IAAIkB,MAAM,GAAG,IAAIrB,WAAW,CAAC,CAAC;QAC9B,IAAIsB,cAAc,GAAG,CAAC;QACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;UACzCD,cAAc,IAAIH,QAAQ,CAACI,CAAC,CAAC,CAACE,SAAS;QACxC;QAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACnB,QAAQ,CAACiB,MAAM,EAAEE,CAAC,EAAE,EAAE;UAC9C,IAAIhB,IAAI,GAAG,IAAI,CAACH,QAAQ,CAACmB,CAAC,CAAC;UAC3BL,MAAM,CAACM,GAAG,CAACjB,IAAI,CAACkB,IAAI,EAAE,CAAC,CAAC;UACxBP,MAAM,CAACM,GAAG,CAACjB,IAAI,CAACmB,SAAS,CAAC,CAAC,EAAEhC,MAAM,CAACiC,eAAe,CAACpB,IAAI,CAACkB,IAAI,EAAE1B,UAAU,CAAE,CAAC;UAC5EQ,IAAI,CAACqB,KAAK,CAACV,MAAM,CAAC;QACnB;QACA,IAAIA,MAAM,CAACS,eAAe,CAAC,CAAC,IAAIR,cAAc,GAAG,CAAC,EACjD;MACF;MACA,IAAI,CAACpB,UAAU,GAAGA,UAAU;IAC7B;IACA,IAAI,CAAC8B,QAAQ,CAAC,KAAK,EAAE,IAAI,CAACC,kBAAkB,CAAC,CAAE,CAAC;EACjD,CAAC;EAEDD,QAAQ,EAAG,SAAAA,CAASE,IAAI,EAAEC,WAAW,EAAE;IAEtC,IAAI,CAAC9B,WAAW,GAAG,IAAI,CAACH,UAAU,GAAG,CAAC,GAAG,EAAE;IAC3C,IAAI,CAACE,OAAO,GAAG,IAAIgC,KAAK,CAAC,IAAI,CAAC/B,WAAW,CAAC;IAE1C,KAAK,IAAIS,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACT,WAAW,EAAES,GAAG,EAAE,EAAE;MAEhD,IAAI,CAACV,OAAO,CAACU,GAAG,CAAC,GAAG,IAAIsB,KAAK,CAAC,IAAI,CAAC/B,WAAW,CAAC;MAE/C,KAAK,IAAIU,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACV,WAAW,EAAEU,GAAG,EAAE,EAAE;QAChD,IAAI,CAACX,OAAO,CAACU,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,IAAI,CAAC;MAC/B;IACD;IAEA,IAAI,CAACsB,yBAAyB,CAAC,CAAC,EAAE,CAAC,CAAC;IACpC,IAAI,CAACA,yBAAyB,CAAC,IAAI,CAAChC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;IACvD,IAAI,CAACgC,yBAAyB,CAAC,CAAC,EAAE,IAAI,CAAChC,WAAW,GAAG,CAAC,CAAC;IACvD,IAAI,CAACiC,0BAA0B,CAAC,CAAC;IACjC,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,aAAa,CAACN,IAAI,EAAEC,WAAW,CAAC;IAErC,IAAI,IAAI,CAACjC,UAAU,IAAI,CAAC,EAAE;MACzB,IAAI,CAACuC,eAAe,CAACP,IAAI,CAAC;IAC3B;IAEA,IAAI,IAAI,CAAC5B,SAAS,KAAK,IAAI,EAAE;MAC5B,IAAI,CAACA,SAAS,GAAGL,MAAM,CAACyC,UAAU,CAAC,IAAI,CAACxC,UAAU,EAAE,IAAI,CAACC,iBAAiB,EAAE,IAAI,CAACI,QAAQ,CAAC;IAC3F;IAEA,IAAI,CAACoC,OAAO,CAAC,IAAI,CAACrC,SAAS,EAAE6B,WAAW,CAAC;EAC1C,CAAC;EAEDE,yBAAyB,EAAG,SAAAA,CAASvB,GAAG,EAAEC,GAAG,EAAG;IAE/C,KAAK,IAAI6B,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAE7B,IAAI9B,GAAG,GAAG8B,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAACvC,WAAW,IAAIS,GAAG,GAAG8B,CAAC,EAAE;MAElD,KAAK,IAAIC,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAE7B,IAAI9B,GAAG,GAAG8B,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAACxC,WAAW,IAAIU,GAAG,GAAG8B,CAAC,EAAE;QAElD,IAAM,CAAC,IAAID,CAAC,IAAIA,CAAC,IAAI,CAAC,KAAKC,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,CAAC,IAC5B,CAAC,IAAIA,CAAC,IAAIA,CAAC,IAAI,CAAC,KAAKD,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,CAAG,IAC1C,CAAC,IAAIA,CAAC,IAAIA,CAAC,IAAI,CAAC,IAAI,CAAC,IAAIC,CAAC,IAAIA,CAAC,IAAI,CAAE,EAAG;UACzD,IAAI,CAACzC,OAAO,CAACU,GAAG,GAAG8B,CAAC,CAAC,CAAC7B,GAAG,GAAG8B,CAAC,CAAC,GAAG,IAAI;QACtC,CAAC,MAAM;UACN,IAAI,CAACzC,OAAO,CAACU,GAAG,GAAG8B,CAAC,CAAC,CAAC7B,GAAG,GAAG8B,CAAC,CAAC,GAAG,KAAK;QACvC;MACD;IACD;EACD,CAAC;EAEDZ,kBAAkB,EAAG,SAAAA,CAAA,EAAW;IAE/B,IAAIa,YAAY,GAAG,CAAC;IACpB,IAAIC,OAAO,GAAG,CAAC;IAEf,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAE3B,IAAI,CAACS,QAAQ,CAAC,IAAI,EAAET,CAAC,CAAC;MAEtB,IAAIyB,SAAS,GAAGnD,MAAM,CAACoD,YAAY,CAAC,IAAI,CAAC;MAEzC,IAAI1B,CAAC,KAAK,CAAC,IAAIuB,YAAY,GAAIE,SAAS,EAAE;QACzCF,YAAY,GAAGE,SAAS;QACxBD,OAAO,GAAGxB,CAAC;MACZ;IACD;IAEA,OAAOwB,OAAO;EACf,CAAC;EAEDG,eAAe,EAAG,SAAAA,CAASC,SAAS,EAAEC,aAAa,EAAEC,KAAK,EAAE;IAE3D,IAAIC,KAAK,GAAGH,SAAS,CAACI,oBAAoB,CAACH,aAAa,EAAEC,KAAK,CAAC;IAChE,IAAIG,EAAE,GAAG,CAAC;IAEV,IAAI,CAACtC,IAAI,CAAC,CAAC;IAEX,KAAK,IAAIJ,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACV,OAAO,CAACoB,MAAM,EAAEV,GAAG,EAAE,EAAE;MAEnD,IAAI2C,CAAC,GAAG3C,GAAG,GAAG0C,EAAE;MAEhB,KAAK,IAAIzC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACX,OAAO,CAACU,GAAG,CAAC,CAACU,MAAM,EAAET,GAAG,EAAE,EAAE;QAExD,IAAIW,CAAC,GAAGX,GAAG,GAAGyC,EAAE;QAChB,IAAIE,IAAI,GAAG,IAAI,CAACtD,OAAO,CAACU,GAAG,CAAC,CAACC,GAAG,CAAC;QAEjC,IAAI2C,IAAI,EAAE;UACTJ,KAAK,CAACK,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;UACvBL,KAAK,CAACM,MAAM,CAAClC,CAAC,EAAE+B,CAAC,CAAC;UAClBH,KAAK,CAACO,MAAM,CAACnC,CAAC,GAAG8B,EAAE,EAAEC,CAAC,CAAC;UACvBH,KAAK,CAACO,MAAM,CAACnC,CAAC,GAAG8B,EAAE,EAAEC,CAAC,GAAGD,EAAE,CAAC;UAC5BF,KAAK,CAACO,MAAM,CAACnC,CAAC,EAAE+B,CAAC,GAAGD,EAAE,CAAC;UACvBF,KAAK,CAACQ,OAAO,CAAC,CAAC;QAChB;MACD;IACD;IAEA,OAAOR,KAAK;EACb,CAAC;EAEDf,kBAAkB,EAAG,SAAAA,CAAA,EAAW;IAE/B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACvC,WAAW,GAAG,CAAC,EAAEuC,CAAC,EAAE,EAAE;MAC9C,IAAI,IAAI,CAACxC,OAAO,CAACwC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;QAChC;MACD;MACA,IAAI,CAACxC,OAAO,CAACwC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAIA,CAAC,GAAG,CAAC,KAAK,CAAE;IACnC;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACxC,WAAW,GAAG,CAAC,EAAEwC,CAAC,EAAE,EAAE;MAC9C,IAAI,IAAI,CAACzC,OAAO,CAAC,CAAC,CAAC,CAACyC,CAAC,CAAC,KAAK,IAAI,EAAE;QAChC;MACD;MACA,IAAI,CAACzC,OAAO,CAAC,CAAC,CAAC,CAACyC,CAAC,CAAC,GAAIA,CAAC,GAAG,CAAC,KAAK,CAAE;IACnC;EACD,CAAC;EAEDP,0BAA0B,EAAG,SAAAA,CAAA,EAAW;IAEvC,IAAIyB,GAAG,GAAGlE,MAAM,CAACmE,kBAAkB,CAAC,IAAI,CAAC9D,UAAU,CAAC;IAEpD,KAAK,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwC,GAAG,CAACvC,MAAM,EAAED,CAAC,EAAE,EAAE;MAEpC,KAAK,IAAI0C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACvC,MAAM,EAAEyC,CAAC,EAAE,EAAE;QAEpC,IAAInD,GAAG,GAAGiD,GAAG,CAACxC,CAAC,CAAC;QAChB,IAAIR,GAAG,GAAGgD,GAAG,CAACE,CAAC,CAAC;QAEhB,IAAI,IAAI,CAAC7D,OAAO,CAACU,GAAG,CAAC,CAACC,GAAG,CAAC,KAAK,IAAI,EAAE;UACpC;QACD;QAEA,KAAK,IAAI6B,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAE7B,KAAK,IAAIC,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;YAE7B,IAAIqB,IAAI,CAACC,GAAG,CAACvB,CAAC,CAAC,KAAK,CAAC,IACCsB,IAAI,CAACC,GAAG,CAACtB,CAAC,CAAC,KAAK,CAAC,IAChBD,CAAC,KAAK,CAAC,IAAIC,CAAC,KAAK,CAAE,EAAG;cAC5C,IAAI,CAACzC,OAAO,CAACU,GAAG,GAAG8B,CAAC,CAAC,CAAC7B,GAAG,GAAG8B,CAAC,CAAC,GAAG,IAAI;YACtC,CAAC,MAAM;cACN,IAAI,CAACzC,OAAO,CAACU,GAAG,GAAG8B,CAAC,CAAC,CAAC7B,GAAG,GAAG8B,CAAC,CAAC,GAAG,KAAK;YACvC;UACD;QACD;MACD;IACD;EACD,CAAC;EAEDJ,eAAe,EAAG,SAAAA,CAASP,IAAI,EAAE;IAEhC,IAAIkC,IAAI,GAAGvE,MAAM,CAACwE,gBAAgB,CAAC,IAAI,CAACnE,UAAU,CAAC;IAC7C,IAAIoE,GAAG;IAEb,KAAK,IAAI/C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B+C,GAAG,GAAI,CAACpC,IAAI,IAAI,CAAGkC,IAAI,IAAI7C,CAAC,GAAI,CAAC,MAAM,CAAE;MACzC,IAAI,CAACnB,OAAO,CAAC8D,IAAI,CAACK,KAAK,CAAChD,CAAC,GAAG,CAAC,CAAC,CAAC,CAACA,CAAC,GAAG,CAAC,GAAG,IAAI,CAAClB,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGiE,GAAG;IACxE;IAEA,KAAK,IAAI5C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B4C,GAAG,GAAI,CAACpC,IAAI,IAAI,CAAGkC,IAAI,IAAI1C,CAAC,GAAI,CAAC,MAAM,CAAE;MACzC,IAAI,CAACtB,OAAO,CAACsB,CAAC,GAAG,CAAC,GAAG,IAAI,CAACrB,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC6D,IAAI,CAACK,KAAK,CAAC7C,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG4C,GAAG;IACxE;EACD,CAAC;EAED9B,aAAa,EAAG,SAAAA,CAASN,IAAI,EAAEC,WAAW,EAAE;IAE3C,IAAIzB,IAAI,GAAI,IAAI,CAACP,iBAAiB,IAAI,CAAC,GAAIgC,WAAW;IACtD,IAAIiC,IAAI,GAAGvE,MAAM,CAAC2E,cAAc,CAAC9D,IAAI,CAAC;IAChC,IAAI4D,GAAG;;IAEb;IACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAE5BH,GAAG,GAAI,CAACpC,IAAI,IAAI,CAAGkC,IAAI,IAAIK,CAAC,GAAI,CAAC,MAAM,CAAE;MAEzC,IAAIA,CAAC,GAAG,CAAC,EAAE;QACV,IAAI,CAACrE,OAAO,CAACqE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGH,GAAG;MACzB,CAAC,MAAM,IAAIG,CAAC,GAAG,CAAC,EAAE;QACjB,IAAI,CAACrE,OAAO,CAACqE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGH,GAAG;MAC7B,CAAC,MAAM;QACN,IAAI,CAAClE,OAAO,CAAC,IAAI,CAACC,WAAW,GAAG,EAAE,GAAGoE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGH,GAAG;MACjD;IACD;;IAEA;IACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAE5BJ,GAAG,GAAI,CAACpC,IAAI,IAAI,CAAGkC,IAAI,IAAIM,CAAC,GAAI,CAAC,MAAM,CAAE;MAEzC,IAAIA,CAAC,GAAG,CAAC,EAAE;QACV,IAAI,CAACtE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAACC,WAAW,GAAGqE,CAAC,GAAG,CAAC,CAAC,GAAGJ,GAAG;MAChD,CAAC,MAAM,IAAII,CAAC,GAAG,CAAC,EAAE;QACjB,IAAI,CAACtE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGsE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGJ,GAAG;MACtC,CAAC,MAAM;QACN,IAAI,CAAClE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGsE,CAAC,GAAG,CAAC,CAAC,GAAGJ,GAAG;MAClC;IACD;;IAEA;IACA,IAAI,CAAClE,OAAO,CAAC,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAI,CAAC6B,IAAK;EAEhD,CAAC;EAEDS,OAAO,EAAG,SAAAA,CAASjC,IAAI,EAAEyB,WAAW,EAAE;IAErC,IAAIwC,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI7D,GAAG,GAAG,IAAI,CAACT,WAAW,GAAG,CAAC;IAC9B,IAAIuE,QAAQ,GAAG,CAAC;IAChB,IAAIC,SAAS,GAAG,CAAC;IAEjB,KAAK,IAAI9D,GAAG,GAAG,IAAI,CAACV,WAAW,GAAG,CAAC,EAAEU,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAI,CAAC,EAAE;MAEvD,IAAIA,GAAG,KAAK,CAAC,EAAEA,GAAG,EAAE;MAEpB,OAAO,IAAI,EAAE;QAEZ,KAAK,IAAI8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;UAE3B,IAAI,IAAI,CAACzC,OAAO,CAACU,GAAG,CAAC,CAACC,GAAG,GAAG8B,CAAC,CAAC,KAAK,IAAI,EAAE;YAExC,IAAIa,IAAI,GAAG,KAAK;YAEhB,IAAImB,SAAS,GAAGnE,IAAI,CAACc,MAAM,EAAE;cAC5BkC,IAAI,GAAK,CAAGhD,IAAI,CAACmE,SAAS,CAAC,KAAKD,QAAQ,GAAI,CAAC,MAAM,CAAE;YACtD;YAEA,IAAIE,IAAI,GAAGjF,MAAM,CAACkF,OAAO,CAAC5C,WAAW,EAAErB,GAAG,EAAEC,GAAG,GAAG8B,CAAC,CAAC;YAEpD,IAAIiC,IAAI,EAAE;cACTpB,IAAI,GAAG,CAACA,IAAI;YACb;YAEA,IAAI,CAACtD,OAAO,CAACU,GAAG,CAAC,CAACC,GAAG,GAAG8B,CAAC,CAAC,GAAGa,IAAI;YACjCkB,QAAQ,EAAE;YAEV,IAAIA,QAAQ,KAAK,CAAC,CAAC,EAAE;cACpBC,SAAS,EAAE;cACXD,QAAQ,GAAG,CAAC;YACb;UACD;QACD;QAEA9D,GAAG,IAAI6D,GAAG;QAEV,IAAI7D,GAAG,GAAG,CAAC,IAAI,IAAI,CAACT,WAAW,IAAIS,GAAG,EAAE;UACvCA,GAAG,IAAI6D,GAAG;UACVA,GAAG,GAAG,CAACA,GAAG;UACV;QACD;MACD;IACD;EAED;AAED,CAAC;AAED1E,MAAM,CAAC+E,IAAI,GAAG,IAAI;AAClB/E,MAAM,CAACgF,IAAI,GAAG,IAAI;AAElBhF,MAAM,CAACyC,UAAU,GAAG,UAASxC,UAAU,EAAEC,iBAAiB,EAAEI,QAAQ,EAAE;EAErE,IAAIY,QAAQ,GAAGpB,SAAS,CAACqB,WAAW,CAAClB,UAAU,EAAEC,iBAAiB,CAAC;EAEnE,IAAIkB,MAAM,GAAG,IAAIrB,WAAW,CAAC,CAAC;EAE9B,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,QAAQ,CAACiB,MAAM,EAAED,CAAC,EAAE,EAAE;IACzC,IAAIb,IAAI,GAAGH,QAAQ,CAACgB,CAAC,CAAC;IACtBF,MAAM,CAACM,GAAG,CAACjB,IAAI,CAACkB,IAAI,EAAE,CAAC,CAAC;IACxBP,MAAM,CAACM,GAAG,CAACjB,IAAI,CAACmB,SAAS,CAAC,CAAC,EAAEhC,MAAM,CAACiC,eAAe,CAACpB,IAAI,CAACkB,IAAI,EAAE1B,UAAU,CAAE,CAAC;IAC5EQ,IAAI,CAACqB,KAAK,CAACV,MAAM,CAAC;EACnB;;EAEA;EACA,IAAIC,cAAc,GAAG,CAAC;EACtB,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,CAACK,MAAM,EAAEE,CAAC,EAAE,EAAE;IACzCJ,cAAc,IAAIH,QAAQ,CAACO,CAAC,CAAC,CAACD,SAAS;EACxC;EAEA,IAAIJ,MAAM,CAACS,eAAe,CAAC,CAAC,GAAGR,cAAc,GAAG,CAAC,EAAE;IAClD,MAAM,IAAIN,KAAK,CAAC,yBAAyB,GAC/BK,MAAM,CAACS,eAAe,CAAC,CAAC,GACxB,GAAG,GACHR,cAAc,GAAG,CAAC,GAClB,GAAG,CAAC;EACf;;EAEA;EACA,IAAID,MAAM,CAACS,eAAe,CAAC,CAAC,GAAG,CAAC,IAAIR,cAAc,GAAG,CAAC,EAAE;IACvDD,MAAM,CAACM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACjB;;EAEA;EACA,OAAON,MAAM,CAACS,eAAe,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IAC1CT,MAAM,CAAC6D,MAAM,CAAC,KAAK,CAAC;EACrB;;EAEA;EACA,OAAO,IAAI,EAAE;IAEZ,IAAI7D,MAAM,CAACS,eAAe,CAAC,CAAC,IAAIR,cAAc,GAAG,CAAC,EAAE;MACnD;IACD;IACAD,MAAM,CAACM,GAAG,CAAC1B,MAAM,CAAC+E,IAAI,EAAE,CAAC,CAAC;IAE1B,IAAI3D,MAAM,CAACS,eAAe,CAAC,CAAC,IAAIR,cAAc,GAAG,CAAC,EAAE;MACnD;IACD;IACAD,MAAM,CAACM,GAAG,CAAC1B,MAAM,CAACgF,IAAI,EAAE,CAAC,CAAC;EAC3B;EAEA,OAAOhF,MAAM,CAACkF,WAAW,CAAC9D,MAAM,EAAEF,QAAQ,CAAC;AAC5C,CAAC;AAEDlB,MAAM,CAACkF,WAAW,GAAG,UAAS9D,MAAM,EAAEF,QAAQ,EAAE;EAE/C,IAAIiE,MAAM,GAAG,CAAC;EAEd,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,UAAU,GAAG,CAAC;EAElB,IAAIC,MAAM,GAAG,IAAInD,KAAK,CAACjB,QAAQ,CAACK,MAAM,CAAC;EACvC,IAAIgE,MAAM,GAAG,IAAIpD,KAAK,CAACjB,QAAQ,CAACK,MAAM,CAAC;EAEvC,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzB,QAAQ,CAACK,MAAM,EAAEoB,CAAC,EAAE,EAAE;IAEzC,IAAI6C,OAAO,GAAGtE,QAAQ,CAACyB,CAAC,CAAC,CAACnB,SAAS;IACnC,IAAIiE,OAAO,GAAGvE,QAAQ,CAACyB,CAAC,CAAC,CAAC+C,UAAU,GAAGF,OAAO;IAE9CJ,UAAU,GAAGnB,IAAI,CAAC0B,GAAG,CAACP,UAAU,EAAEI,OAAO,CAAC;IAC1CH,UAAU,GAAGpB,IAAI,CAAC0B,GAAG,CAACN,UAAU,EAAEI,OAAO,CAAC;IAE1CH,MAAM,CAAC3C,CAAC,CAAC,GAAG,IAAIR,KAAK,CAACqD,OAAO,CAAC;IAE9B,KAAK,IAAIlE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgE,MAAM,CAAC3C,CAAC,CAAC,CAACpB,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1CgE,MAAM,CAAC3C,CAAC,CAAC,CAACrB,CAAC,CAAC,GAAG,IAAI,GAAGF,MAAM,CAACA,MAAM,CAACE,CAAC,GAAG6D,MAAM,CAAC;IAChD;IACAA,MAAM,IAAIK,OAAO;IAEjB,IAAII,MAAM,GAAGhG,MAAM,CAACiG,yBAAyB,CAACJ,OAAO,CAAC;IACtD,IAAIK,OAAO,GAAG,IAAIjG,YAAY,CAACyF,MAAM,CAAC3C,CAAC,CAAC,EAAEiD,MAAM,CAAChE,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IAEjE,IAAImE,OAAO,GAAGD,OAAO,CAACzB,GAAG,CAACuB,MAAM,CAAC;IACjCL,MAAM,CAAC5C,CAAC,CAAC,GAAG,IAAIR,KAAK,CAACyD,MAAM,CAAChE,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7C,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8D,MAAM,CAAC5C,CAAC,CAAC,CAACpB,MAAM,EAAEE,CAAC,EAAE,EAAE;MACjC,IAAIuE,QAAQ,GAAGvE,CAAC,GAAGsE,OAAO,CAACnE,SAAS,CAAC,CAAC,GAAG2D,MAAM,CAAC5C,CAAC,CAAC,CAACpB,MAAM;MAClEgE,MAAM,CAAC5C,CAAC,CAAC,CAAClB,CAAC,CAAC,GAAIuE,QAAQ,IAAI,CAAC,GAAGD,OAAO,CAACE,GAAG,CAACD,QAAQ,CAAC,GAAG,CAAC;IAC1D;EAED;EAEA,IAAIE,cAAc,GAAG,CAAC;EACtB,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtC,QAAQ,CAACK,MAAM,EAAEiC,CAAC,EAAE,EAAE;IACzC0C,cAAc,IAAIhF,QAAQ,CAACsC,CAAC,CAAC,CAACkC,UAAU;EACzC;EAEA,IAAIjF,IAAI,GAAG,IAAI0B,KAAK,CAAC+D,cAAc,CAAC;EACpC,IAAIC,KAAK,GAAG,CAAC;EAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,UAAU,EAAEgB,CAAC,EAAE,EAAE;IACpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnF,QAAQ,CAACK,MAAM,EAAE8E,CAAC,EAAE,EAAE;MACzC,IAAID,CAAC,GAAGd,MAAM,CAACe,CAAC,CAAC,CAAC9E,MAAM,EAAE;QACzBd,IAAI,CAAC0F,KAAK,EAAE,CAAC,GAAGb,MAAM,CAACe,CAAC,CAAC,CAACD,CAAC,CAAC;MAC7B;IACD;EACD;EAEA,KAAK,IAAIE,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGjB,UAAU,EAAEiB,EAAE,EAAE,EAAE;IACvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrF,QAAQ,CAACK,MAAM,EAAEgF,CAAC,EAAE,EAAE;MACzC,IAAID,EAAE,GAAGf,MAAM,CAACgB,CAAC,CAAC,CAAChF,MAAM,EAAE;QAC1Bd,IAAI,CAAC0F,KAAK,EAAE,CAAC,GAAGZ,MAAM,CAACgB,CAAC,CAAC,CAACD,EAAE,CAAC;MAC9B;IACD;EACD;EAEA,OAAO7F,IAAI;AAEZ,CAAC;AAED+F,MAAM,CAACC,OAAO,GAAGzG,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}