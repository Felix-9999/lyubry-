{"ast":null,"code":"const log = require('npmlog');\nconst pacote = require('pacote');\nconst openUrl = require('./utils/open-url.js');\nconst hostedFromMani = require('./utils/hosted-git-info-from-manifest.js');\nconst BaseCommand = require('./base-command.js');\nclass Docs extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Open documentation for a package in a web browser';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'docs';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['browser', 'registry', 'workspace', 'workspaces'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['[<pkgname> [<pkgname> ...]]'];\n  }\n  exec(args, cb) {\n    this.docs(args).then(() => cb()).catch(cb);\n  }\n  execWorkspaces(args, filters, cb) {\n    this.docsWorkspaces(args, filters).then(() => cb()).catch(cb);\n  }\n  async docs(args) {\n    if (!args || !args.length) args = ['.'];\n    await Promise.all(args.map(pkg => this.getDocs(pkg)));\n  }\n  async docsWorkspaces(args, filters) {\n    await this.setWorkspaces(filters);\n    return this.docs(this.workspacePaths);\n  }\n  async getDocs(pkg) {\n    const opts = {\n      ...this.npm.flatOptions,\n      fullMetadata: true\n    };\n    const mani = await pacote.manifest(pkg, opts);\n    const url = this.getDocsUrl(mani);\n    log.silly('docs', 'url', url);\n    await openUrl(this.npm, url, `${mani.name} docs available at the following URL`);\n  }\n  getDocsUrl(mani) {\n    if (mani.homepage) return mani.homepage;\n    const info = hostedFromMani(mani);\n    if (info) return info.docs();\n    return 'https://www.npmjs.com/package/' + mani.name;\n  }\n}\nmodule.exports = Docs;","map":{"version":3,"names":["log","require","pacote","openUrl","hostedFromMani","BaseCommand","Docs","description","name","params","usage","exec","args","cb","docs","then","catch","execWorkspaces","filters","docsWorkspaces","length","Promise","all","map","pkg","getDocs","setWorkspaces","workspacePaths","opts","npm","flatOptions","fullMetadata","mani","manifest","url","getDocsUrl","silly","homepage","info","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/docs.js"],"sourcesContent":["const log = require('npmlog')\nconst pacote = require('pacote')\nconst openUrl = require('./utils/open-url.js')\nconst hostedFromMani = require('./utils/hosted-git-info-from-manifest.js')\n\nconst BaseCommand = require('./base-command.js')\nclass Docs extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Open documentation for a package in a web browser'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'docs'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['browser', 'registry', 'workspace', 'workspaces']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['[<pkgname> [<pkgname> ...]]']\n  }\n\n  exec (args, cb) {\n    this.docs(args).then(() => cb()).catch(cb)\n  }\n\n  execWorkspaces (args, filters, cb) {\n    this.docsWorkspaces(args, filters).then(() => cb()).catch(cb)\n  }\n\n  async docs (args) {\n    if (!args || !args.length)\n      args = ['.']\n\n    await Promise.all(args.map(pkg => this.getDocs(pkg)))\n  }\n\n  async docsWorkspaces (args, filters) {\n    await this.setWorkspaces(filters)\n    return this.docs(this.workspacePaths)\n  }\n\n  async getDocs (pkg) {\n    const opts = { ...this.npm.flatOptions, fullMetadata: true }\n    const mani = await pacote.manifest(pkg, opts)\n    const url = this.getDocsUrl(mani)\n    log.silly('docs', 'url', url)\n    await openUrl(this.npm, url, `${mani.name} docs available at the following URL`)\n  }\n\n  getDocsUrl (mani) {\n    if (mani.homepage)\n      return mani.homepage\n\n    const info = hostedFromMani(mani)\n    if (info)\n      return info.docs()\n\n    return 'https://www.npmjs.com/package/' + mani.name\n  }\n}\nmodule.exports = Docs\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC7B,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,OAAO,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC9C,MAAMG,cAAc,GAAGH,OAAO,CAAC,0CAA0C,CAAC;AAE1E,MAAMI,WAAW,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AAChD,MAAMK,IAAI,SAASD,WAAW,CAAC;EAC7B;EACA,WAAWE,WAAWA,CAAA,EAAI;IACxB,OAAO,mDAAmD;EAC5D;;EAEA;EACA,WAAWC,IAAIA,CAAA,EAAI;IACjB,OAAO,MAAM;EACf;;EAEA;EACA,WAAWC,MAAMA,CAAA,EAAI;IACnB,OAAO,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,CAAC;EAC3D;;EAEA;EACA,WAAWC,KAAKA,CAAA,EAAI;IAClB,OAAO,CAAC,6BAA6B,CAAC;EACxC;EAEAC,IAAIA,CAAEC,IAAI,EAAEC,EAAE,EAAE;IACd,IAAI,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,MAAMF,EAAE,CAAC,CAAC,CAAC,CAACG,KAAK,CAACH,EAAE,CAAC;EAC5C;EAEAI,cAAcA,CAAEL,IAAI,EAAEM,OAAO,EAAEL,EAAE,EAAE;IACjC,IAAI,CAACM,cAAc,CAACP,IAAI,EAAEM,OAAO,CAAC,CAACH,IAAI,CAAC,MAAMF,EAAE,CAAC,CAAC,CAAC,CAACG,KAAK,CAACH,EAAE,CAAC;EAC/D;EAEA,MAAMC,IAAIA,CAAEF,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACQ,MAAM,EACvBR,IAAI,GAAG,CAAC,GAAG,CAAC;IAEd,MAAMS,OAAO,CAACC,GAAG,CAACV,IAAI,CAACW,GAAG,CAACC,GAAG,IAAI,IAAI,CAACC,OAAO,CAACD,GAAG,CAAC,CAAC,CAAC;EACvD;EAEA,MAAML,cAAcA,CAAEP,IAAI,EAAEM,OAAO,EAAE;IACnC,MAAM,IAAI,CAACQ,aAAa,CAACR,OAAO,CAAC;IACjC,OAAO,IAAI,CAACJ,IAAI,CAAC,IAAI,CAACa,cAAc,CAAC;EACvC;EAEA,MAAMF,OAAOA,CAAED,GAAG,EAAE;IAClB,MAAMI,IAAI,GAAG;MAAE,GAAG,IAAI,CAACC,GAAG,CAACC,WAAW;MAAEC,YAAY,EAAE;IAAK,CAAC;IAC5D,MAAMC,IAAI,GAAG,MAAM9B,MAAM,CAAC+B,QAAQ,CAACT,GAAG,EAAEI,IAAI,CAAC;IAC7C,MAAMM,GAAG,GAAG,IAAI,CAACC,UAAU,CAACH,IAAI,CAAC;IACjChC,GAAG,CAACoC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAEF,GAAG,CAAC;IAC7B,MAAM/B,OAAO,CAAC,IAAI,CAAC0B,GAAG,EAAEK,GAAG,EAAE,GAAGF,IAAI,CAACxB,IAAI,sCAAsC,CAAC;EAClF;EAEA2B,UAAUA,CAAEH,IAAI,EAAE;IAChB,IAAIA,IAAI,CAACK,QAAQ,EACf,OAAOL,IAAI,CAACK,QAAQ;IAEtB,MAAMC,IAAI,GAAGlC,cAAc,CAAC4B,IAAI,CAAC;IACjC,IAAIM,IAAI,EACN,OAAOA,IAAI,CAACxB,IAAI,CAAC,CAAC;IAEpB,OAAO,gCAAgC,GAAGkB,IAAI,CAACxB,IAAI;EACrD;AACF;AACA+B,MAAM,CAACC,OAAO,GAAGlC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}