{"ast":null,"code":"const _progress = Symbol('_progress');\nconst _onError = Symbol('_onError');\nconst procLog = require('proc-log');\nmodule.exports = cls => class Tracker extends cls {\n  constructor(options = {}) {\n    super(options);\n    this.log = options.log || procLog;\n    this[_progress] = new Map();\n  }\n  addTracker(section, subsection = null, key = null) {\n    // TrackerGroup type object not found\n    if (!this.log.newGroup) {\n      return;\n    }\n    if (section === null || section === undefined) {\n      this[_onError](`Tracker can't be null or undefined`);\n    }\n    if (key === null) {\n      key = subsection;\n    }\n    const hasTracker = this[_progress].has(section);\n    const hasSubtracker = this[_progress].has(`${section}:${key}`);\n    if (hasTracker && subsection === null) {\n      // 0. existing tracker, no subsection\n      this[_onError](`Tracker \"${section}\" already exists`);\n    } else if (!hasTracker && subsection === null) {\n      // 1. no existing tracker, no subsection\n      // Create a new tracker from this.log\n      // starts progress bar\n      if (this[_progress].size === 0) {\n        this.log.enableProgress();\n      }\n      this[_progress].set(section, this.log.newGroup(section));\n    } else if (!hasTracker && subsection !== null) {\n      // 2. no parent tracker and subsection\n      this[_onError](`Parent tracker \"${section}\" does not exist`);\n    } else if (!hasTracker || !hasSubtracker) {\n      // 3. existing parent tracker, no subsection tracker\n      // Create a new subtracker in this[_progress] from parent tracker\n      this[_progress].set(`${section}:${key}`, this[_progress].get(section).newGroup(`${section}:${subsection}`));\n    }\n    // 4. existing parent tracker, existing subsection tracker\n    // skip it\n  }\n  finishTracker(section, subsection = null, key = null) {\n    // TrackerGroup type object not found\n    if (!this.log.newGroup) {\n      return;\n    }\n    if (section === null || section === undefined) {\n      this[_onError](`Tracker can't be null or undefined`);\n    }\n    if (key === null) {\n      key = subsection;\n    }\n    const hasTracker = this[_progress].has(section);\n    const hasSubtracker = this[_progress].has(`${section}:${key}`);\n\n    // 0. parent tracker exists, no subsection\n    // Finish parent tracker and remove from this[_progress]\n    if (hasTracker && subsection === null) {\n      // check if parent tracker does\n      // not have any remaining children\n      const keys = this[_progress].keys();\n      for (const key of keys) {\n        if (key.match(new RegExp(section + ':'))) {\n          this.finishTracker(section, key);\n        }\n      }\n\n      // remove parent tracker\n      this[_progress].get(section).finish();\n      this[_progress].delete(section);\n\n      // remove progress bar if all\n      // trackers are finished\n      if (this[_progress].size === 0) {\n        this.log.disableProgress();\n      }\n    } else if (!hasTracker && subsection === null) {\n      // 1. no existing parent tracker, no subsection\n      this[_onError](`Tracker \"${section}\" does not exist`);\n    } else if (!hasTracker || hasSubtracker) {\n      // 2. subtracker exists\n      // Finish subtracker and remove from this[_progress]\n      this[_progress].get(`${section}:${key}`).finish();\n      this[_progress].delete(`${section}:${key}`);\n    }\n    // 3. existing parent tracker, no subsection\n  }\n  [_onError](msg) {\n    this.log.disableProgress();\n    throw new Error(msg);\n  }\n};","map":{"version":3,"names":["_progress","Symbol","_onError","procLog","require","module","exports","cls","Tracker","constructor","options","log","Map","addTracker","section","subsection","key","newGroup","undefined","hasTracker","has","hasSubtracker","size","enableProgress","set","get","finishTracker","keys","match","RegExp","finish","delete","disableProgress","msg","Error"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/arborist/lib/tracker.js"],"sourcesContent":["const _progress = Symbol('_progress')\nconst _onError = Symbol('_onError')\nconst procLog = require('proc-log')\n\nmodule.exports = cls => class Tracker extends cls {\n  constructor (options = {}) {\n    super(options)\n    this.log = options.log || procLog\n    this[_progress] = new Map()\n  }\n\n  addTracker (section, subsection = null, key = null) {\n    // TrackerGroup type object not found\n    if (!this.log.newGroup) {\n      return\n    }\n\n    if (section === null || section === undefined) {\n      this[_onError](`Tracker can't be null or undefined`)\n    }\n\n    if (key === null) {\n      key = subsection\n    }\n\n    const hasTracker = this[_progress].has(section)\n    const hasSubtracker = this[_progress].has(`${section}:${key}`)\n\n    if (hasTracker && subsection === null) {\n      // 0. existing tracker, no subsection\n      this[_onError](`Tracker \"${section}\" already exists`)\n    } else if (!hasTracker && subsection === null) {\n      // 1. no existing tracker, no subsection\n      // Create a new tracker from this.log\n      // starts progress bar\n      if (this[_progress].size === 0) {\n        this.log.enableProgress()\n      }\n\n      this[_progress].set(section, this.log.newGroup(section))\n    } else if (!hasTracker && subsection !== null) {\n      // 2. no parent tracker and subsection\n      this[_onError](`Parent tracker \"${section}\" does not exist`)\n    } else if (!hasTracker || !hasSubtracker) {\n      // 3. existing parent tracker, no subsection tracker\n      // Create a new subtracker in this[_progress] from parent tracker\n      this[_progress].set(`${section}:${key}`,\n        this[_progress].get(section).newGroup(`${section}:${subsection}`)\n      )\n    }\n    // 4. existing parent tracker, existing subsection tracker\n    // skip it\n  }\n\n  finishTracker (section, subsection = null, key = null) {\n    // TrackerGroup type object not found\n    if (!this.log.newGroup) {\n      return\n    }\n\n    if (section === null || section === undefined) {\n      this[_onError](`Tracker can't be null or undefined`)\n    }\n\n    if (key === null) {\n      key = subsection\n    }\n\n    const hasTracker = this[_progress].has(section)\n    const hasSubtracker = this[_progress].has(`${section}:${key}`)\n\n    // 0. parent tracker exists, no subsection\n    // Finish parent tracker and remove from this[_progress]\n    if (hasTracker && subsection === null) {\n      // check if parent tracker does\n      // not have any remaining children\n      const keys = this[_progress].keys()\n      for (const key of keys) {\n        if (key.match(new RegExp(section + ':'))) {\n          this.finishTracker(section, key)\n        }\n      }\n\n      // remove parent tracker\n      this[_progress].get(section).finish()\n      this[_progress].delete(section)\n\n      // remove progress bar if all\n      // trackers are finished\n      if (this[_progress].size === 0) {\n        this.log.disableProgress()\n      }\n    } else if (!hasTracker && subsection === null) {\n      // 1. no existing parent tracker, no subsection\n      this[_onError](`Tracker \"${section}\" does not exist`)\n    } else if (!hasTracker || hasSubtracker) {\n      // 2. subtracker exists\n      // Finish subtracker and remove from this[_progress]\n      this[_progress].get(`${section}:${key}`).finish()\n      this[_progress].delete(`${section}:${key}`)\n    }\n    // 3. existing parent tracker, no subsection\n  }\n\n  [_onError] (msg) {\n    this.log.disableProgress()\n    throw new Error(msg)\n  }\n}\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,MAAM,CAAC,WAAW,CAAC;AACrC,MAAMC,QAAQ,GAAGD,MAAM,CAAC,UAAU,CAAC;AACnC,MAAME,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEnCC,MAAM,CAACC,OAAO,GAAGC,GAAG,IAAI,MAAMC,OAAO,SAASD,GAAG,CAAC;EAChDE,WAAWA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACzB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,GAAG,GAAGD,OAAO,CAACC,GAAG,IAAIR,OAAO;IACjC,IAAI,CAACH,SAAS,CAAC,GAAG,IAAIY,GAAG,CAAC,CAAC;EAC7B;EAEAC,UAAUA,CAAEC,OAAO,EAAEC,UAAU,GAAG,IAAI,EAAEC,GAAG,GAAG,IAAI,EAAE;IAClD;IACA,IAAI,CAAC,IAAI,CAACL,GAAG,CAACM,QAAQ,EAAE;MACtB;IACF;IAEA,IAAIH,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAKI,SAAS,EAAE;MAC7C,IAAI,CAAChB,QAAQ,CAAC,CAAC,oCAAoC,CAAC;IACtD;IAEA,IAAIc,GAAG,KAAK,IAAI,EAAE;MAChBA,GAAG,GAAGD,UAAU;IAClB;IAEA,MAAMI,UAAU,GAAG,IAAI,CAACnB,SAAS,CAAC,CAACoB,GAAG,CAACN,OAAO,CAAC;IAC/C,MAAMO,aAAa,GAAG,IAAI,CAACrB,SAAS,CAAC,CAACoB,GAAG,CAAC,GAAGN,OAAO,IAAIE,GAAG,EAAE,CAAC;IAE9D,IAAIG,UAAU,IAAIJ,UAAU,KAAK,IAAI,EAAE;MACrC;MACA,IAAI,CAACb,QAAQ,CAAC,CAAC,YAAYY,OAAO,kBAAkB,CAAC;IACvD,CAAC,MAAM,IAAI,CAACK,UAAU,IAAIJ,UAAU,KAAK,IAAI,EAAE;MAC7C;MACA;MACA;MACA,IAAI,IAAI,CAACf,SAAS,CAAC,CAACsB,IAAI,KAAK,CAAC,EAAE;QAC9B,IAAI,CAACX,GAAG,CAACY,cAAc,CAAC,CAAC;MAC3B;MAEA,IAAI,CAACvB,SAAS,CAAC,CAACwB,GAAG,CAACV,OAAO,EAAE,IAAI,CAACH,GAAG,CAACM,QAAQ,CAACH,OAAO,CAAC,CAAC;IAC1D,CAAC,MAAM,IAAI,CAACK,UAAU,IAAIJ,UAAU,KAAK,IAAI,EAAE;MAC7C;MACA,IAAI,CAACb,QAAQ,CAAC,CAAC,mBAAmBY,OAAO,kBAAkB,CAAC;IAC9D,CAAC,MAAM,IAAI,CAACK,UAAU,IAAI,CAACE,aAAa,EAAE;MACxC;MACA;MACA,IAAI,CAACrB,SAAS,CAAC,CAACwB,GAAG,CAAC,GAAGV,OAAO,IAAIE,GAAG,EAAE,EACrC,IAAI,CAAChB,SAAS,CAAC,CAACyB,GAAG,CAACX,OAAO,CAAC,CAACG,QAAQ,CAAC,GAAGH,OAAO,IAAIC,UAAU,EAAE,CAClE,CAAC;IACH;IACA;IACA;EACF;EAEAW,aAAaA,CAAEZ,OAAO,EAAEC,UAAU,GAAG,IAAI,EAAEC,GAAG,GAAG,IAAI,EAAE;IACrD;IACA,IAAI,CAAC,IAAI,CAACL,GAAG,CAACM,QAAQ,EAAE;MACtB;IACF;IAEA,IAAIH,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAKI,SAAS,EAAE;MAC7C,IAAI,CAAChB,QAAQ,CAAC,CAAC,oCAAoC,CAAC;IACtD;IAEA,IAAIc,GAAG,KAAK,IAAI,EAAE;MAChBA,GAAG,GAAGD,UAAU;IAClB;IAEA,MAAMI,UAAU,GAAG,IAAI,CAACnB,SAAS,CAAC,CAACoB,GAAG,CAACN,OAAO,CAAC;IAC/C,MAAMO,aAAa,GAAG,IAAI,CAACrB,SAAS,CAAC,CAACoB,GAAG,CAAC,GAAGN,OAAO,IAAIE,GAAG,EAAE,CAAC;;IAE9D;IACA;IACA,IAAIG,UAAU,IAAIJ,UAAU,KAAK,IAAI,EAAE;MACrC;MACA;MACA,MAAMY,IAAI,GAAG,IAAI,CAAC3B,SAAS,CAAC,CAAC2B,IAAI,CAAC,CAAC;MACnC,KAAK,MAAMX,GAAG,IAAIW,IAAI,EAAE;QACtB,IAAIX,GAAG,CAACY,KAAK,CAAC,IAAIC,MAAM,CAACf,OAAO,GAAG,GAAG,CAAC,CAAC,EAAE;UACxC,IAAI,CAACY,aAAa,CAACZ,OAAO,EAAEE,GAAG,CAAC;QAClC;MACF;;MAEA;MACA,IAAI,CAAChB,SAAS,CAAC,CAACyB,GAAG,CAACX,OAAO,CAAC,CAACgB,MAAM,CAAC,CAAC;MACrC,IAAI,CAAC9B,SAAS,CAAC,CAAC+B,MAAM,CAACjB,OAAO,CAAC;;MAE/B;MACA;MACA,IAAI,IAAI,CAACd,SAAS,CAAC,CAACsB,IAAI,KAAK,CAAC,EAAE;QAC9B,IAAI,CAACX,GAAG,CAACqB,eAAe,CAAC,CAAC;MAC5B;IACF,CAAC,MAAM,IAAI,CAACb,UAAU,IAAIJ,UAAU,KAAK,IAAI,EAAE;MAC7C;MACA,IAAI,CAACb,QAAQ,CAAC,CAAC,YAAYY,OAAO,kBAAkB,CAAC;IACvD,CAAC,MAAM,IAAI,CAACK,UAAU,IAAIE,aAAa,EAAE;MACvC;MACA;MACA,IAAI,CAACrB,SAAS,CAAC,CAACyB,GAAG,CAAC,GAAGX,OAAO,IAAIE,GAAG,EAAE,CAAC,CAACc,MAAM,CAAC,CAAC;MACjD,IAAI,CAAC9B,SAAS,CAAC,CAAC+B,MAAM,CAAC,GAAGjB,OAAO,IAAIE,GAAG,EAAE,CAAC;IAC7C;IACA;EACF;EAEA,CAACd,QAAQ,EAAG+B,GAAG,EAAE;IACf,IAAI,CAACtB,GAAG,CAACqB,eAAe,CAAC,CAAC;IAC1B,MAAM,IAAIE,KAAK,CAACD,GAAG,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}