{"ast":null,"code":"// file dependencies need their dependencies resolved based on the\n// location where the tarball was found, not the location where they\n// end up getting installed.  directory (ie, symlink) deps also need\n// to be resolved based on their targets, but that's what realpath is\n\nconst {\n  dirname\n} = require('path');\nconst npa = require('npm-package-arg');\nconst fromPath = (node, spec) => spec && spec.type === 'file' ? dirname(spec.fetchSpec) : node.realpath;\nmodule.exports = node => fromPath(node, node.resolved && npa(node.resolved));","map":{"version":3,"names":["dirname","require","npa","fromPath","node","spec","type","fetchSpec","realpath","module","exports","resolved"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/arborist/lib/from-path.js"],"sourcesContent":["// file dependencies need their dependencies resolved based on the\n// location where the tarball was found, not the location where they\n// end up getting installed.  directory (ie, symlink) deps also need\n// to be resolved based on their targets, but that's what realpath is\n\nconst {dirname} = require('path')\nconst npa = require('npm-package-arg')\n\nconst fromPath = (node, spec) =>\n  spec && spec.type === 'file' ? dirname(spec.fetchSpec)\n  : node.realpath\n\nmodule.exports = node => fromPath(node, node.resolved && npa(node.resolved))\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,MAAM;EAACA;AAAO,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AACjC,MAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAEtC,MAAME,QAAQ,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAC1BA,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,GAAGN,OAAO,CAACK,IAAI,CAACE,SAAS,CAAC,GACpDH,IAAI,CAACI,QAAQ;AAEjBC,MAAM,CAACC,OAAO,GAAGN,IAAI,IAAID,QAAQ,CAACC,IAAI,EAAEA,IAAI,CAACO,QAAQ,IAAIT,GAAG,CAACE,IAAI,CAACO,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}