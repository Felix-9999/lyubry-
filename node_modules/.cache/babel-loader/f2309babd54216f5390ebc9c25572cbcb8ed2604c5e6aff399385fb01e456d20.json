{"ast":null,"code":"const {\n  dirname\n} = require('path');\nconst {\n  cmdList\n} = require('./cmd-list');\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\nmodule.exports = npm => {\n  const usesBrowser = npm.config.get('viewer') === 'browser' ? ' (in a browser)' : '';\n  return `npm <command>\n\nUsage:\n\nnpm install        install all the dependencies in your project\nnpm install <foo>  add the <foo> dependency to your project\nnpm test           run this project's tests\nnpm run <foo>      run the script named <foo>\nnpm <command> -h   quick help on <command>\nnpm -l             display usage info for all commands\nnpm help <term>    search for help on <term>${usesBrowser}\nnpm help npm       more involved overview${usesBrowser}\n\nAll commands:\n${allCommands(npm)}\n\nSpecify configs in the ini-formatted file:\n    ${npm.config.get('userconfig')}\nor on the command line via: npm <command> --key=value\n\nMore configuration info: npm help config\nConfiguration fields: npm help 7 config\n\nnpm@${npm.version} ${dirname(dirname(__dirname))}`;\n};\nconst allCommands = npm => {\n  if (npm.config.get('long')) return usages(npm);\n  return '\\n    ' + wrap(cmdList);\n};\nconst wrap = arr => {\n  const out = [''];\n  const line = !process.stdout.columns ? 60 : Math.min(60, Math.max(process.stdout.columns - 16, 24));\n  let l = 0;\n  for (const c of arr.sort((a, b) => a < b ? -1 : 1)) {\n    if (out[l].length + c.length + 2 < line) out[l] += ', ' + c;else {\n      out[l++] += ',';\n      out[l] = c;\n    }\n  }\n  return out.join('\\n    ').substr(2);\n};\nconst usages = npm => {\n  // return a string of <command>: <usage>\n  let maxLen = 0;\n  return cmdList.reduce((set, c) => {\n    set.push([c, npm.commands[c].usage]);\n    maxLen = Math.max(maxLen, c.length);\n    return set;\n  }, []).sort(([a], [b]) => localeCompare(a, b)).map(([c, usage]) => `\\n    ${c}${' '.repeat(maxLen - c.length + 1)}${usage.split('\\n').join('\\n' + ' '.repeat(maxLen + 5))}`).join('\\n');\n};","map":{"version":3,"names":["dirname","require","cmdList","localeCompare","module","exports","npm","usesBrowser","config","get","allCommands","version","__dirname","usages","wrap","arr","out","line","process","stdout","columns","Math","min","max","l","c","sort","a","b","length","join","substr","maxLen","reduce","set","push","commands","usage","map","repeat","split"],"sources":["C:/Users/Felo/node_modules/npm/lib/utils/npm-usage.js"],"sourcesContent":["const { dirname } = require('path')\nconst { cmdList } = require('./cmd-list')\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\n\nmodule.exports = (npm) => {\n  const usesBrowser = npm.config.get('viewer') === 'browser'\n    ? ' (in a browser)' : ''\n  return `npm <command>\n\nUsage:\n\nnpm install        install all the dependencies in your project\nnpm install <foo>  add the <foo> dependency to your project\nnpm test           run this project's tests\nnpm run <foo>      run the script named <foo>\nnpm <command> -h   quick help on <command>\nnpm -l             display usage info for all commands\nnpm help <term>    search for help on <term>${usesBrowser}\nnpm help npm       more involved overview${usesBrowser}\n\nAll commands:\n${allCommands(npm)}\n\nSpecify configs in the ini-formatted file:\n    ${npm.config.get('userconfig')}\nor on the command line via: npm <command> --key=value\n\nMore configuration info: npm help config\nConfiguration fields: npm help 7 config\n\nnpm@${npm.version} ${dirname(dirname(__dirname))}`\n}\n\nconst allCommands = (npm) => {\n  if (npm.config.get('long'))\n    return usages(npm)\n  return ('\\n    ' + wrap(cmdList))\n}\n\nconst wrap = (arr) => {\n  const out = ['']\n\n  const line = !process.stdout.columns ? 60\n    : Math.min(60, Math.max(process.stdout.columns - 16, 24))\n\n  let l = 0\n  for (const c of arr.sort((a, b) => a < b ? -1 : 1)) {\n    if (out[l].length + c.length + 2 < line)\n      out[l] += ', ' + c\n    else {\n      out[l++] += ','\n      out[l] = c\n    }\n  }\n  return out.join('\\n    ').substr(2)\n}\n\nconst usages = (npm) => {\n  // return a string of <command>: <usage>\n  let maxLen = 0\n  return cmdList.reduce((set, c) => {\n    set.push([c, npm.commands[c].usage])\n    maxLen = Math.max(maxLen, c.length)\n    return set\n  }, [])\n    .sort(([a], [b]) => localeCompare(a, b))\n    .map(([c, usage]) => `\\n    ${c}${' '.repeat(maxLen - c.length + 1)}${\n      (usage.split('\\n').join('\\n' + ' '.repeat(maxLen + 5)))}`)\n    .join('\\n')\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}