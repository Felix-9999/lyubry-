{"ast":null,"code":"const getBinFromManifest = mani => {\n  // if we have a bin matching (unscoped portion of) packagename, use that\n  // otherwise if there's 1 bin or all bin value is the same (alias), use\n  // that, otherwise fail\n  const bin = mani.bin || {};\n  if (new Set(Object.values(bin)).size === 1) return Object.keys(bin)[0];\n\n  // XXX probably a util to parse this better?\n  const name = mani.name.replace(/^@[^/]+\\//, '');\n  if (bin[name]) return name;\n\n  // XXX need better error message\n  throw Object.assign(new Error('could not determine executable to run'), {\n    pkgid: mani._id\n  });\n};\nmodule.exports = getBinFromManifest;","map":{"version":3,"names":["getBinFromManifest","mani","bin","Set","Object","values","size","keys","name","replace","assign","Error","pkgid","_id","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/libnpmexec/lib/get-bin-from-manifest.js"],"sourcesContent":["const getBinFromManifest = (mani) => {\n  // if we have a bin matching (unscoped portion of) packagename, use that\n  // otherwise if there's 1 bin or all bin value is the same (alias), use\n  // that, otherwise fail\n  const bin = mani.bin || {}\n  if (new Set(Object.values(bin)).size === 1)\n    return Object.keys(bin)[0]\n\n  // XXX probably a util to parse this better?\n  const name = mani.name.replace(/^@[^/]+\\//, '')\n  if (bin[name])\n    return name\n\n  // XXX need better error message\n  throw Object.assign(new Error('could not determine executable to run'), {\n    pkgid: mani._id,\n  })\n}\n\nmodule.exports = getBinFromManifest\n"],"mappings":"AAAA,MAAMA,kBAAkB,GAAIC,IAAI,IAAK;EACnC;EACA;EACA;EACA,MAAMC,GAAG,GAAGD,IAAI,CAACC,GAAG,IAAI,CAAC,CAAC;EAC1B,IAAI,IAAIC,GAAG,CAACC,MAAM,CAACC,MAAM,CAACH,GAAG,CAAC,CAAC,CAACI,IAAI,KAAK,CAAC,EACxC,OAAOF,MAAM,CAACG,IAAI,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC;;EAE5B;EACA,MAAMM,IAAI,GAAGP,IAAI,CAACO,IAAI,CAACC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;EAC/C,IAAIP,GAAG,CAACM,IAAI,CAAC,EACX,OAAOA,IAAI;;EAEb;EACA,MAAMJ,MAAM,CAACM,MAAM,CAAC,IAAIC,KAAK,CAAC,uCAAuC,CAAC,EAAE;IACtEC,KAAK,EAAEX,IAAI,CAACY;EACd,CAAC,CAAC;AACJ,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGf,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}