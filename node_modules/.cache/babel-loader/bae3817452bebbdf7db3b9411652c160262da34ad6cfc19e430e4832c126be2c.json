{"ast":null,"code":"const EOL = '\\n';\nconst colorizeDiff = require('@npmcli/disparity-colors');\nconst jsDiff = require('diff');\nconst shouldPrintPatch = require('./should-print-patch.js');\nconst formatDiff = ({\n  files,\n  opts = {},\n  refs,\n  versions\n}) => {\n  let res = '';\n  const srcPrefix = opts.diffNoPrefix ? '' : opts.diffSrcPrefix || 'a/';\n  const dstPrefix = opts.diffNoPrefix ? '' : opts.diffDstPrefix || 'b/';\n  for (const filename of files.values()) {\n    const names = {\n      a: `${srcPrefix}${filename}`,\n      b: `${dstPrefix}${filename}`\n    };\n    let fileMode = '';\n    const filenames = {\n      a: refs.get(`a/${filename}`),\n      b: refs.get(`b/${filename}`)\n    };\n    const contents = {\n      a: filenames.a && filenames.a.content,\n      b: filenames.b && filenames.b.content\n    };\n    const modes = {\n      a: filenames.a && filenames.a.mode,\n      b: filenames.b && filenames.b.mode\n    };\n    if (contents.a === contents.b && modes.a === modes.b) continue;\n    if (opts.diffNameOnly) {\n      res += `${filename}${EOL}`;\n      continue;\n    }\n    let patch = '';\n    let headerLength = 0;\n    const header = str => {\n      headerLength++;\n      patch += `${str}${EOL}`;\n    };\n\n    // manually build a git diff-compatible header\n    header(`diff --git ${names.a} ${names.b}`);\n    if (modes.a === modes.b) fileMode = filenames.a.mode;else {\n      if (modes.a && !modes.b) header(`deleted file mode ${modes.a}`);else if (!modes.a && modes.b) header(`new file mode ${modes.b}`);else {\n        header(`old mode ${modes.a}`);\n        header(`new mode ${modes.b}`);\n      }\n    }\n    header(`index ${opts.tagVersionPrefix || 'v'}${versions.a}..${opts.tagVersionPrefix || 'v'}${versions.b} ${fileMode}`);\n    if (shouldPrintPatch(filename)) {\n      patch += jsDiff.createTwoFilesPatch(names.a, names.b, contents.a || '', contents.b || '', '', '', {\n        context: opts.diffUnified === 0 ? 0 : opts.diffUnified || 3,\n        ignoreWhitespace: opts.diffIgnoreAllSpace\n      }).replace('===================================================================\\n', '').replace(/\\t\\n/g, '\\n'); // strip trailing tabs\n      headerLength += 2;\n    } else {\n      header(`--- ${names.a}`);\n      header(`+++ ${names.b}`);\n    }\n    res += opts.color ? colorizeDiff(patch, {\n      headerLength\n    }) : patch;\n  }\n  return res.trim();\n};\nmodule.exports = formatDiff;","map":{"version":3,"names":["EOL","colorizeDiff","require","jsDiff","shouldPrintPatch","formatDiff","files","opts","refs","versions","res","srcPrefix","diffNoPrefix","diffSrcPrefix","dstPrefix","diffDstPrefix","filename","values","names","a","b","fileMode","filenames","get","contents","content","modes","mode","diffNameOnly","patch","headerLength","header","str","tagVersionPrefix","createTwoFilesPatch","context","diffUnified","ignoreWhitespace","diffIgnoreAllSpace","replace","color","trim","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/libnpmdiff/lib/format-diff.js"],"sourcesContent":["const EOL = '\\n'\n\nconst colorizeDiff = require('@npmcli/disparity-colors')\nconst jsDiff = require('diff')\n\nconst shouldPrintPatch = require('./should-print-patch.js')\n\nconst formatDiff = ({ files, opts = {}, refs, versions }) => {\n  let res = ''\n  const srcPrefix = opts.diffNoPrefix ? '' : opts.diffSrcPrefix || 'a/'\n  const dstPrefix = opts.diffNoPrefix ? '' : opts.diffDstPrefix || 'b/'\n\n  for (const filename of files.values()) {\n    const names = {\n      a: `${srcPrefix}${filename}`,\n      b: `${dstPrefix}${filename}`,\n    }\n\n    let fileMode = ''\n    const filenames = {\n      a: refs.get(`a/${filename}`),\n      b: refs.get(`b/${filename}`),\n    }\n    const contents = {\n      a: filenames.a && filenames.a.content,\n      b: filenames.b && filenames.b.content,\n    }\n    const modes = {\n      a: filenames.a && filenames.a.mode,\n      b: filenames.b && filenames.b.mode,\n    }\n\n    if (contents.a === contents.b && modes.a === modes.b)\n      continue\n\n    if (opts.diffNameOnly) {\n      res += `${filename}${EOL}`\n      continue\n    }\n\n    let patch = ''\n    let headerLength = 0\n    const header = str => {\n      headerLength++\n      patch += `${str}${EOL}`\n    }\n\n    // manually build a git diff-compatible header\n    header(`diff --git ${names.a} ${names.b}`)\n    if (modes.a === modes.b)\n      fileMode = filenames.a.mode\n    else {\n      if (modes.a && !modes.b)\n        header(`deleted file mode ${modes.a}`)\n      else if (!modes.a && modes.b)\n        header(`new file mode ${modes.b}`)\n      else {\n        header(`old mode ${modes.a}`)\n        header(`new mode ${modes.b}`)\n      }\n    }\n    header(`index ${opts.tagVersionPrefix || 'v'}${versions.a}..${opts.tagVersionPrefix || 'v'}${versions.b} ${fileMode}`)\n\n    if (shouldPrintPatch(filename)) {\n      patch += jsDiff.createTwoFilesPatch(\n        names.a,\n        names.b,\n        contents.a || '',\n        contents.b || '',\n        '',\n        '',\n        {\n          context: opts.diffUnified === 0 ? 0 : opts.diffUnified || 3,\n          ignoreWhitespace: opts.diffIgnoreAllSpace,\n        }\n      ).replace(\n        '===================================================================\\n',\n        ''\n      ).replace(/\\t\\n/g, '\\n') // strip trailing tabs\n      headerLength += 2\n    } else {\n      header(`--- ${names.a}`)\n      header(`+++ ${names.b}`)\n    }\n\n    res += (opts.color\n      ? colorizeDiff(patch, { headerLength })\n      : patch)\n  }\n\n  return res.trim()\n}\n\nmodule.exports = formatDiff\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}