{"ast":null,"code":"const os = require('os');\nconst path = require('path');\nconst pacote = require('pacote');\nconst table = require('text-table');\nconst color = require('chalk');\nconst styles = require('ansistyles');\nconst npa = require('npm-package-arg');\nconst pickManifest = require('npm-pick-manifest');\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\nconst Arborist = require('@npmcli/arborist');\nconst ansiTrim = require('./utils/ansi-trim.js');\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js');\nclass Outdated extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Check for outdated packages';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'outdated';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['[[<@scope>/]<pkg> ...]'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['all', 'json', 'long', 'parseable', 'global', 'workspace'];\n  }\n  exec(args, cb) {\n    this.outdated(args).then(() => cb()).catch(cb);\n  }\n  async outdated(args) {\n    const global = path.resolve(this.npm.globalDir, '..');\n    const where = this.npm.config.get('global') ? global : this.npm.prefix;\n    const arb = new Arborist({\n      ...this.npm.flatOptions,\n      path: where\n    });\n    this.edges = new Set();\n    this.list = [];\n    this.tree = await arb.loadActual();\n    if (this.workspaceNames && this.workspaceNames.length) {\n      this.filterSet = arb.workspaceDependencySet(this.tree, this.workspaceNames);\n    }\n    if (args.length !== 0) {\n      // specific deps\n      for (let i = 0; i < args.length; i++) {\n        const nodes = this.tree.inventory.query('name', args[i]);\n        this.getEdges(nodes, 'edgesIn');\n      }\n    } else {\n      if (this.npm.config.get('all')) {\n        // all deps in tree\n        const nodes = this.tree.inventory.values();\n        this.getEdges(nodes, 'edgesOut');\n      }\n      // top-level deps\n      this.getEdges();\n    }\n    await Promise.all(Array.from(this.edges).map(edge => {\n      return this.getOutdatedInfo(edge);\n    }));\n\n    // sorts list alphabetically\n    const outdated = this.list.sort((a, b) => localeCompare(a.name, b.name));\n    if (outdated.length > 0) process.exitCode = 1;\n\n    // return if no outdated packages\n    if (outdated.length === 0 && !this.npm.config.get('json')) return;\n\n    // display results\n    if (this.npm.config.get('json')) this.npm.output(this.makeJSON(outdated));else if (this.npm.config.get('parseable')) this.npm.output(this.makeParseable(outdated));else {\n      const outList = outdated.map(x => this.makePretty(x));\n      const outHead = ['Package', 'Current', 'Wanted', 'Latest', 'Location', 'Depended by'];\n      if (this.npm.config.get('long')) outHead.push('Package Type', 'Homepage');\n      const outTable = [outHead].concat(outList);\n      if (this.npm.color) outTable[0] = outTable[0].map(heading => styles.underline(heading));\n      const tableOpts = {\n        align: ['l', 'r', 'r', 'r', 'l'],\n        stringLength: s => ansiTrim(s).length\n      };\n      this.npm.output(table(outTable, tableOpts));\n    }\n  }\n  getEdges(nodes, type) {\n    // when no nodes are provided then it should only read direct deps\n    // from the root node and its workspaces direct dependencies\n    if (!nodes) {\n      this.getEdgesOut(this.tree);\n      this.getWorkspacesEdges();\n      return;\n    }\n    for (const node of nodes) {\n      type === 'edgesOut' ? this.getEdgesOut(node) : this.getEdgesIn(node);\n    }\n  }\n  getEdgesIn(node) {\n    for (const edge of node.edgesIn) this.trackEdge(edge);\n  }\n  getEdgesOut(node) {\n    // TODO: normalize usage of edges and avoid looping through nodes here\n    if (this.npm.config.get('global')) {\n      for (const child of node.children.values()) this.trackEdge(child);\n    } else {\n      for (const edge of node.edgesOut.values()) this.trackEdge(edge);\n    }\n  }\n  trackEdge(edge) {\n    const filteredOut = edge.from && this.filterSet && this.filterSet.size > 0 && !this.filterSet.has(edge.from.target);\n    if (filteredOut) return;\n    this.edges.add(edge);\n  }\n  getWorkspacesEdges(node) {\n    if (this.npm.config.get('global')) return;\n    for (const edge of this.tree.edgesOut.values()) {\n      const workspace = edge && edge.to && edge.to.target && edge.to.target.isWorkspace;\n      if (workspace) this.getEdgesOut(edge.to.target);\n    }\n  }\n  async getPackument(spec) {\n    const packument = await pacote.packument(spec, {\n      ...this.npm.flatOptions,\n      fullMetadata: this.npm.config.get('long'),\n      preferOnline: true\n    });\n    return packument;\n  }\n  async getOutdatedInfo(edge) {\n    const spec = npa(edge.name);\n    const node = edge.to || edge;\n    const {\n      path,\n      location\n    } = node;\n    const {\n      version: current\n    } = node.package || {};\n    const type = edge.optional ? 'optionalDependencies' : edge.peer ? 'peerDependencies' : edge.dev ? 'devDependencies' : 'dependencies';\n    for (const omitType of this.npm.config.get('omit')) {\n      if (node[omitType]) return;\n    }\n\n    // deps different from prod not currently\n    // on disk are not included in the output\n    if (edge.error === 'MISSING' && type !== 'dependencies') return;\n    try {\n      const packument = await this.getPackument(spec);\n      const expected = edge.spec;\n      // if it's not a range, version, or tag, skip it\n      try {\n        if (!npa(`${edge.name}@${edge.spec}`).registry) return null;\n      } catch (err) {\n        return null;\n      }\n      const wanted = pickManifest(packument, expected, this.npm.flatOptions);\n      const latest = pickManifest(packument, '*', this.npm.flatOptions);\n      if (!current || current !== wanted.version || wanted.version !== latest.version) {\n        const dependent = edge.from ? this.maybeWorkspaceName(edge.from) : 'global';\n        this.list.push({\n          name: edge.name,\n          path,\n          type,\n          current,\n          location,\n          wanted: wanted.version,\n          latest: latest.version,\n          dependent,\n          homepage: packument.homepage\n        });\n      }\n    } catch (err) {\n      // silently catch and ignore ETARGET, E403 &\n      // E404 errors, deps are just skipped\n      if (!(err.code === 'ETARGET' || err.code === 'E403' || err.code === 'E404')) throw err;\n    }\n  }\n  maybeWorkspaceName(node) {\n    if (!node.isWorkspace) return node.name;\n    const humanOutput = !this.npm.config.get('json') && !this.npm.config.get('parseable');\n    const workspaceName = humanOutput ? node.pkgid : node.name;\n    return this.npm.color && humanOutput ? color.green(workspaceName) : workspaceName;\n  }\n\n  // formatting functions\n  makePretty(dep) {\n    const {\n      current = 'MISSING',\n      location = '-',\n      homepage = '',\n      name,\n      wanted,\n      latest,\n      type,\n      dependent\n    } = dep;\n    const columns = [name, current, wanted, latest, location, dependent];\n    if (this.npm.config.get('long')) {\n      columns[6] = type;\n      columns[7] = homepage;\n    }\n    if (this.npm.color) {\n      columns[0] = color[current === wanted ? 'yellow' : 'red'](columns[0]); // current\n      columns[2] = color.green(columns[2]); // wanted\n      columns[3] = color.magenta(columns[3]); // latest\n    }\n    return columns;\n  }\n\n  // --parseable creates output like this:\n  // <fullpath>:<name@wanted>:<name@installed>:<name@latest>:<dependedby>\n  makeParseable(list) {\n    return list.map(dep => {\n      const {\n        name,\n        current,\n        wanted,\n        latest,\n        path,\n        dependent,\n        type,\n        homepage\n      } = dep;\n      const out = [path, name + '@' + wanted, current ? name + '@' + current : 'MISSING', name + '@' + latest, dependent];\n      if (this.npm.config.get('long')) out.push(type, homepage);\n      return out.join(':');\n    }).join(os.EOL);\n  }\n  makeJSON(list) {\n    const out = {};\n    list.forEach(dep => {\n      const {\n        name,\n        current,\n        wanted,\n        latest,\n        path,\n        type,\n        dependent,\n        homepage\n      } = dep;\n      out[name] = {\n        current,\n        wanted,\n        latest,\n        dependent,\n        location: path\n      };\n      if (this.npm.config.get('long')) {\n        out[name].type = type;\n        out[name].homepage = homepage;\n      }\n    });\n    return JSON.stringify(out, null, 2);\n  }\n}\nmodule.exports = Outdated;","map":{"version":3,"names":["os","require","path","pacote","table","color","styles","npa","pickManifest","localeCompare","Arborist","ansiTrim","ArboristWorkspaceCmd","Outdated","description","name","usage","params","exec","args","cb","outdated","then","catch","global","resolve","npm","globalDir","where","config","get","prefix","arb","flatOptions","edges","Set","list","tree","loadActual","workspaceNames","length","filterSet","workspaceDependencySet","i","nodes","inventory","query","getEdges","values","Promise","all","Array","from","map","edge","getOutdatedInfo","sort","a","b","process","exitCode","output","makeJSON","makeParseable","outList","x","makePretty","outHead","push","outTable","concat","heading","underline","tableOpts","align","stringLength","s","type","getEdgesOut","getWorkspacesEdges","node","getEdgesIn","edgesIn","trackEdge","child","children","edgesOut","filteredOut","size","has","target","add","workspace","to","isWorkspace","getPackument","spec","packument","fullMetadata","preferOnline","location","version","current","package","optional","peer","dev","omitType","error","expected","registry","err","wanted","latest","dependent","maybeWorkspaceName","homepage","code","humanOutput","workspaceName","pkgid","green","dep","columns","magenta","out","join","EOL","forEach","JSON","stringify","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/outdated.js"],"sourcesContent":["const os = require('os')\nconst path = require('path')\nconst pacote = require('pacote')\nconst table = require('text-table')\nconst color = require('chalk')\nconst styles = require('ansistyles')\nconst npa = require('npm-package-arg')\nconst pickManifest = require('npm-pick-manifest')\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\n\nconst Arborist = require('@npmcli/arborist')\n\nconst ansiTrim = require('./utils/ansi-trim.js')\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js')\n\nclass Outdated extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Check for outdated packages'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'outdated'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['[[<@scope>/]<pkg> ...]']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'all',\n      'json',\n      'long',\n      'parseable',\n      'global',\n      'workspace',\n    ]\n  }\n\n  exec (args, cb) {\n    this.outdated(args).then(() => cb()).catch(cb)\n  }\n\n  async outdated (args) {\n    const global = path.resolve(this.npm.globalDir, '..')\n    const where = this.npm.config.get('global')\n      ? global\n      : this.npm.prefix\n\n    const arb = new Arborist({\n      ...this.npm.flatOptions,\n      path: where,\n    })\n\n    this.edges = new Set()\n    this.list = []\n    this.tree = await arb.loadActual()\n\n    if (this.workspaceNames && this.workspaceNames.length) {\n      this.filterSet =\n        arb.workspaceDependencySet(this.tree, this.workspaceNames)\n    }\n\n    if (args.length !== 0) {\n      // specific deps\n      for (let i = 0; i < args.length; i++) {\n        const nodes = this.tree.inventory.query('name', args[i])\n        this.getEdges(nodes, 'edgesIn')\n      }\n    } else {\n      if (this.npm.config.get('all')) {\n        // all deps in tree\n        const nodes = this.tree.inventory.values()\n        this.getEdges(nodes, 'edgesOut')\n      }\n      // top-level deps\n      this.getEdges()\n    }\n\n    await Promise.all(Array.from(this.edges).map((edge) => {\n      return this.getOutdatedInfo(edge)\n    }))\n\n    // sorts list alphabetically\n    const outdated = this.list.sort((a, b) => localeCompare(a.name, b.name))\n\n    if (outdated.length > 0)\n      process.exitCode = 1\n\n    // return if no outdated packages\n    if (outdated.length === 0 && !this.npm.config.get('json'))\n      return\n\n    // display results\n    if (this.npm.config.get('json'))\n      this.npm.output(this.makeJSON(outdated))\n    else if (this.npm.config.get('parseable'))\n      this.npm.output(this.makeParseable(outdated))\n    else {\n      const outList = outdated.map(x => this.makePretty(x))\n      const outHead = ['Package',\n        'Current',\n        'Wanted',\n        'Latest',\n        'Location',\n        'Depended by',\n      ]\n\n      if (this.npm.config.get('long'))\n        outHead.push('Package Type', 'Homepage')\n      const outTable = [outHead].concat(outList)\n\n      if (this.npm.color)\n        outTable[0] = outTable[0].map(heading => styles.underline(heading))\n\n      const tableOpts = {\n        align: ['l', 'r', 'r', 'r', 'l'],\n        stringLength: s => ansiTrim(s).length,\n      }\n      this.npm.output(table(outTable, tableOpts))\n    }\n  }\n\n  getEdges (nodes, type) {\n    // when no nodes are provided then it should only read direct deps\n    // from the root node and its workspaces direct dependencies\n    if (!nodes) {\n      this.getEdgesOut(this.tree)\n      this.getWorkspacesEdges()\n      return\n    }\n\n    for (const node of nodes) {\n      type === 'edgesOut'\n        ? this.getEdgesOut(node)\n        : this.getEdgesIn(node)\n    }\n  }\n\n  getEdgesIn (node) {\n    for (const edge of node.edgesIn)\n      this.trackEdge(edge)\n  }\n\n  getEdgesOut (node) {\n    // TODO: normalize usage of edges and avoid looping through nodes here\n    if (this.npm.config.get('global')) {\n      for (const child of node.children.values())\n        this.trackEdge(child)\n    } else {\n      for (const edge of node.edgesOut.values())\n        this.trackEdge(edge)\n    }\n  }\n\n  trackEdge (edge) {\n    const filteredOut =\n      edge.from\n        && this.filterSet\n        && this.filterSet.size > 0\n        && !this.filterSet.has(edge.from.target)\n\n    if (filteredOut)\n      return\n\n    this.edges.add(edge)\n  }\n\n  getWorkspacesEdges (node) {\n    if (this.npm.config.get('global'))\n      return\n\n    for (const edge of this.tree.edgesOut.values()) {\n      const workspace = edge\n        && edge.to\n        && edge.to.target\n        && edge.to.target.isWorkspace\n\n      if (workspace)\n        this.getEdgesOut(edge.to.target)\n    }\n  }\n\n  async getPackument (spec) {\n    const packument = await pacote.packument(spec, {\n      ...this.npm.flatOptions,\n      fullMetadata: this.npm.config.get('long'),\n      preferOnline: true,\n    })\n    return packument\n  }\n\n  async getOutdatedInfo (edge) {\n    const spec = npa(edge.name)\n    const node = edge.to || edge\n    const { path, location } = node\n    const { version: current } = node.package || {}\n\n    const type = edge.optional ? 'optionalDependencies'\n      : edge.peer ? 'peerDependencies'\n      : edge.dev ? 'devDependencies'\n      : 'dependencies'\n\n    for (const omitType of this.npm.config.get('omit')) {\n      if (node[omitType])\n        return\n    }\n\n    // deps different from prod not currently\n    // on disk are not included in the output\n    if (edge.error === 'MISSING' && type !== 'dependencies')\n      return\n\n    try {\n      const packument = await this.getPackument(spec)\n      const expected = edge.spec\n      // if it's not a range, version, or tag, skip it\n      try {\n        if (!npa(`${edge.name}@${edge.spec}`).registry)\n          return null\n      } catch (err) {\n        return null\n      }\n      const wanted = pickManifest(packument, expected, this.npm.flatOptions)\n      const latest = pickManifest(packument, '*', this.npm.flatOptions)\n\n      if (\n        !current ||\n        current !== wanted.version ||\n        wanted.version !== latest.version\n      ) {\n        const dependent = edge.from ?\n          this.maybeWorkspaceName(edge.from)\n          : 'global'\n\n        this.list.push({\n          name: edge.name,\n          path,\n          type,\n          current,\n          location,\n          wanted: wanted.version,\n          latest: latest.version,\n          dependent,\n          homepage: packument.homepage,\n        })\n      }\n    } catch (err) {\n      // silently catch and ignore ETARGET, E403 &\n      // E404 errors, deps are just skipped\n      if (!(\n        err.code === 'ETARGET' ||\n        err.code === 'E403' ||\n        err.code === 'E404')\n      )\n        throw err\n    }\n  }\n\n  maybeWorkspaceName (node) {\n    if (!node.isWorkspace)\n      return node.name\n\n    const humanOutput =\n      !this.npm.config.get('json') && !this.npm.config.get('parseable')\n\n    const workspaceName =\n      humanOutput\n        ? node.pkgid\n        : node.name\n\n    return this.npm.color && humanOutput\n      ? color.green(workspaceName)\n      : workspaceName\n  }\n\n  // formatting functions\n  makePretty (dep) {\n    const {\n      current = 'MISSING',\n      location = '-',\n      homepage = '',\n      name,\n      wanted,\n      latest,\n      type,\n      dependent,\n    } = dep\n\n    const columns = [name, current, wanted, latest, location, dependent]\n\n    if (this.npm.config.get('long')) {\n      columns[6] = type\n      columns[7] = homepage\n    }\n\n    if (this.npm.color) {\n      columns[0] = color[current === wanted ? 'yellow' : 'red'](columns[0]) // current\n      columns[2] = color.green(columns[2]) // wanted\n      columns[3] = color.magenta(columns[3]) // latest\n    }\n\n    return columns\n  }\n\n  // --parseable creates output like this:\n  // <fullpath>:<name@wanted>:<name@installed>:<name@latest>:<dependedby>\n  makeParseable (list) {\n    return list.map(dep => {\n      const {\n        name,\n        current,\n        wanted,\n        latest,\n        path,\n        dependent,\n        type,\n        homepage,\n      } = dep\n      const out = [\n        path,\n        name + '@' + wanted,\n        current ? (name + '@' + current) : 'MISSING',\n        name + '@' + latest,\n        dependent,\n      ]\n      if (this.npm.config.get('long'))\n        out.push(type, homepage)\n\n      return out.join(':')\n    }).join(os.EOL)\n  }\n\n  makeJSON (list) {\n    const out = {}\n    list.forEach(dep => {\n      const {\n        name,\n        current,\n        wanted,\n        latest,\n        path,\n        type,\n        dependent,\n        homepage,\n      } = dep\n      out[name] = {\n        current,\n        wanted,\n        latest,\n        dependent,\n        location: path,\n      }\n      if (this.npm.config.get('long')) {\n        out[name].type = type\n        out[name].homepage = homepage\n      }\n    })\n    return JSON.stringify(out, null, 2)\n  }\n}\nmodule.exports = Outdated\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}