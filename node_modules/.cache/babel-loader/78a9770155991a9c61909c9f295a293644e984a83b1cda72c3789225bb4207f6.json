{"ast":null,"code":"const path = require('path');\nconst util = require('util');\nconst npa = require('npm-package-arg');\nconst libaccess = require('libnpmaccess');\nconst npmFetch = require('npm-registry-fetch');\nconst libunpub = require('libnpmpublish').unpublish;\nconst readJson = util.promisify(require('read-package-json'));\nconst otplease = require('./utils/otplease.js');\nconst getIdentity = require('./utils/get-identity.js');\nconst BaseCommand = require('./base-command.js');\nclass Unpublish extends BaseCommand {\n  static get description() {\n    return 'Remove a package from the registry';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'unpublish';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['dry-run', 'force', 'workspace', 'workspaces'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['[<@scope>/]<pkg>[@<version>]'];\n  }\n  async completion(args) {\n    const {\n      partialWord,\n      conf\n    } = args;\n    if (conf.argv.remain.length >= 3) return [];\n    const opts = this.npm.flatOptions;\n    const username = await getIdentity(this.npm, {\n      ...opts\n    }).catch(() => null);\n    if (!username) return [];\n    const access = await libaccess.lsPackages(username, opts);\n    // do a bit of filtering at this point, so that we don't need\n    // to fetch versions for more than one thing, but also don't\n    // accidentally unpublish a whole project\n    let pkgs = Object.keys(access || {});\n    if (!partialWord || !pkgs.length) return pkgs;\n    const pp = npa(partialWord).name;\n    pkgs = pkgs.filter(p => !p.indexOf(pp));\n    if (pkgs.length > 1) return pkgs;\n    const json = await npmFetch.json(npa(pkgs[0]).escapedName, opts);\n    const versions = Object.keys(json.versions);\n    if (!versions.length) return pkgs;else return versions.map(v => `${pkgs[0]}@${v}`);\n  }\n  exec(args, cb) {\n    this.unpublish(args).then(() => cb()).catch(cb);\n  }\n  execWorkspaces(args, filters, cb) {\n    this.unpublishWorkspaces(args, filters).then(() => cb()).catch(cb);\n  }\n  async unpublish(args) {\n    if (args.length > 1) throw this.usageError();\n    const spec = args.length && npa(args[0]);\n    const force = this.npm.config.get('force');\n    const loglevel = this.npm.config.get('loglevel');\n    const silent = loglevel === 'silent';\n    const dryRun = this.npm.config.get('dry-run');\n    let pkgName;\n    let pkgVersion;\n    this.npm.log.silly('unpublish', 'args[0]', args[0]);\n    this.npm.log.silly('unpublish', 'spec', spec);\n    if ((!spec || !spec.rawSpec) && !force) {\n      throw this.usageError('Refusing to delete entire project.\\n' + 'Run with --force to do this.');\n    }\n    const opts = this.npm.flatOptions;\n    if (!spec || path.resolve(spec.name) === this.npm.localPrefix) {\n      // if there's a package.json in the current folder, then\n      // read the package name and version out of that.\n      const pkgJson = path.join(this.npm.localPrefix, 'package.json');\n      let manifest;\n      try {\n        manifest = await readJson(pkgJson);\n      } catch (err) {\n        if (err && err.code !== 'ENOENT' && err.code !== 'ENOTDIR') throw err;else throw this.usageError();\n      }\n      this.npm.log.verbose('unpublish', manifest);\n      const {\n        name,\n        version,\n        publishConfig\n      } = manifest;\n      const pkgJsonSpec = npa.resolve(name, version);\n      const optsWithPub = {\n        ...opts,\n        publishConfig\n      };\n      if (!dryRun) await otplease(opts, opts => libunpub(pkgJsonSpec, optsWithPub));\n      pkgName = name;\n      pkgVersion = version ? `@${version}` : '';\n    } else {\n      if (!dryRun) await otplease(opts, opts => libunpub(spec, opts));\n      pkgName = spec.name;\n      pkgVersion = spec.type === 'version' ? `@${spec.rawSpec}` : '';\n    }\n    if (!silent) this.npm.output(`- ${pkgName}${pkgVersion}`);\n  }\n  async unpublishWorkspaces(args, filters) {\n    await this.setWorkspaces(filters);\n    const force = this.npm.config.get('force');\n    if (!force) {\n      throw this.usageError('Refusing to delete entire project(s).\\n' + 'Run with --force to do this.');\n    }\n    for (const name of this.workspaceNames) await this.unpublish([name]);\n  }\n}\nmodule.exports = Unpublish;","map":{"version":3,"names":["path","require","util","npa","libaccess","npmFetch","libunpub","unpublish","readJson","promisify","otplease","getIdentity","BaseCommand","Unpublish","description","name","params","usage","completion","args","partialWord","conf","argv","remain","length","opts","npm","flatOptions","username","catch","access","lsPackages","pkgs","Object","keys","pp","filter","p","indexOf","json","escapedName","versions","map","v","exec","cb","then","execWorkspaces","filters","unpublishWorkspaces","usageError","spec","force","config","get","loglevel","silent","dryRun","pkgName","pkgVersion","log","silly","rawSpec","resolve","localPrefix","pkgJson","join","manifest","err","code","verbose","version","publishConfig","pkgJsonSpec","optsWithPub","type","output","setWorkspaces","workspaceNames","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/unpublish.js"],"sourcesContent":["const path = require('path')\nconst util = require('util')\nconst npa = require('npm-package-arg')\nconst libaccess = require('libnpmaccess')\nconst npmFetch = require('npm-registry-fetch')\nconst libunpub = require('libnpmpublish').unpublish\nconst readJson = util.promisify(require('read-package-json'))\n\nconst otplease = require('./utils/otplease.js')\nconst getIdentity = require('./utils/get-identity.js')\n\nconst BaseCommand = require('./base-command.js')\nclass Unpublish extends BaseCommand {\n  static get description () {\n    return 'Remove a package from the registry'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'unpublish'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['dry-run', 'force', 'workspace', 'workspaces']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['[<@scope>/]<pkg>[@<version>]']\n  }\n\n  async completion (args) {\n    const { partialWord, conf } = args\n\n    if (conf.argv.remain.length >= 3)\n      return []\n\n    const opts = this.npm.flatOptions\n    const username = await getIdentity(this.npm, { ...opts }).catch(() => null)\n    if (!username)\n      return []\n\n    const access = await libaccess.lsPackages(username, opts)\n    // do a bit of filtering at this point, so that we don't need\n    // to fetch versions for more than one thing, but also don't\n    // accidentally unpublish a whole project\n    let pkgs = Object.keys(access || {})\n    if (!partialWord || !pkgs.length)\n      return pkgs\n\n    const pp = npa(partialWord).name\n    pkgs = pkgs.filter(p => !p.indexOf(pp))\n    if (pkgs.length > 1)\n      return pkgs\n\n    const json = await npmFetch.json(npa(pkgs[0]).escapedName, opts)\n    const versions = Object.keys(json.versions)\n    if (!versions.length)\n      return pkgs\n    else\n      return versions.map(v => `${pkgs[0]}@${v}`)\n  }\n\n  exec (args, cb) {\n    this.unpublish(args).then(() => cb()).catch(cb)\n  }\n\n  execWorkspaces (args, filters, cb) {\n    this.unpublishWorkspaces(args, filters).then(() => cb()).catch(cb)\n  }\n\n  async unpublish (args) {\n    if (args.length > 1)\n      throw this.usageError()\n\n    const spec = args.length && npa(args[0])\n    const force = this.npm.config.get('force')\n    const loglevel = this.npm.config.get('loglevel')\n    const silent = loglevel === 'silent'\n    const dryRun = this.npm.config.get('dry-run')\n    let pkgName\n    let pkgVersion\n\n    this.npm.log.silly('unpublish', 'args[0]', args[0])\n    this.npm.log.silly('unpublish', 'spec', spec)\n\n    if ((!spec || !spec.rawSpec) && !force) {\n      throw this.usageError(\n        'Refusing to delete entire project.\\n' +\n        'Run with --force to do this.'\n      )\n    }\n\n    const opts = this.npm.flatOptions\n    if (!spec || path.resolve(spec.name) === this.npm.localPrefix) {\n      // if there's a package.json in the current folder, then\n      // read the package name and version out of that.\n      const pkgJson = path.join(this.npm.localPrefix, 'package.json')\n      let manifest\n      try {\n        manifest = await readJson(pkgJson)\n      } catch (err) {\n        if (err && err.code !== 'ENOENT' && err.code !== 'ENOTDIR')\n          throw err\n        else\n          throw this.usageError()\n      }\n\n      this.npm.log.verbose('unpublish', manifest)\n\n      const { name, version, publishConfig } = manifest\n      const pkgJsonSpec = npa.resolve(name, version)\n      const optsWithPub = { ...opts, publishConfig }\n      if (!dryRun)\n        await otplease(opts, opts => libunpub(pkgJsonSpec, optsWithPub))\n      pkgName = name\n      pkgVersion = version ? `@${version}` : ''\n    } else {\n      if (!dryRun)\n        await otplease(opts, opts => libunpub(spec, opts))\n      pkgName = spec.name\n      pkgVersion = spec.type === 'version' ? `@${spec.rawSpec}` : ''\n    }\n\n    if (!silent)\n      this.npm.output(`- ${pkgName}${pkgVersion}`)\n  }\n\n  async unpublishWorkspaces (args, filters) {\n    await this.setWorkspaces(filters)\n\n    const force = this.npm.config.get('force')\n    if (!force) {\n      throw this.usageError(\n        'Refusing to delete entire project(s).\\n' +\n        'Run with --force to do this.'\n      )\n    }\n\n    for (const name of this.workspaceNames)\n      await this.unpublish([name])\n  }\n}\nmodule.exports = Unpublish\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}