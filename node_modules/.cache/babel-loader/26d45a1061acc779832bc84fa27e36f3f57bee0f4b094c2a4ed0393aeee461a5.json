{"ast":null,"code":"const git = require('@npmcli/git');\nmodule.exports = (version, opts) => {\n  const {\n    commitHooks,\n    allowSameVersion,\n    signGitCommit,\n    message\n  } = opts;\n  const args = ['commit'];\n  if (commitHooks === false) {\n    args.push('-n');\n  }\n  if (allowSameVersion) {\n    args.push('--allow-empty');\n  }\n  if (signGitCommit) {\n    args.push('-S');\n  }\n  args.push('-m');\n  return git.spawn([...args, message.replace(/%s/g, version)], opts);\n};","map":{"version":3,"names":["git","require","module","exports","version","opts","commitHooks","allowSameVersion","signGitCommit","message","args","push","spawn","replace"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/libnpmversion/lib/commit.js"],"sourcesContent":["const git = require('@npmcli/git')\n\nmodule.exports = (version, opts) => {\n  const { commitHooks, allowSameVersion, signGitCommit, message } = opts\n  const args = ['commit']\n  if (commitHooks === false) {\n    args.push('-n')\n  }\n  if (allowSameVersion) {\n    args.push('--allow-empty')\n  }\n  if (signGitCommit) {\n    args.push('-S')\n  }\n  args.push('-m')\n  return git.spawn([...args, message.replace(/%s/g, version)], opts)\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,aAAa,CAAC;AAElCC,MAAM,CAACC,OAAO,GAAG,CAACC,OAAO,EAAEC,IAAI,KAAK;EAClC,MAAM;IAAEC,WAAW;IAAEC,gBAAgB;IAAEC,aAAa;IAAEC;EAAQ,CAAC,GAAGJ,IAAI;EACtE,MAAMK,IAAI,GAAG,CAAC,QAAQ,CAAC;EACvB,IAAIJ,WAAW,KAAK,KAAK,EAAE;IACzBI,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;EACjB;EACA,IAAIJ,gBAAgB,EAAE;IACpBG,IAAI,CAACC,IAAI,CAAC,eAAe,CAAC;EAC5B;EACA,IAAIH,aAAa,EAAE;IACjBE,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;EACjB;EACAD,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;EACf,OAAOX,GAAG,CAACY,KAAK,CAAC,CAAC,GAAGF,IAAI,EAAED,OAAO,CAACI,OAAO,CAAC,KAAK,EAAET,OAAO,CAAC,CAAC,EAAEC,IAAI,CAAC;AACpE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}