{"ast":null,"code":"// TODO: set the scope config from package.json or explicit cli config\nconst walkUp = require('walk-up-path');\nconst ini = require('ini');\nconst nopt = require('nopt');\nconst mkdirp = require('mkdirp-infer-owner');\n\n/* istanbul ignore next */\nconst myUid = process.getuid && process.getuid();\n/* istanbul ignore next */\nconst myGid = process.getgid && process.getgid();\nconst {\n  resolve,\n  dirname,\n  join\n} = require('path');\nconst {\n  homedir\n} = require('os');\nconst {\n  promisify\n} = require('util');\nconst fs = require('fs');\nconst readFile = promisify(fs.readFile);\nconst writeFile = promisify(fs.writeFile);\nconst chmod = promisify(fs.chmod);\nconst chown = promisify(fs.chown);\nconst unlink = promisify(fs.unlink);\nconst stat = promisify(fs.stat);\nconst hasOwnProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key);\n\n// define a custom getter, but turn into a normal prop\n// if we set it.  otherwise it can't be set on child objects\nconst settableGetter = (obj, key, get) => {\n  Object.defineProperty(obj, key, {\n    get,\n    set(value) {\n      Object.defineProperty(obj, key, {\n        value,\n        configurable: true,\n        writable: true,\n        enumerable: true\n      });\n    },\n    configurable: true,\n    enumerable: true\n  });\n};\nconst typeDefs = require('./type-defs.js');\nconst nerfDart = require('./nerf-dart.js');\nconst envReplace = require('./env-replace.js');\nconst parseField = require('./parse-field.js');\nconst typeDescription = require('./type-description.js');\nconst setEnvs = require('./set-envs.js');\n\n// types that can be saved back to\nconst confFileTypes = new Set(['global', 'user', 'project']);\nconst confTypes = new Set(['default', 'builtin', ...confFileTypes, 'env', 'cli']);\nconst _loaded = Symbol('loaded');\nconst _get = Symbol('get');\nconst _find = Symbol('find');\nconst _loadObject = Symbol('loadObject');\nconst _loadFile = Symbol('loadFile');\nconst _checkDeprecated = Symbol('checkDeprecated');\nconst _flatten = Symbol('flatten');\nconst _flatOptions = Symbol('flatOptions');\nclass Config {\n  static get typeDefs() {\n    return typeDefs;\n  }\n  constructor({\n    definitions,\n    shorthands,\n    flatten,\n    npmPath,\n    // options just to override in tests, mostly\n    env = process.env,\n    argv = process.argv,\n    log = require('./proc-log.js'),\n    platform = process.platform,\n    execPath = process.execPath,\n    cwd = process.cwd()\n  }) {\n    // turn the definitions into nopt's weirdo syntax\n    this.definitions = definitions;\n    const types = {};\n    const defaults = {};\n    this.deprecated = {};\n    for (const [key, def] of Object.entries(definitions)) {\n      defaults[key] = def.default;\n      types[key] = def.type;\n      if (def.deprecated) this.deprecated[key] = def.deprecated.trim().replace(/\\n +/, '\\n');\n    }\n\n    // populated the first time we flatten the object\n    this[_flatOptions] = null;\n    this[_flatten] = flatten;\n    this.types = types;\n    this.shorthands = shorthands;\n    this.defaults = defaults;\n    this.npmPath = npmPath;\n    this.log = log;\n    this.argv = argv;\n    this.env = env;\n    this.execPath = execPath;\n    this.platform = platform;\n    this.cwd = cwd;\n\n    // set when we load configs\n    this.globalPrefix = null;\n    this.localPrefix = null;\n\n    // defaults to env.HOME, but will always be *something*\n    this.home = null;\n\n    // set up the prototype chain of config objects\n    const wheres = [...confTypes];\n    this.data = new Map();\n    let parent = null;\n    for (const where of wheres) {\n      this.data.set(where, parent = new ConfigData(parent));\n    }\n    this.data.set = () => {\n      throw new Error('cannot change internal config data structure');\n    };\n    this.data.delete = () => {\n      throw new Error('cannot change internal config data structure');\n    };\n    this.sources = new Map([]);\n    this.list = [];\n    for (const {\n      data\n    } of this.data.values()) {\n      this.list.unshift(data);\n    }\n    Object.freeze(this.list);\n    this[_loaded] = false;\n  }\n  get loaded() {\n    return this[_loaded];\n  }\n  get prefix() {\n    return this[_get]('global') ? this.globalPrefix : this.localPrefix;\n  }\n\n  // return the location where key is found.\n  find(key) {\n    if (!this.loaded) throw new Error('call config.load() before reading values');\n    return this[_find](key);\n  }\n  [_find](key) {\n    // have to look in reverse order\n    const entries = [...this.data.entries()];\n    for (let i = entries.length - 1; i > -1; i--) {\n      const [where, {\n        data\n      }] = entries[i];\n      if (hasOwnProperty(data, key)) return where;\n    }\n    return null;\n  }\n  get(key, where) {\n    if (!this.loaded) throw new Error('call config.load() before reading values');\n    return this[_get](key, where);\n  }\n  // we need to get values sometimes, so use this internal one to do so\n  // while in the process of loading.\n  [_get](key, where = null) {\n    if (where !== null && !confTypes.has(where)) {\n      throw new Error('invalid config location param: ' + where);\n    }\n    const {\n      data,\n      source\n    } = this.data.get(where || 'cli');\n    return where === null || hasOwnProperty(data, key) ? data[key] : undefined;\n  }\n  set(key, val, where = 'cli') {\n    if (!this.loaded) throw new Error('call config.load() before setting values');\n    if (!confTypes.has(where)) throw new Error('invalid config location param: ' + where);\n    this[_checkDeprecated](key);\n    const {\n      data\n    } = this.data.get(where);\n    data[key] = val;\n\n    // this is now dirty, the next call to this.valid will have to check it\n    this.data.get(where)[_valid] = null;\n\n    // the flat options are invalidated, regenerate next time they're needed\n    this[_flatOptions] = null;\n  }\n  get flat() {\n    if (this[_flatOptions]) return this[_flatOptions];\n\n    // create the object for flat options passed to deps\n    process.emit('time', 'config:load:flatten');\n    this[_flatOptions] = {};\n    // walk from least priority to highest\n    for (const {\n      data\n    } of this.data.values()) {\n      this[_flatten](data, this[_flatOptions]);\n    }\n    process.emit('timeEnd', 'config:load:flatten');\n    return this[_flatOptions];\n  }\n  delete(key, where = 'cli') {\n    if (!this.loaded) throw new Error('call config.load() before deleting values');\n    if (!confTypes.has(where)) throw new Error('invalid config location param: ' + where);\n    delete this.data.get(where).data[key];\n  }\n  async load() {\n    if (this.loaded) throw new Error('attempting to load npm config multiple times');\n    process.emit('time', 'config:load');\n    // first load the defaults, which sets the global prefix\n    process.emit('time', 'config:load:defaults');\n    this.loadDefaults();\n    process.emit('timeEnd', 'config:load:defaults');\n\n    // next load the builtin config, as this sets new effective defaults\n    process.emit('time', 'config:load:builtin');\n    await this.loadBuiltinConfig();\n    process.emit('timeEnd', 'config:load:builtin');\n\n    // cli and env are not async, and can set the prefix, relevant to project\n    process.emit('time', 'config:load:cli');\n    this.loadCLI();\n    process.emit('timeEnd', 'config:load:cli');\n    process.emit('time', 'config:load:env');\n    this.loadEnv();\n    process.emit('timeEnd', 'config:load:env');\n\n    // next project config, which can affect userconfig location\n    process.emit('time', 'config:load:project');\n    await this.loadProjectConfig();\n    process.emit('timeEnd', 'config:load:project');\n    // then user config, which can affect globalconfig location\n    process.emit('time', 'config:load:user');\n    await this.loadUserConfig();\n    process.emit('timeEnd', 'config:load:user');\n    // last but not least, global config file\n    process.emit('time', 'config:load:global');\n    await this.loadGlobalConfig();\n    process.emit('timeEnd', 'config:load:global');\n\n    // warn if anything is not valid\n    process.emit('time', 'config:load:validate');\n    this.validate();\n    process.emit('timeEnd', 'config:load:validate');\n\n    // set this before calling setEnvs, so that we don't have to share\n    // symbols, as that module also does a bunch of get operations\n    this[_loaded] = true;\n    process.emit('time', 'config:load:credentials');\n    const reg = this.get('registry');\n    const creds = this.getCredentialsByURI(reg);\n    // ignore this error because a failed set will strip out anything that\n    // might be a security hazard, which was the intention.\n    try {\n      this.setCredentialsByURI(reg, creds);\n    } catch (_) {}\n    process.emit('timeEnd', 'config:load:credentials');\n\n    // set proper globalPrefix now that everything is loaded\n    this.globalPrefix = this.get('prefix');\n    process.emit('time', 'config:load:setEnvs');\n    this.setEnvs();\n    process.emit('timeEnd', 'config:load:setEnvs');\n    process.emit('timeEnd', 'config:load');\n  }\n  loadDefaults() {\n    this.loadGlobalPrefix();\n    this.loadHome();\n    this[_loadObject]({\n      ...this.defaults,\n      prefix: this.globalPrefix\n    }, 'default', 'default values');\n    const {\n      data\n    } = this.data.get('default');\n\n    // the metrics-registry defaults to the current resolved value of\n    // the registry, unless overridden somewhere else.\n    settableGetter(data, 'metrics-registry', () => this[_get]('registry'));\n\n    // if the prefix is set on cli, env, or userconfig, then we need to\n    // default the globalconfig file to that location, instead of the default\n    // global prefix.  It's weird that `npm get globalconfig --prefix=/foo`\n    // returns `/foo/etc/npmrc`, but better to not change it at this point.\n    settableGetter(data, 'globalconfig', () => resolve(this[_get]('prefix'), 'etc/npmrc'));\n  }\n  loadHome() {\n    if (this.env.HOME) return this.home = this.env.HOME;\n    this.home = homedir();\n  }\n  loadGlobalPrefix() {\n    if (this.globalPrefix) throw new Error('cannot load default global prefix more than once');\n    if (this.env.PREFIX) {\n      this.globalPrefix = this.env.PREFIX;\n    } else if (this.platform === 'win32') {\n      // c:\\node\\node.exe --> prefix=c:\\node\\\n      this.globalPrefix = dirname(this.execPath);\n    } else {\n      // /usr/local/bin/node --> prefix=/usr/local\n      this.globalPrefix = dirname(dirname(this.execPath));\n\n      // destdir only is respected on Unix\n      if (this.env.DESTDIR) this.globalPrefix = join(this.env.DESTDIR, this.globalPrefix);\n    }\n  }\n  loadEnv() {\n    const prefix = 'npm_config_';\n    const conf = Object.create(null);\n    for (const [envKey, envVal] of Object.entries(this.env)) {\n      if (!/^npm_config_/i.test(envKey) || envVal === '') continue;\n      const key = envKey.substr('npm_config_'.length).replace(/(?!^)_/g, '-') // don't replace _ at the start of the key\n      .toLowerCase();\n      conf[key] = envVal;\n    }\n    this[_loadObject](conf, 'env', 'environment');\n  }\n  loadCLI() {\n    nopt.invalidHandler = (k, val, type) => this.invalidHandler(k, val, type, 'command line options', 'cli');\n    const conf = nopt(this.types, this.shorthands, this.argv);\n    nopt.invalidHandler = null;\n    this.parsedArgv = conf.argv;\n    delete conf.argv;\n    this[_loadObject](conf, 'cli', 'command line options');\n  }\n  get valid() {\n    for (const [where, {\n      valid\n    }] of this.data.entries()) {\n      if (valid === false || valid === null && !this.validate(where)) return false;\n    }\n    return true;\n  }\n  validate(where) {\n    if (!where) {\n      let valid = true;\n      for (const [where, obj] of this.data.entries()) {\n        // no need to validate our defaults, we know they're fine\n        // cli was already validated when parsed the first time\n        if (where === 'default' || where === 'builtin' || where === 'cli') continue;\n        const ret = this.validate(where);\n        valid = valid && ret;\n      }\n      return valid;\n    } else {\n      const obj = this.data.get(where);\n      obj[_valid] = true;\n      nopt.invalidHandler = (k, val, type) => this.invalidHandler(k, val, type, obj.source, where);\n      nopt.clean(obj.data, this.types, this.typeDefs);\n      nopt.invalidHandler = null;\n      return obj[_valid];\n    }\n  }\n  invalidHandler(k, val, type, source, where) {\n    this.log.warn('invalid config', k + '=' + JSON.stringify(val), `set in ${source}`);\n    this.data.get(where)[_valid] = false;\n    if (Array.isArray(type)) {\n      if (type.includes(typeDefs.url.type)) type = typeDefs.url.type;else {\n        /* istanbul ignore if - no actual configs matching this, but\n         * path types SHOULD be handled this way, like URLs, for the\n         * same reason */\n        if (type.includes(typeDefs.path.type)) type = typeDefs.path.type;\n      }\n    }\n    const typeDesc = typeDescription(type);\n    const oneOrMore = typeDesc.indexOf(Array) !== -1;\n    const mustBe = typeDesc.filter(m => m !== undefined && m !== Array);\n    const oneOf = mustBe.length === 1 && oneOrMore ? ' one or more' : mustBe.length > 1 && oneOrMore ? ' one or more of:' : mustBe.length > 1 ? ' one of:' : '';\n    const msg = 'Must be' + oneOf;\n    const desc = mustBe.length === 1 ? mustBe[0] : mustBe.filter(m => m !== Array).map(n => typeof n === 'string' ? n : JSON.stringify(n)).join(', ');\n    this.log.warn('invalid config', msg, desc);\n  }\n  [_loadObject](obj, where, source, er = null) {\n    const conf = this.data.get(where);\n    if (conf.source) {\n      const m = `double-loading \"${where}\" configs from ${source}, ` + `previously loaded from ${conf.source}`;\n      throw new Error(m);\n    }\n    if (this.sources.has(source)) {\n      const m = `double-loading config \"${source}\" as \"${where}\", ` + `previously loaded as \"${this.sources.get(source)}\"`;\n      throw new Error(m);\n    }\n    conf.source = source;\n    this.sources.set(source, where);\n    if (er) {\n      conf.loadError = er;\n      if (er.code !== 'ENOENT') this.log.verbose('config', `error loading ${where} config`, er);\n    } else {\n      conf.raw = obj;\n      for (const [key, value] of Object.entries(obj)) {\n        const k = envReplace(key, this.env);\n        const v = this.parseField(value, k);\n        if (where !== 'default') this[_checkDeprecated](k, where, obj, [key, value]);\n        conf.data[k] = v;\n      }\n    }\n  }\n  [_checkDeprecated](key, where, obj, kv) {\n    // XXX a future npm version will make this a warning.\n    // An even more future npm version will make this an error.\n    if (this.deprecated[key]) {\n      this.log.verbose('config', key, this.deprecated[key]);\n    }\n  }\n\n  // Parse a field, coercing it to the best type available.\n  parseField(f, key, listElement = false) {\n    return parseField(f, key, this, listElement);\n  }\n  async [_loadFile](file, type) {\n    process.emit('time', 'config:load:file:' + file);\n    // only catch the error from readFile, not from the loadObject call\n    await readFile(file, 'utf8').then(data => this[_loadObject](ini.parse(data), type, file), er => this[_loadObject](null, type, file, er));\n    process.emit('timeEnd', 'config:load:file:' + file);\n  }\n  loadBuiltinConfig() {\n    return this[_loadFile](resolve(this.npmPath, 'npmrc'), 'builtin');\n  }\n  async loadProjectConfig() {\n    // the localPrefix can be set by the CLI config, but otherwise is\n    // found by walking up the folder tree\n    await this.loadLocalPrefix();\n    const projectFile = resolve(this.localPrefix, '.npmrc');\n    // if we're in the ~ directory, and there happens to be a node_modules\n    // folder (which is not TOO uncommon, it turns out), then we can end\n    // up loading the \"project\" config where the \"userconfig\" will be,\n    // which causes some calamaties.  So, we only load project config if\n    // it doesn't match what the userconfig will be.\n    if (projectFile !== this[_get]('userconfig')) return this[_loadFile](projectFile, 'project');else {\n      this.data.get('project').source = '(same as \"user\" config, ignored)';\n      this.sources.set(this.data.get('project').source, 'project');\n    }\n  }\n  async loadLocalPrefix() {\n    const cliPrefix = this[_get]('prefix', 'cli');\n    if (cliPrefix) {\n      this.localPrefix = cliPrefix;\n      return;\n    }\n    for (const p of walkUp(this.cwd)) {\n      // walk up until we have a nm dir or a pj file\n      const hasAny = (await Promise.all([stat(resolve(p, 'node_modules')).then(st => st.isDirectory()).catch(() => false), stat(resolve(p, 'package.json')).then(st => st.isFile()).catch(() => false)])).some(is => is);\n      if (hasAny) {\n        this.localPrefix = p;\n        return;\n      }\n    }\n    this.localPrefix = this.cwd;\n  }\n  loadUserConfig() {\n    return this[_loadFile](this[_get]('userconfig'), 'user');\n  }\n  loadGlobalConfig() {\n    return this[_loadFile](this[_get]('globalconfig'), 'global');\n  }\n  async save(where) {\n    if (!this.loaded) throw new Error('call config.load() before saving');\n    if (!confFileTypes.has(where)) throw new Error('invalid config location param: ' + where);\n    const conf = this.data.get(where);\n    conf[_raw] = {\n      ...conf.data\n    };\n    conf[_loadError] = null;\n\n    // upgrade auth configs to more secure variants before saving\n    if (where === 'user') {\n      const reg = this.get('registry');\n      const creds = this.getCredentialsByURI(reg);\n      // we ignore this error because the failed set already removed\n      // anything that might be a security hazard, and it won't be\n      // saved back to the .npmrc file, so we're good.\n      try {\n        this.setCredentialsByURI(reg, creds);\n      } catch (_) {}\n    }\n    const iniData = ini.stringify(conf.data).trim() + '\\n';\n    if (!iniData.trim()) {\n      // ignore the unlink error (eg, if file doesn't exist)\n      await unlink(conf.source).catch(er => {});\n      return;\n    }\n    const dir = dirname(conf.source);\n    await mkdirp(dir);\n    await writeFile(conf.source, iniData, 'utf8');\n    // don't leave a root-owned config file lying around\n    /* istanbul ignore if - this is best-effort and a pita to test */\n    if (myUid === 0) {\n      const st = await stat(dir).catch(() => null);\n      if (st && (st.uid !== myUid || st.gid !== myGid)) await chown(conf.source, st.uid, st.gid).catch(() => {});\n    }\n    const mode = where === 'user' ? 0o600 : 0o666;\n    await chmod(conf.source, mode);\n  }\n  clearCredentialsByURI(uri) {\n    const nerfed = nerfDart(uri);\n    const def = nerfDart(this.get('registry'));\n    if (def === nerfed) {\n      // do not delete email, that shouldn't be nerfed any more.\n      // just delete the nerfed copy, if one exists.\n      this.delete(`-authtoken`, 'user');\n      this.delete(`_authToken`, 'user');\n      this.delete(`_authtoken`, 'user');\n      this.delete(`_auth`, 'user');\n      this.delete(`_password`, 'user');\n      this.delete(`username`, 'user');\n    }\n    this.delete(`${nerfed}:-authtoken`, 'user');\n    this.delete(`${nerfed}:_authtoken`, 'user');\n    this.delete(`${nerfed}:_authToken`, 'user');\n    this.delete(`${nerfed}:_auth`, 'user');\n    this.delete(`${nerfed}:_password`, 'user');\n    this.delete(`${nerfed}:username`, 'user');\n    this.delete(`${nerfed}:email`, 'user');\n  }\n  setCredentialsByURI(uri, {\n    token,\n    username,\n    password,\n    email\n  }) {\n    const nerfed = nerfDart(uri);\n    const def = nerfDart(this.get('registry'));\n    if (def === nerfed) {\n      // remove old style auth info not limited to a single registry\n      this.delete('_password', 'user');\n      this.delete('username', 'user');\n      this.delete('_auth', 'user');\n      this.delete('_authtoken', 'user');\n      this.delete('-authtoken', 'user');\n      this.delete('_authToken', 'user');\n    }\n\n    // email used to be nerfed always.  if we're using the default\n    // registry, de-nerf it.\n    if (nerfed === def) {\n      email = email || this.get('email', 'user') || this.get(`${nerfed}:email`, 'user');\n      if (email) this.set('email', email, 'user');\n    }\n\n    // field that hasn't been used as documented for a LONG time,\n    // and as of npm 7.10.0, isn't used at all.  We just always\n    // send auth if we have it, only to the URIs under the nerf dart.\n    this.delete(`${nerfed}:always-auth`, 'user');\n    this.delete(`${nerfed}:-authtoken`, 'user');\n    this.delete(`${nerfed}:_authtoken`, 'user');\n    this.delete(`${nerfed}:email`, 'user');\n    if (token) {\n      this.set(`${nerfed}:_authToken`, token, 'user');\n      this.delete(`${nerfed}:_password`, 'user');\n      this.delete(`${nerfed}:username`, 'user');\n    } else if (username || password) {\n      if (!username) throw new Error('must include username');\n      if (!password) throw new Error('must include password');\n      this.delete(`${nerfed}:_authToken`, 'user');\n      this.set(`${nerfed}:username`, username, 'user');\n      // note: not encrypted, no idea why we bothered to do this, but oh well\n      // protects against shoulder-hacks if password is memorable, I guess?\n      const encoded = Buffer.from(password, 'utf8').toString('base64');\n      this.set(`${nerfed}:_password`, encoded, 'user');\n    } else {\n      throw new Error('No credentials to set.');\n    }\n  }\n\n  // this has to be a bit more complicated to support legacy data of all forms\n  getCredentialsByURI(uri) {\n    const nerfed = nerfDart(uri);\n    const creds = {};\n    const email = this.get(`${nerfed}:email`) || this.get('email');\n    if (email) creds.email = email;\n    const tokenReg = this.get(`${nerfed}:_authToken`) || this.get(`${nerfed}:_authtoken`) || this.get(`${nerfed}:-authtoken`) || nerfed === nerfDart(this.get('registry')) && this.get('_authToken');\n    if (tokenReg) {\n      creds.token = tokenReg;\n      return creds;\n    }\n    const userReg = this.get(`${nerfed}:username`);\n    const passReg = this.get(`${nerfed}:_password`);\n    if (userReg && passReg) {\n      creds.username = userReg;\n      creds.password = Buffer.from(passReg, 'base64').toString('utf8');\n      const auth = `${creds.username}:${creds.password}`;\n      creds.auth = Buffer.from(auth, 'utf8').toString('base64');\n      return creds;\n    }\n    const authReg = this.get(`${nerfed}:_auth`);\n    if (authReg) {\n      const authDecode = Buffer.from(authReg, 'base64').toString('utf8');\n      const authSplit = authDecode.split(':');\n      creds.username = authSplit.shift();\n      creds.password = authSplit.join(':');\n      creds.auth = authReg;\n      return creds;\n    }\n\n    // at this point, we can only use the values if the URI is the\n    // default registry.\n    const defaultNerf = nerfDart(this.get('registry'));\n    if (nerfed !== defaultNerf) return creds;\n    const userDef = this.get('username');\n    const passDef = this.get('_password');\n    if (userDef && passDef) {\n      creds.username = userDef;\n      creds.password = Buffer.from(passDef, 'base64').toString('utf8');\n      const auth = `${creds.username}:${creds.password}`;\n      creds.auth = Buffer.from(auth, 'utf8').toString('base64');\n      return creds;\n    }\n\n    // Handle the old-style _auth=<base64> style for the default\n    // registry, if set.\n    const auth = this.get('_auth');\n    if (!auth) return creds;\n    const authDecode = Buffer.from(auth, 'base64').toString('utf8');\n    const authSplit = authDecode.split(':');\n    creds.username = authSplit.shift();\n    creds.password = authSplit.join(':');\n    creds.auth = auth;\n    return creds;\n  }\n\n  // set up the environment object we have with npm_config_* environs\n  // for all configs that are different from their default values, and\n  // set EDITOR and HOME.\n  setEnvs() {\n    setEnvs(this);\n  }\n}\nconst _data = Symbol('data');\nconst _raw = Symbol('raw');\nconst _loadError = Symbol('loadError');\nconst _source = Symbol('source');\nconst _valid = Symbol('valid');\nclass ConfigData {\n  constructor(parent) {\n    this[_data] = Object.create(parent && parent.data);\n    this[_source] = null;\n    this[_loadError] = null;\n    this[_raw] = null;\n    this[_valid] = true;\n  }\n  get data() {\n    return this[_data];\n  }\n  get valid() {\n    return this[_valid];\n  }\n  set source(s) {\n    if (this[_source]) throw new Error('cannot set ConfigData source more than once');\n    this[_source] = s;\n  }\n  get source() {\n    return this[_source];\n  }\n  set loadError(e) {\n    if (this[_loadError] || this[_raw]) throw new Error('cannot set ConfigData loadError after load');\n    this[_loadError] = e;\n  }\n  get loadError() {\n    return this[_loadError];\n  }\n  set raw(r) {\n    if (this[_raw] || this[_loadError]) throw new Error('cannot set ConfigData raw after load');\n    this[_raw] = r;\n  }\n  get raw() {\n    return this[_raw];\n  }\n}\nmodule.exports = Config;","map":{"version":3,"names":["walkUp","require","ini","nopt","mkdirp","myUid","process","getuid","myGid","getgid","resolve","dirname","join","homedir","promisify","fs","readFile","writeFile","chmod","chown","unlink","stat","hasOwnProperty","obj","key","Object","prototype","call","settableGetter","get","defineProperty","set","value","configurable","writable","enumerable","typeDefs","nerfDart","envReplace","parseField","typeDescription","setEnvs","confFileTypes","Set","confTypes","_loaded","Symbol","_get","_find","_loadObject","_loadFile","_checkDeprecated","_flatten","_flatOptions","Config","constructor","definitions","shorthands","flatten","npmPath","env","argv","log","platform","execPath","cwd","types","defaults","deprecated","def","entries","default","type","trim","replace","globalPrefix","localPrefix","home","wheres","data","Map","parent","where","ConfigData","Error","delete","sources","list","values","unshift","freeze","loaded","prefix","find","i","length","has","source","undefined","val","_valid","flat","emit","load","loadDefaults","loadBuiltinConfig","loadCLI","loadEnv","loadProjectConfig","loadUserConfig","loadGlobalConfig","validate","reg","creds","getCredentialsByURI","setCredentialsByURI","_","loadGlobalPrefix","loadHome","HOME","PREFIX","DESTDIR","conf","create","envKey","envVal","test","substr","toLowerCase","invalidHandler","k","parsedArgv","valid","ret","clean","warn","JSON","stringify","Array","isArray","includes","url","path","typeDesc","oneOrMore","indexOf","mustBe","filter","m","oneOf","msg","desc","map","n","er","loadError","code","verbose","raw","v","kv","f","listElement","file","then","parse","loadLocalPrefix","projectFile","cliPrefix","p","hasAny","Promise","all","st","isDirectory","catch","isFile","some","is","save","_raw","_loadError","iniData","dir","uid","gid","mode","clearCredentialsByURI","uri","nerfed","token","username","password","email","encoded","Buffer","from","toString","tokenReg","userReg","passReg","auth","authReg","authDecode","authSplit","split","shift","defaultNerf","userDef","passDef","_data","_source","s","e","r","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/config/lib/index.js"],"sourcesContent":["// TODO: set the scope config from package.json or explicit cli config\nconst walkUp = require('walk-up-path')\nconst ini = require('ini')\nconst nopt = require('nopt')\nconst mkdirp = require('mkdirp-infer-owner')\n\n/* istanbul ignore next */\nconst myUid = process.getuid && process.getuid()\n/* istanbul ignore next */\nconst myGid = process.getgid && process.getgid()\n\nconst { resolve, dirname, join } = require('path')\nconst { homedir } = require('os')\nconst { promisify } = require('util')\nconst fs = require('fs')\nconst readFile = promisify(fs.readFile)\nconst writeFile = promisify(fs.writeFile)\nconst chmod = promisify(fs.chmod)\nconst chown = promisify(fs.chown)\nconst unlink = promisify(fs.unlink)\nconst stat = promisify(fs.stat)\n\nconst hasOwnProperty = (obj, key) =>\n  Object.prototype.hasOwnProperty.call(obj, key)\n\n// define a custom getter, but turn into a normal prop\n// if we set it.  otherwise it can't be set on child objects\nconst settableGetter = (obj, key, get) => {\n  Object.defineProperty(obj, key, {\n    get,\n    set (value) {\n      Object.defineProperty(obj, key, {\n        value,\n        configurable: true,\n        writable: true,\n        enumerable: true,\n      })\n    },\n    configurable: true,\n    enumerable: true,\n  })\n}\n\nconst typeDefs = require('./type-defs.js')\nconst nerfDart = require('./nerf-dart.js')\nconst envReplace = require('./env-replace.js')\nconst parseField = require('./parse-field.js')\nconst typeDescription = require('./type-description.js')\nconst setEnvs = require('./set-envs.js')\n\n// types that can be saved back to\nconst confFileTypes = new Set([\n  'global',\n  'user',\n  'project',\n])\n\nconst confTypes = new Set([\n  'default',\n  'builtin',\n  ...confFileTypes,\n  'env',\n  'cli',\n])\n\nconst _loaded = Symbol('loaded')\nconst _get = Symbol('get')\nconst _find = Symbol('find')\nconst _loadObject = Symbol('loadObject')\nconst _loadFile = Symbol('loadFile')\nconst _checkDeprecated = Symbol('checkDeprecated')\nconst _flatten = Symbol('flatten')\nconst _flatOptions = Symbol('flatOptions')\n\nclass Config {\n  static get typeDefs () {\n    return typeDefs\n  }\n\n  constructor ({\n    definitions,\n    shorthands,\n    flatten,\n    npmPath,\n\n    // options just to override in tests, mostly\n    env = process.env,\n    argv = process.argv,\n    log = require('./proc-log.js'),\n    platform = process.platform,\n    execPath = process.execPath,\n    cwd = process.cwd(),\n  }) {\n\n    // turn the definitions into nopt's weirdo syntax\n    this.definitions = definitions\n    const types = {}\n    const defaults = {}\n    this.deprecated = {}\n    for (const [key, def] of Object.entries(definitions)) {\n      defaults[key] = def.default\n      types[key] = def.type\n      if (def.deprecated)\n        this.deprecated[key] = def.deprecated.trim().replace(/\\n +/, '\\n')\n    }\n\n    // populated the first time we flatten the object\n    this[_flatOptions] = null\n    this[_flatten] = flatten\n    this.types = types\n    this.shorthands = shorthands\n    this.defaults = defaults\n\n    this.npmPath = npmPath\n    this.log = log\n    this.argv = argv\n    this.env = env\n    this.execPath = execPath\n    this.platform = platform\n    this.cwd = cwd\n\n    // set when we load configs\n    this.globalPrefix = null\n    this.localPrefix = null\n\n    // defaults to env.HOME, but will always be *something*\n    this.home = null\n\n    // set up the prototype chain of config objects\n    const wheres = [...confTypes]\n    this.data = new Map()\n    let parent = null\n    for (const where of wheres) {\n      this.data.set(where, parent = new ConfigData(parent))\n    }\n\n    this.data.set = () => {\n      throw new Error('cannot change internal config data structure')\n    }\n    this.data.delete = () => {\n      throw new Error('cannot change internal config data structure')\n    }\n\n    this.sources = new Map([])\n\n    this.list = []\n    for (const { data } of this.data.values()) {\n      this.list.unshift(data)\n    }\n    Object.freeze(this.list)\n\n    this[_loaded] = false\n  }\n\n  get loaded () {\n    return this[_loaded]\n  }\n\n  get prefix () {\n    return this[_get]('global') ? this.globalPrefix : this.localPrefix\n  }\n\n  // return the location where key is found.\n  find (key) {\n    if (!this.loaded)\n      throw new Error('call config.load() before reading values')\n    return this[_find](key)\n  }\n  [_find] (key) {\n    // have to look in reverse order\n    const entries = [...this.data.entries()]\n    for (let i = entries.length - 1; i > -1; i--) {\n      const [where, { data }] = entries[i]\n      if (hasOwnProperty(data, key))\n        return where\n    }\n    return null\n  }\n\n  get (key, where) {\n    if (!this.loaded)\n      throw new Error('call config.load() before reading values')\n    return this[_get](key, where)\n  }\n  // we need to get values sometimes, so use this internal one to do so\n  // while in the process of loading.\n  [_get] (key, where = null) {\n    if (where !== null && !confTypes.has(where)) {\n      throw new Error('invalid config location param: ' + where)\n    }\n    const { data, source } = this.data.get(where || 'cli')\n    return where === null || hasOwnProperty(data, key) ? data[key] : undefined\n  }\n\n  set (key, val, where = 'cli') {\n    if (!this.loaded)\n      throw new Error('call config.load() before setting values')\n    if (!confTypes.has(where))\n      throw new Error('invalid config location param: ' + where)\n    this[_checkDeprecated](key)\n    const { data } = this.data.get(where)\n    data[key] = val\n\n    // this is now dirty, the next call to this.valid will have to check it\n    this.data.get(where)[_valid] = null\n\n    // the flat options are invalidated, regenerate next time they're needed\n    this[_flatOptions] = null\n  }\n\n  get flat () {\n    if (this[_flatOptions])\n      return this[_flatOptions]\n\n    // create the object for flat options passed to deps\n    process.emit('time', 'config:load:flatten')\n    this[_flatOptions] = {}\n    // walk from least priority to highest\n    for (const { data } of this.data.values()) {\n      this[_flatten](data, this[_flatOptions])\n    }\n    process.emit('timeEnd', 'config:load:flatten')\n\n    return this[_flatOptions]\n  }\n\n  delete (key, where = 'cli') {\n    if (!this.loaded)\n      throw new Error('call config.load() before deleting values')\n    if (!confTypes.has(where))\n      throw new Error('invalid config location param: ' + where)\n    delete this.data.get(where).data[key]\n  }\n\n  async load () {\n    if (this.loaded)\n      throw new Error('attempting to load npm config multiple times')\n\n    process.emit('time', 'config:load')\n    // first load the defaults, which sets the global prefix\n    process.emit('time', 'config:load:defaults')\n    this.loadDefaults()\n    process.emit('timeEnd', 'config:load:defaults')\n\n    // next load the builtin config, as this sets new effective defaults\n    process.emit('time', 'config:load:builtin')\n    await this.loadBuiltinConfig()\n    process.emit('timeEnd', 'config:load:builtin')\n\n    // cli and env are not async, and can set the prefix, relevant to project\n    process.emit('time', 'config:load:cli')\n    this.loadCLI()\n    process.emit('timeEnd', 'config:load:cli')\n    process.emit('time', 'config:load:env')\n    this.loadEnv()\n    process.emit('timeEnd', 'config:load:env')\n\n    // next project config, which can affect userconfig location\n    process.emit('time', 'config:load:project')\n    await this.loadProjectConfig()\n    process.emit('timeEnd', 'config:load:project')\n    // then user config, which can affect globalconfig location\n    process.emit('time', 'config:load:user')\n    await this.loadUserConfig()\n    process.emit('timeEnd', 'config:load:user')\n    // last but not least, global config file\n    process.emit('time', 'config:load:global')\n    await this.loadGlobalConfig()\n    process.emit('timeEnd', 'config:load:global')\n\n    // warn if anything is not valid\n    process.emit('time', 'config:load:validate')\n    this.validate()\n    process.emit('timeEnd', 'config:load:validate')\n\n    // set this before calling setEnvs, so that we don't have to share\n    // symbols, as that module also does a bunch of get operations\n    this[_loaded] = true\n\n    process.emit('time', 'config:load:credentials')\n    const reg = this.get('registry')\n    const creds = this.getCredentialsByURI(reg)\n    // ignore this error because a failed set will strip out anything that\n    // might be a security hazard, which was the intention.\n    try { this.setCredentialsByURI(reg, creds) } catch (_) {}\n    process.emit('timeEnd', 'config:load:credentials')\n\n    // set proper globalPrefix now that everything is loaded\n    this.globalPrefix = this.get('prefix')\n\n    process.emit('time', 'config:load:setEnvs')\n    this.setEnvs()\n    process.emit('timeEnd', 'config:load:setEnvs')\n\n    process.emit('timeEnd', 'config:load')\n  }\n\n  loadDefaults () {\n    this.loadGlobalPrefix()\n    this.loadHome()\n\n    this[_loadObject]({\n      ...this.defaults,\n      prefix: this.globalPrefix,\n    }, 'default', 'default values')\n\n    const { data } = this.data.get('default')\n\n    // the metrics-registry defaults to the current resolved value of\n    // the registry, unless overridden somewhere else.\n    settableGetter(data, 'metrics-registry', () => this[_get]('registry'))\n\n    // if the prefix is set on cli, env, or userconfig, then we need to\n    // default the globalconfig file to that location, instead of the default\n    // global prefix.  It's weird that `npm get globalconfig --prefix=/foo`\n    // returns `/foo/etc/npmrc`, but better to not change it at this point.\n    settableGetter(data, 'globalconfig', () =>\n      resolve(this[_get]('prefix'), 'etc/npmrc'))\n  }\n\n  loadHome () {\n    if (this.env.HOME)\n      return this.home = this.env.HOME\n    this.home = homedir()\n  }\n\n  loadGlobalPrefix () {\n    if (this.globalPrefix)\n      throw new Error('cannot load default global prefix more than once')\n\n    if (this.env.PREFIX) {\n      this.globalPrefix = this.env.PREFIX\n    } else if (this.platform === 'win32') {\n    // c:\\node\\node.exe --> prefix=c:\\node\\\n      this.globalPrefix = dirname(this.execPath)\n    } else {\n      // /usr/local/bin/node --> prefix=/usr/local\n      this.globalPrefix = dirname(dirname(this.execPath))\n\n      // destdir only is respected on Unix\n      if (this.env.DESTDIR)\n        this.globalPrefix = join(this.env.DESTDIR, this.globalPrefix)\n    }\n  }\n\n  loadEnv () {\n    const prefix = 'npm_config_'\n    const conf = Object.create(null)\n    for (const [envKey, envVal] of Object.entries(this.env)) {\n      if (!/^npm_config_/i.test(envKey) || envVal === '')\n        continue\n      const key = envKey.substr('npm_config_'.length)\n        .replace(/(?!^)_/g, '-') // don't replace _ at the start of the key\n        .toLowerCase()\n      conf[key] = envVal\n    }\n    this[_loadObject](conf, 'env', 'environment')\n  }\n\n  loadCLI () {\n    nopt.invalidHandler = (k, val, type) =>\n      this.invalidHandler(k, val, type, 'command line options', 'cli')\n    const conf = nopt(this.types, this.shorthands, this.argv)\n    nopt.invalidHandler = null\n    this.parsedArgv = conf.argv\n    delete conf.argv\n    this[_loadObject](conf, 'cli', 'command line options')\n  }\n\n  get valid () {\n    for (const [where, {valid}] of this.data.entries()) {\n      if (valid === false || valid === null && !this.validate(where))\n        return false\n    }\n    return true\n  }\n\n  validate (where) {\n    if (!where) {\n      let valid = true\n      for (const [where, obj] of this.data.entries()) {\n        // no need to validate our defaults, we know they're fine\n        // cli was already validated when parsed the first time\n        if (where === 'default' || where === 'builtin' || where === 'cli')\n          continue\n        const ret = this.validate(where)\n        valid = valid && ret\n      }\n      return valid\n    } else {\n      const obj = this.data.get(where)\n      obj[_valid] = true\n\n      nopt.invalidHandler = (k, val, type) =>\n        this.invalidHandler(k, val, type, obj.source, where)\n\n      nopt.clean(obj.data, this.types, this.typeDefs)\n\n      nopt.invalidHandler = null\n      return obj[_valid]\n    }\n  }\n\n  invalidHandler (k, val, type, source, where) {\n    this.log.warn(\n      'invalid config',\n      k + '=' + JSON.stringify(val),\n      `set in ${source}`\n    )\n    this.data.get(where)[_valid] = false\n\n    if (Array.isArray(type)) {\n      if (type.includes(typeDefs.url.type))\n        type = typeDefs.url.type\n      else {\n        /* istanbul ignore if - no actual configs matching this, but\n         * path types SHOULD be handled this way, like URLs, for the\n         * same reason */\n        if (type.includes(typeDefs.path.type))\n          type = typeDefs.path.type\n      }\n    }\n\n    const typeDesc = typeDescription(type)\n    const oneOrMore = typeDesc.indexOf(Array) !== -1\n    const mustBe = typeDesc\n      .filter(m => m !== undefined && m !== Array)\n    const oneOf = mustBe.length === 1 && oneOrMore ? ' one or more'\n      : mustBe.length > 1 && oneOrMore ? ' one or more of:'\n      : mustBe.length > 1 ? ' one of:'\n      : ''\n    const msg = 'Must be' + oneOf\n    const desc = mustBe.length === 1 ? mustBe[0]\n      : mustBe.filter(m => m !== Array)\n        .map(n => typeof n === 'string' ? n : JSON.stringify(n))\n        .join(', ')\n    this.log.warn('invalid config', msg, desc)\n  }\n\n  [_loadObject] (obj, where, source, er = null) {\n    const conf = this.data.get(where)\n    if (conf.source) {\n      const m = `double-loading \"${where}\" configs from ${source}, ` +\n        `previously loaded from ${conf.source}`\n      throw new Error(m)\n    }\n\n    if (this.sources.has(source)) {\n      const m = `double-loading config \"${source}\" as \"${where}\", ` +\n        `previously loaded as \"${this.sources.get(source)}\"`\n      throw new Error(m)\n    }\n\n    conf.source = source\n    this.sources.set(source, where)\n    if (er) {\n      conf.loadError = er\n      if (er.code !== 'ENOENT')\n        this.log.verbose('config', `error loading ${where} config`, er)\n    } else {\n      conf.raw = obj\n      for (const [key, value] of Object.entries(obj)) {\n        const k = envReplace(key, this.env)\n        const v = this.parseField(value, k)\n        if (where !== 'default')\n          this[_checkDeprecated](k, where, obj, [key, value])\n        conf.data[k] = v\n      }\n    }\n  }\n\n  [_checkDeprecated] (key, where, obj, kv) {\n    // XXX a future npm version will make this a warning.\n    // An even more future npm version will make this an error.\n    if (this.deprecated[key]) {\n      this.log.verbose('config', key, this.deprecated[key])\n    }\n  }\n\n  // Parse a field, coercing it to the best type available.\n  parseField (f, key, listElement = false) {\n    return parseField(f, key, this, listElement)\n  }\n\n  async [_loadFile] (file, type) {\n    process.emit('time', 'config:load:file:' + file)\n    // only catch the error from readFile, not from the loadObject call\n    await readFile(file, 'utf8').then(\n      data => this[_loadObject](ini.parse(data), type, file),\n      er => this[_loadObject](null, type, file, er)\n    )\n    process.emit('timeEnd', 'config:load:file:' + file)\n  }\n\n  loadBuiltinConfig () {\n    return this[_loadFile](resolve(this.npmPath, 'npmrc'), 'builtin')\n  }\n\n  async loadProjectConfig () {\n    // the localPrefix can be set by the CLI config, but otherwise is\n    // found by walking up the folder tree\n    await this.loadLocalPrefix()\n    const projectFile = resolve(this.localPrefix, '.npmrc')\n    // if we're in the ~ directory, and there happens to be a node_modules\n    // folder (which is not TOO uncommon, it turns out), then we can end\n    // up loading the \"project\" config where the \"userconfig\" will be,\n    // which causes some calamaties.  So, we only load project config if\n    // it doesn't match what the userconfig will be.\n    if (projectFile !== this[_get]('userconfig'))\n      return this[_loadFile](projectFile, 'project')\n    else {\n      this.data.get('project').source = '(same as \"user\" config, ignored)'\n      this.sources.set(this.data.get('project').source, 'project')\n    }\n  }\n\n  async loadLocalPrefix () {\n    const cliPrefix = this[_get]('prefix', 'cli')\n    if (cliPrefix) {\n      this.localPrefix = cliPrefix\n      return\n    }\n\n    for (const p of walkUp(this.cwd)) {\n      // walk up until we have a nm dir or a pj file\n      const hasAny = (await Promise.all([\n        stat(resolve(p, 'node_modules'))\n          .then(st => st.isDirectory())\n          .catch(() => false),\n        stat(resolve(p, 'package.json'))\n          .then(st => st.isFile())\n          .catch(() => false),\n      ])).some(is => is)\n      if (hasAny) {\n        this.localPrefix = p\n        return\n      }\n    }\n\n    this.localPrefix = this.cwd\n  }\n\n  loadUserConfig () {\n    return this[_loadFile](this[_get]('userconfig'), 'user')\n  }\n\n  loadGlobalConfig () {\n    return this[_loadFile](this[_get]('globalconfig'), 'global')\n  }\n\n  async save (where) {\n    if (!this.loaded)\n      throw new Error('call config.load() before saving')\n    if (!confFileTypes.has(where))\n      throw new Error('invalid config location param: ' + where)\n    const conf = this.data.get(where)\n    conf[_raw] = { ...conf.data }\n    conf[_loadError] = null\n\n    // upgrade auth configs to more secure variants before saving\n    if (where === 'user') {\n      const reg = this.get('registry')\n      const creds = this.getCredentialsByURI(reg)\n      // we ignore this error because the failed set already removed\n      // anything that might be a security hazard, and it won't be\n      // saved back to the .npmrc file, so we're good.\n      try { this.setCredentialsByURI(reg, creds) } catch (_) {}\n    }\n\n    const iniData = ini.stringify(conf.data).trim() + '\\n'\n    if (!iniData.trim()) {\n      // ignore the unlink error (eg, if file doesn't exist)\n      await unlink(conf.source).catch(er => {})\n      return\n    }\n    const dir = dirname(conf.source)\n    await mkdirp(dir)\n    await writeFile(conf.source, iniData, 'utf8')\n    // don't leave a root-owned config file lying around\n    /* istanbul ignore if - this is best-effort and a pita to test */\n    if (myUid === 0) {\n      const st = await stat(dir).catch(() => null)\n      if (st && (st.uid !== myUid || st.gid !== myGid))\n        await chown(conf.source, st.uid, st.gid).catch(() => {})\n    }\n    const mode = where === 'user' ? 0o600 : 0o666\n    await chmod(conf.source, mode)\n  }\n\n  clearCredentialsByURI (uri) {\n    const nerfed = nerfDart(uri)\n    const def = nerfDart(this.get('registry'))\n    if (def === nerfed) {\n      // do not delete email, that shouldn't be nerfed any more.\n      // just delete the nerfed copy, if one exists.\n      this.delete(`-authtoken`, 'user')\n      this.delete(`_authToken`, 'user')\n      this.delete(`_authtoken`, 'user')\n      this.delete(`_auth`, 'user')\n      this.delete(`_password`, 'user')\n      this.delete(`username`, 'user')\n    }\n    this.delete(`${nerfed}:-authtoken`, 'user')\n    this.delete(`${nerfed}:_authtoken`, 'user')\n    this.delete(`${nerfed}:_authToken`, 'user')\n    this.delete(`${nerfed}:_auth`, 'user')\n    this.delete(`${nerfed}:_password`, 'user')\n    this.delete(`${nerfed}:username`, 'user')\n    this.delete(`${nerfed}:email`, 'user')\n  }\n\n  setCredentialsByURI (uri, { token, username, password, email }) {\n    const nerfed = nerfDart(uri)\n    const def = nerfDart(this.get('registry'))\n\n    if (def === nerfed) {\n      // remove old style auth info not limited to a single registry\n      this.delete('_password', 'user')\n      this.delete('username', 'user')\n      this.delete('_auth', 'user')\n      this.delete('_authtoken', 'user')\n      this.delete('-authtoken', 'user')\n      this.delete('_authToken', 'user')\n    }\n\n    // email used to be nerfed always.  if we're using the default\n    // registry, de-nerf it.\n    if (nerfed === def) {\n      email = email ||\n        this.get('email', 'user') ||\n        this.get(`${nerfed}:email`, 'user')\n      if (email)\n        this.set('email', email, 'user')\n    }\n\n    // field that hasn't been used as documented for a LONG time,\n    // and as of npm 7.10.0, isn't used at all.  We just always\n    // send auth if we have it, only to the URIs under the nerf dart.\n    this.delete(`${nerfed}:always-auth`, 'user')\n\n    this.delete(`${nerfed}:-authtoken`, 'user')\n    this.delete(`${nerfed}:_authtoken`, 'user')\n    this.delete(`${nerfed}:email`, 'user')\n    if (token) {\n      this.set(`${nerfed}:_authToken`, token, 'user')\n      this.delete(`${nerfed}:_password`, 'user')\n      this.delete(`${nerfed}:username`, 'user')\n    } else if (username || password) {\n      if (!username)\n        throw new Error('must include username')\n      if (!password)\n        throw new Error('must include password')\n      this.delete(`${nerfed}:_authToken`, 'user')\n      this.set(`${nerfed}:username`, username, 'user')\n      // note: not encrypted, no idea why we bothered to do this, but oh well\n      // protects against shoulder-hacks if password is memorable, I guess?\n      const encoded = Buffer.from(password, 'utf8').toString('base64')\n      this.set(`${nerfed}:_password`, encoded, 'user')\n    } else {\n      throw new Error('No credentials to set.')\n    }\n  }\n\n  // this has to be a bit more complicated to support legacy data of all forms\n  getCredentialsByURI (uri) {\n    const nerfed = nerfDart(uri)\n    const creds = {}\n\n    const email = this.get(`${nerfed}:email`) || this.get('email')\n    if (email)\n      creds.email = email\n\n    const tokenReg = this.get(`${nerfed}:_authToken`) ||\n      this.get(`${nerfed}:_authtoken`) ||\n      this.get(`${nerfed}:-authtoken`) ||\n      nerfed === nerfDart(this.get('registry')) && this.get('_authToken')\n\n    if (tokenReg) {\n      creds.token = tokenReg\n      return creds\n    }\n\n    const userReg = this.get(`${nerfed}:username`)\n    const passReg = this.get(`${nerfed}:_password`)\n    if (userReg && passReg) {\n      creds.username = userReg\n      creds.password = Buffer.from(passReg, 'base64').toString('utf8')\n      const auth = `${creds.username}:${creds.password}`\n      creds.auth = Buffer.from(auth, 'utf8').toString('base64')\n      return creds\n    }\n\n    const authReg = this.get(`${nerfed}:_auth`)\n    if (authReg) {\n      const authDecode = Buffer.from(authReg, 'base64').toString('utf8')\n      const authSplit = authDecode.split(':')\n      creds.username = authSplit.shift()\n      creds.password = authSplit.join(':')\n      creds.auth = authReg\n      return creds\n    }\n\n    // at this point, we can only use the values if the URI is the\n    // default registry.\n    const defaultNerf = nerfDart(this.get('registry'))\n    if (nerfed !== defaultNerf)\n      return creds\n\n    const userDef = this.get('username')\n    const passDef = this.get('_password')\n    if (userDef && passDef) {\n      creds.username = userDef\n      creds.password = Buffer.from(passDef, 'base64').toString('utf8')\n      const auth = `${creds.username}:${creds.password}`\n      creds.auth = Buffer.from(auth, 'utf8').toString('base64')\n      return creds\n    }\n\n    // Handle the old-style _auth=<base64> style for the default\n    // registry, if set.\n    const auth = this.get('_auth')\n    if (!auth)\n      return creds\n\n    const authDecode = Buffer.from(auth, 'base64').toString('utf8')\n    const authSplit = authDecode.split(':')\n    creds.username = authSplit.shift()\n    creds.password = authSplit.join(':')\n    creds.auth = auth\n    return creds\n  }\n\n  // set up the environment object we have with npm_config_* environs\n  // for all configs that are different from their default values, and\n  // set EDITOR and HOME.\n  setEnvs () { setEnvs(this) }\n}\n\nconst _data = Symbol('data')\nconst _raw = Symbol('raw')\nconst _loadError = Symbol('loadError')\nconst _source = Symbol('source')\nconst _valid = Symbol('valid')\nclass ConfigData {\n  constructor (parent) {\n    this[_data] = Object.create(parent && parent.data)\n    this[_source] = null\n    this[_loadError] = null\n    this[_raw] = null\n    this[_valid] = true\n  }\n\n  get data () {\n    return this[_data]\n  }\n\n  get valid () {\n    return this[_valid]\n  }\n\n  set source (s) {\n    if (this[_source])\n      throw new Error('cannot set ConfigData source more than once')\n    this[_source] = s\n  }\n  get source () { return this[_source] }\n\n  set loadError (e) {\n    if (this[_loadError] || this[_raw])\n      throw new Error('cannot set ConfigData loadError after load')\n    this[_loadError] = e\n  }\n  get loadError () { return this[_loadError] }\n\n  set raw (r) {\n    if (this[_raw] || this[_loadError])\n      throw new Error('cannot set ConfigData raw after load')\n    this[_raw] = r\n  }\n  get raw () { return this[_raw] }\n}\n\nmodule.exports = Config\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}