{"ast":null,"code":"module.exports = {\n  diffApply: diffApply,\n  jsonPatchPathConverter: jsonPatchPathConverter\n};\n\n/*\n  const obj1 = {a: 3, b: 5};\n  diffApply(obj1,\n    [\n      { \"op\": \"remove\", \"path\": ['b'] },\n      { \"op\": \"replace\", \"path\": ['a'], \"value\": 4 },\n      { \"op\": \"add\", \"path\": ['c'], \"value\": 5 }\n    ]\n  );\n  obj1; // {a: 4, c: 5}\n\n  // using converter to apply jsPatch standard paths\n  // see http://jsonpatch.com\n  import {diff, jsonPatchPathConverter} from 'just-diff'\n  const obj2 = {a: 3, b: 5};\n  diffApply(obj2, [\n    { \"op\": \"remove\", \"path\": '/b' },\n    { \"op\": \"replace\", \"path\": '/a', \"value\": 4 }\n    { \"op\": \"add\", \"path\": '/c', \"value\": 5 }\n  ], jsonPatchPathConverter);\n  obj2; // {a: 4, c: 5}\n\n  // arrays\n  const obj3 = {a: 4, b: [1, 2, 3]};\n  diffApply(obj3, [\n    { \"op\": \"replace\", \"path\": ['a'], \"value\": 3 }\n    { \"op\": \"replace\", \"path\": ['b', 2], \"value\": 4 }\n    { \"op\": \"add\", \"path\": ['b', 3], \"value\": 9 }\n  ]);\n  obj3; // {a: 3, b: [1, 2, 4, 9]}\n\n  // nested paths\n  const obj4 = {a: 4, b: {c: 3}};\n  diffApply(obj4, [\n    { \"op\": \"replace\", \"path\": ['a'], \"value\": 5 }\n    { \"op\": \"remove\", \"path\": ['b', 'c']}\n    { \"op\": \"add\", \"path\": ['b', 'd'], \"value\": 4 }\n  ]);\n  obj4; // {a: 5, b: {d: 4}}\n*/\n\nvar REMOVE = 'remove';\nvar REPLACE = 'replace';\nvar ADD = 'add';\nfunction diffApply(obj, diff, pathConverter) {\n  if (!obj || typeof obj != 'object') {\n    throw new Error('base object must be an object or an array');\n  }\n  if (!Array.isArray(diff)) {\n    throw new Error('diff must be an array');\n  }\n  var diffLength = diff.length;\n  for (var i = 0; i < diffLength; i++) {\n    var thisDiff = diff[i];\n    var subObject = obj;\n    var thisOp = thisDiff.op;\n    var thisPath = thisDiff.path;\n    if (pathConverter) {\n      thisPath = pathConverter(thisPath);\n      if (!Array.isArray(thisPath)) {\n        throw new Error('pathConverter must return an array');\n      }\n    } else {\n      if (!Array.isArray(thisPath)) {\n        throw new Error('diff path must be an array, consider supplying a path converter');\n      }\n    }\n    var pathCopy = thisPath.slice();\n    var lastProp = pathCopy.pop();\n    if (lastProp == null) {\n      return false;\n    }\n    var thisProp;\n    while ((thisProp = pathCopy.shift()) != null) {\n      if (!(thisProp in subObject)) {\n        subObject[thisProp] = {};\n      }\n      subObject = subObject[thisProp];\n    }\n    if (thisOp === REMOVE || thisOp === REPLACE) {\n      if (!subObject.hasOwnProperty(lastProp)) {\n        throw new Error(['expected to find property', thisDiff.path, 'in object', obj].join(' '));\n      }\n    }\n    if (thisOp === REMOVE) {\n      Array.isArray(subObject) ? subObject.splice(lastProp, 1) : delete subObject[lastProp];\n    }\n    if (thisOp === REPLACE || thisOp === ADD) {\n      subObject[lastProp] = thisDiff.value;\n    }\n  }\n  return subObject;\n}\nfunction jsonPatchPathConverter(stringPath) {\n  return stringPath.split('/').slice(1);\n}","map":{"version":3,"names":["module","exports","diffApply","jsonPatchPathConverter","REMOVE","REPLACE","ADD","obj","diff","pathConverter","Error","Array","isArray","diffLength","length","i","thisDiff","subObject","thisOp","op","thisPath","path","pathCopy","slice","lastProp","pop","thisProp","shift","hasOwnProperty","join","splice","value","stringPath","split"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/just-diff-apply/index.js"],"sourcesContent":["module.exports = {\n  diffApply: diffApply,\n  jsonPatchPathConverter: jsonPatchPathConverter,\n};\n\n/*\n  const obj1 = {a: 3, b: 5};\n  diffApply(obj1,\n    [\n      { \"op\": \"remove\", \"path\": ['b'] },\n      { \"op\": \"replace\", \"path\": ['a'], \"value\": 4 },\n      { \"op\": \"add\", \"path\": ['c'], \"value\": 5 }\n    ]\n  );\n  obj1; // {a: 4, c: 5}\n\n  // using converter to apply jsPatch standard paths\n  // see http://jsonpatch.com\n  import {diff, jsonPatchPathConverter} from 'just-diff'\n  const obj2 = {a: 3, b: 5};\n  diffApply(obj2, [\n    { \"op\": \"remove\", \"path\": '/b' },\n    { \"op\": \"replace\", \"path\": '/a', \"value\": 4 }\n    { \"op\": \"add\", \"path\": '/c', \"value\": 5 }\n  ], jsonPatchPathConverter);\n  obj2; // {a: 4, c: 5}\n\n  // arrays\n  const obj3 = {a: 4, b: [1, 2, 3]};\n  diffApply(obj3, [\n    { \"op\": \"replace\", \"path\": ['a'], \"value\": 3 }\n    { \"op\": \"replace\", \"path\": ['b', 2], \"value\": 4 }\n    { \"op\": \"add\", \"path\": ['b', 3], \"value\": 9 }\n  ]);\n  obj3; // {a: 3, b: [1, 2, 4, 9]}\n\n  // nested paths\n  const obj4 = {a: 4, b: {c: 3}};\n  diffApply(obj4, [\n    { \"op\": \"replace\", \"path\": ['a'], \"value\": 5 }\n    { \"op\": \"remove\", \"path\": ['b', 'c']}\n    { \"op\": \"add\", \"path\": ['b', 'd'], \"value\": 4 }\n  ]);\n  obj4; // {a: 5, b: {d: 4}}\n*/\n\nvar REMOVE = 'remove';\nvar REPLACE = 'replace';\nvar ADD = 'add';\n\nfunction diffApply(obj, diff, pathConverter) {\n  if (!obj || typeof obj != 'object') {\n    throw new Error('base object must be an object or an array');\n  }\n\n  if (!Array.isArray(diff)) {\n    throw new Error('diff must be an array');\n  }\n\n  var diffLength = diff.length;\n  for (var i = 0; i < diffLength; i++) {\n    var thisDiff = diff[i];\n    var subObject = obj;\n    var thisOp = thisDiff.op;\n    var thisPath = thisDiff.path;\n    if (pathConverter) {\n      thisPath = pathConverter(thisPath);\n      if (!Array.isArray(thisPath)) {\n        throw new Error('pathConverter must return an array');\n      }\n    } else {\n      if (!Array.isArray(thisPath)) {\n        throw new Error('diff path must be an array, consider supplying a path converter');\n      }\n    }\n    var pathCopy = thisPath.slice();\n    var lastProp = pathCopy.pop();\n    if (lastProp == null) {\n      return false;\n    }\n    var thisProp;\n    while (((thisProp = pathCopy.shift())) != null) {\n      if (!(thisProp in subObject)) {\n        subObject[thisProp] = {};\n      }\n      subObject = subObject[thisProp];\n    }\n    if (thisOp === REMOVE || thisOp === REPLACE) {\n      if (!subObject.hasOwnProperty(lastProp)) {\n        throw new Error(['expected to find property', thisDiff.path, 'in object', obj].join(' '));\n      }\n    }\n    if (thisOp === REMOVE) {\n      Array.isArray(subObject) ? subObject.splice(lastProp, 1) : delete subObject[lastProp];\n    }\n    if (thisOp === REPLACE || thisOp === ADD) {\n      subObject[lastProp] = thisDiff.value;\n    }\n  }\n  return subObject;\n}\n\nfunction jsonPatchPathConverter(stringPath) {\n  return stringPath.split('/').slice(1);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}