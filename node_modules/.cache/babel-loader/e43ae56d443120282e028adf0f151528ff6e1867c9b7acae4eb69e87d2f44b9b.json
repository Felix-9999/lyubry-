{"ast":null,"code":"const {\n  relative\n} = require('path');\nconst npa = require('npm-package-arg');\nconst pkgContents = require('@npmcli/installed-package-contents');\nconst pacote = require('pacote');\nconst {\n  tarCreateOptions\n} = pacote.DirFetcher;\nconst tar = require('tar');\n\n// returns a simplified tarball when reading files from node_modules folder,\n// thus avoiding running the prepare scripts and the extra logic from packlist\nconst nodeModulesTarball = (manifest, opts) => pkgContents({\n  path: manifest._resolved,\n  depth: 1\n}).then(files => files.map(file => relative(manifest._resolved, file))).then(files => tar.c(tarCreateOptions(manifest), files).concat());\nconst tarball = (manifest, opts) => {\n  const resolved = manifest._resolved;\n  const where = opts.where || process.cwd();\n  const fromNodeModules = npa(resolved).type === 'directory' && /node_modules[\\\\/](@[^\\\\/]+\\/)?[^\\\\/]+[\\\\/]?$/.test(relative(where, resolved));\n  if (fromNodeModules) return nodeModulesTarball(manifest, opts);\n  return pacote.tarball(manifest._resolved, opts);\n};\nmodule.exports = tarball;","map":{"version":3,"names":["relative","require","npa","pkgContents","pacote","tarCreateOptions","DirFetcher","tar","nodeModulesTarball","manifest","opts","path","_resolved","depth","then","files","map","file","c","concat","tarball","resolved","where","process","cwd","fromNodeModules","type","test","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/libnpmdiff/lib/tarball.js"],"sourcesContent":["const { relative } = require('path')\n\nconst npa = require('npm-package-arg')\nconst pkgContents = require('@npmcli/installed-package-contents')\nconst pacote = require('pacote')\nconst { tarCreateOptions } = pacote.DirFetcher\nconst tar = require('tar')\n\n// returns a simplified tarball when reading files from node_modules folder,\n// thus avoiding running the prepare scripts and the extra logic from packlist\nconst nodeModulesTarball = (manifest, opts) =>\n  pkgContents({ path: manifest._resolved, depth: 1 })\n    .then(files =>\n      files.map(file => relative(manifest._resolved, file))\n    )\n    .then(files =>\n      tar.c(tarCreateOptions(manifest), files).concat()\n    )\n\nconst tarball = (manifest, opts) => {\n  const resolved = manifest._resolved\n  const where = opts.where || process.cwd()\n\n  const fromNodeModules = npa(resolved).type === 'directory'\n    && /node_modules[\\\\/](@[^\\\\/]+\\/)?[^\\\\/]+[\\\\/]?$/.test(relative(where, resolved))\n\n  if (fromNodeModules)\n    return nodeModulesTarball(manifest, opts)\n\n  return pacote.tarball(manifest._resolved, opts)\n}\n\nmodule.exports = tarball\n"],"mappings":"AAAA,MAAM;EAAEA;AAAS,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAEpC,MAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACtC,MAAME,WAAW,GAAGF,OAAO,CAAC,oCAAoC,CAAC;AACjE,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAM;EAAEI;AAAiB,CAAC,GAAGD,MAAM,CAACE,UAAU;AAC9C,MAAMC,GAAG,GAAGN,OAAO,CAAC,KAAK,CAAC;;AAE1B;AACA;AACA,MAAMO,kBAAkB,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KACxCP,WAAW,CAAC;EAAEQ,IAAI,EAAEF,QAAQ,CAACG,SAAS;EAAEC,KAAK,EAAE;AAAE,CAAC,CAAC,CAChDC,IAAI,CAACC,KAAK,IACTA,KAAK,CAACC,GAAG,CAACC,IAAI,IAAIjB,QAAQ,CAACS,QAAQ,CAACG,SAAS,EAAEK,IAAI,CAAC,CACtD,CAAC,CACAH,IAAI,CAACC,KAAK,IACTR,GAAG,CAACW,CAAC,CAACb,gBAAgB,CAACI,QAAQ,CAAC,EAAEM,KAAK,CAAC,CAACI,MAAM,CAAC,CAClD,CAAC;AAEL,MAAMC,OAAO,GAAGA,CAACX,QAAQ,EAAEC,IAAI,KAAK;EAClC,MAAMW,QAAQ,GAAGZ,QAAQ,CAACG,SAAS;EACnC,MAAMU,KAAK,GAAGZ,IAAI,CAACY,KAAK,IAAIC,OAAO,CAACC,GAAG,CAAC,CAAC;EAEzC,MAAMC,eAAe,GAAGvB,GAAG,CAACmB,QAAQ,CAAC,CAACK,IAAI,KAAK,WAAW,IACrD,8CAA8C,CAACC,IAAI,CAAC3B,QAAQ,CAACsB,KAAK,EAAED,QAAQ,CAAC,CAAC;EAEnF,IAAII,eAAe,EACjB,OAAOjB,kBAAkB,CAACC,QAAQ,EAAEC,IAAI,CAAC;EAE3C,OAAON,MAAM,CAACgB,OAAO,CAACX,QAAQ,CAACG,SAAS,EAAEF,IAAI,CAAC;AACjD,CAAC;AAEDkB,MAAM,CAACC,OAAO,GAAGT,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}