{"ast":null,"code":"const log = require('npmlog');\nconst pacote = require('pacote');\nconst {\n  URL\n} = require('url');\nconst hostedFromMani = require('./utils/hosted-git-info-from-manifest.js');\nconst openUrl = require('./utils/open-url.js');\nconst BaseCommand = require('./base-command.js');\nclass Repo extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Open package repository page in the browser';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'repo';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['browser', 'workspace', 'workspaces'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['[<pkgname> [<pkgname> ...]]'];\n  }\n  exec(args, cb) {\n    this.repo(args).then(() => cb()).catch(cb);\n  }\n  execWorkspaces(args, filters, cb) {\n    this.repoWorkspaces(args, filters).then(() => cb()).catch(cb);\n  }\n  async repo(args) {\n    if (!args || !args.length) args = ['.'];\n    await Promise.all(args.map(pkg => this.get(pkg)));\n  }\n  async repoWorkspaces(args, filters) {\n    await this.setWorkspaces(filters);\n    return this.repo(this.workspacePaths);\n  }\n  async get(pkg) {\n    const opts = {\n      ...this.npm.flatOptions,\n      fullMetadata: true\n    };\n    const mani = await pacote.manifest(pkg, opts);\n    const r = mani.repository;\n    const rurl = !r ? null : typeof r === 'string' ? r : typeof r === 'object' && typeof r.url === 'string' ? r.url : null;\n    if (!rurl) {\n      throw Object.assign(new Error('no repository'), {\n        pkgid: pkg\n      });\n    }\n    const info = hostedFromMani(mani);\n    const url = info ? info.browse(mani.repository.directory) : unknownHostedUrl(rurl);\n    if (!url) {\n      throw Object.assign(new Error('no repository: could not get url'), {\n        pkgid: pkg\n      });\n    }\n    log.silly('docs', 'url', url);\n    await openUrl(this.npm, url, `${mani.name} repo available at the following URL`);\n  }\n}\nmodule.exports = Repo;\nconst unknownHostedUrl = url => {\n  try {\n    const {\n      protocol,\n      hostname,\n      pathname\n    } = new URL(url);\n\n    /* istanbul ignore next - URL ctor should prevent this */\n    if (!protocol || !hostname) return null;\n    const proto = /(git\\+)http:$/.test(protocol) ? 'http:' : 'https:';\n    const path = pathname.replace(/\\.git$/, '');\n    return `${proto}//${hostname}${path}`;\n  } catch (e) {\n    return null;\n  }\n};","map":{"version":3,"names":["log","require","pacote","URL","hostedFromMani","openUrl","BaseCommand","Repo","description","name","params","usage","exec","args","cb","repo","then","catch","execWorkspaces","filters","repoWorkspaces","length","Promise","all","map","pkg","get","setWorkspaces","workspacePaths","opts","npm","flatOptions","fullMetadata","mani","manifest","r","repository","rurl","url","Object","assign","Error","pkgid","info","browse","directory","unknownHostedUrl","silly","module","exports","protocol","hostname","pathname","proto","test","path","replace","e"],"sources":["C:/Users/Felo/node_modules/npm/lib/repo.js"],"sourcesContent":["const log = require('npmlog')\nconst pacote = require('pacote')\nconst { URL } = require('url')\n\nconst hostedFromMani = require('./utils/hosted-git-info-from-manifest.js')\nconst openUrl = require('./utils/open-url.js')\n\nconst BaseCommand = require('./base-command.js')\nclass Repo extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Open package repository page in the browser'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'repo'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['browser', 'workspace', 'workspaces']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['[<pkgname> [<pkgname> ...]]']\n  }\n\n  exec (args, cb) {\n    this.repo(args).then(() => cb()).catch(cb)\n  }\n\n  execWorkspaces (args, filters, cb) {\n    this.repoWorkspaces(args, filters).then(() => cb()).catch(cb)\n  }\n\n  async repo (args) {\n    if (!args || !args.length)\n      args = ['.']\n\n    await Promise.all(args.map(pkg => this.get(pkg)))\n  }\n\n  async repoWorkspaces (args, filters) {\n    await this.setWorkspaces(filters)\n    return this.repo(this.workspacePaths)\n  }\n\n  async get (pkg) {\n    const opts = { ...this.npm.flatOptions, fullMetadata: true }\n    const mani = await pacote.manifest(pkg, opts)\n\n    const r = mani.repository\n    const rurl = !r ? null\n      : typeof r === 'string' ? r\n      : typeof r === 'object' && typeof r.url === 'string' ? r.url\n      : null\n\n    if (!rurl) {\n      throw Object.assign(new Error('no repository'), {\n        pkgid: pkg,\n      })\n    }\n\n    const info = hostedFromMani(mani)\n    const url = info ?\n      info.browse(mani.repository.directory) : unknownHostedUrl(rurl)\n\n    if (!url) {\n      throw Object.assign(new Error('no repository: could not get url'), {\n        pkgid: pkg,\n      })\n    }\n\n    log.silly('docs', 'url', url)\n    await openUrl(this.npm, url, `${mani.name} repo available at the following URL`)\n  }\n}\nmodule.exports = Repo\n\nconst unknownHostedUrl = url => {\n  try {\n    const {\n      protocol,\n      hostname,\n      pathname,\n    } = new URL(url)\n\n    /* istanbul ignore next - URL ctor should prevent this */\n    if (!protocol || !hostname)\n      return null\n\n    const proto = /(git\\+)http:$/.test(protocol) ? 'http:' : 'https:'\n    const path = pathname.replace(/\\.git$/, '')\n    return `${proto}//${hostname}${path}`\n  } catch (e) {\n    return null\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}