{"ast":null,"code":"// given a starting node, what is the *deepest* target where name could go?\n// This is not on the Node class for the simple reason that we sometimes\n// need to check the deepest *potential* target for a Node that is not yet\n// added to the tree where we are checking.\nconst deepestNestingTarget = (start, name) => {\n  for (const target of start.ancestry()) {\n    // note: this will skip past the first target if edge is peer\n    if (target.isProjectRoot || !target.resolveParent || target.globalTop) {\n      return target;\n    }\n    const targetEdge = target.edgesOut.get(name);\n    if (!targetEdge || !targetEdge.peer) {\n      return target;\n    }\n  }\n};\nmodule.exports = deepestNestingTarget;","map":{"version":3,"names":["deepestNestingTarget","start","name","target","ancestry","isProjectRoot","resolveParent","globalTop","targetEdge","edgesOut","get","peer","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/arborist/lib/deepest-nesting-target.js"],"sourcesContent":["// given a starting node, what is the *deepest* target where name could go?\n// This is not on the Node class for the simple reason that we sometimes\n// need to check the deepest *potential* target for a Node that is not yet\n// added to the tree where we are checking.\nconst deepestNestingTarget = (start, name) => {\n  for (const target of start.ancestry()) {\n    // note: this will skip past the first target if edge is peer\n    if (target.isProjectRoot || !target.resolveParent || target.globalTop) {\n      return target\n    }\n    const targetEdge = target.edgesOut.get(name)\n    if (!targetEdge || !targetEdge.peer) {\n      return target\n    }\n  }\n}\n\nmodule.exports = deepestNestingTarget\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EAC5C,KAAK,MAAMC,MAAM,IAAIF,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAE;IACrC;IACA,IAAID,MAAM,CAACE,aAAa,IAAI,CAACF,MAAM,CAACG,aAAa,IAAIH,MAAM,CAACI,SAAS,EAAE;MACrE,OAAOJ,MAAM;IACf;IACA,MAAMK,UAAU,GAAGL,MAAM,CAACM,QAAQ,CAACC,GAAG,CAACR,IAAI,CAAC;IAC5C,IAAI,CAACM,UAAU,IAAI,CAACA,UAAU,CAACG,IAAI,EAAE;MACnC,OAAOR,MAAM;IACf;EACF;AACF,CAAC;AAEDS,MAAM,CAACC,OAAO,GAAGb,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}