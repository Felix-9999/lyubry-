{"ast":null,"code":"// given a manifest, try to get the hosted git info from it based on\n// repository (if a string) or repository.url (if an object)\n// returns null if it's not a valid repo, or not a known hosted repo\nconst hostedGitInfo = require('hosted-git-info');\nmodule.exports = mani => {\n  const r = mani.repository;\n  const rurl = !r ? null : typeof r === 'string' ? r : typeof r === 'object' && typeof r.url === 'string' ? r.url : null;\n\n  // hgi returns undefined sometimes, but let's always return null here\n  return rurl && hostedGitInfo.fromUrl(rurl.replace(/^git\\+/, '')) || null;\n};","map":{"version":3,"names":["hostedGitInfo","require","module","exports","mani","r","repository","rurl","url","fromUrl","replace"],"sources":["C:/Users/Felo/node_modules/npm/lib/utils/hosted-git-info-from-manifest.js"],"sourcesContent":["// given a manifest, try to get the hosted git info from it based on\n// repository (if a string) or repository.url (if an object)\n// returns null if it's not a valid repo, or not a known hosted repo\nconst hostedGitInfo = require('hosted-git-info')\nmodule.exports = mani => {\n  const r = mani.repository\n  const rurl = !r ? null\n    : typeof r === 'string' ? r\n    : typeof r === 'object' && typeof r.url === 'string' ? r.url\n    : null\n\n  // hgi returns undefined sometimes, but let's always return null here\n  return (rurl && hostedGitInfo.fromUrl(rurl.replace(/^git\\+/, ''))) || null\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAChDC,MAAM,CAACC,OAAO,GAAGC,IAAI,IAAI;EACvB,MAAMC,CAAC,GAAGD,IAAI,CAACE,UAAU;EACzB,MAAMC,IAAI,GAAG,CAACF,CAAC,GAAG,IAAI,GAClB,OAAOA,CAAC,KAAK,QAAQ,GAAGA,CAAC,GACzB,OAAOA,CAAC,KAAK,QAAQ,IAAI,OAAOA,CAAC,CAACG,GAAG,KAAK,QAAQ,GAAGH,CAAC,CAACG,GAAG,GAC1D,IAAI;;EAER;EACA,OAAQD,IAAI,IAAIP,aAAa,CAACS,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAK,IAAI;AAC5E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}