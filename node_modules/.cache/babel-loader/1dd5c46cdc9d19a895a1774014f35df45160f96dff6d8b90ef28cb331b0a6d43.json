{"ast":null,"code":"const runningProcs = new Set();\nlet handlersInstalled = false;\nconst forwardedSignals = ['SIGINT', 'SIGTERM'];\nconst handleSignal = signal => {\n  for (const proc of runningProcs) {\n    proc.kill(signal);\n  }\n};\nconst setupListeners = () => {\n  for (const signal of forwardedSignals) {\n    process.on(signal, handleSignal);\n  }\n  handlersInstalled = true;\n};\nconst cleanupListeners = () => {\n  if (runningProcs.size === 0) {\n    for (const signal of forwardedSignals) {\n      process.removeListener(signal, handleSignal);\n    }\n    handlersInstalled = false;\n  }\n};\nconst add = proc => {\n  runningProcs.add(proc);\n  if (!handlersInstalled) setupListeners();\n  proc.once('exit', () => {\n    runningProcs.delete(proc);\n    cleanupListeners();\n  });\n};\nmodule.exports = {\n  add,\n  handleSignal,\n  forwardedSignals\n};","map":{"version":3,"names":["runningProcs","Set","handlersInstalled","forwardedSignals","handleSignal","signal","proc","kill","setupListeners","process","on","cleanupListeners","size","removeListener","add","once","delete","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/run-script/lib/signal-manager.js"],"sourcesContent":["const runningProcs = new Set()\nlet handlersInstalled = false\n\nconst forwardedSignals = [\n  'SIGINT',\n  'SIGTERM'\n]\n\nconst handleSignal = signal => {\n  for (const proc of runningProcs) {\n    proc.kill(signal)\n  }\n}\n\nconst setupListeners = () => {\n  for (const signal of forwardedSignals) {\n    process.on(signal, handleSignal)\n  }\n  handlersInstalled = true\n}\n\nconst cleanupListeners = () => {\n  if (runningProcs.size === 0) {\n    for (const signal of forwardedSignals) {\n      process.removeListener(signal, handleSignal)\n    }\n    handlersInstalled = false\n  }\n}\n\nconst add = proc => {\n  runningProcs.add(proc)\n  if (!handlersInstalled)\n    setupListeners()\n\n  proc.once('exit', () => {\n    runningProcs.delete(proc)\n    cleanupListeners()\n  })\n}\n\nmodule.exports = {\n  add,\n  handleSignal,\n  forwardedSignals\n}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC9B,IAAIC,iBAAiB,GAAG,KAAK;AAE7B,MAAMC,gBAAgB,GAAG,CACvB,QAAQ,EACR,SAAS,CACV;AAED,MAAMC,YAAY,GAAGC,MAAM,IAAI;EAC7B,KAAK,MAAMC,IAAI,IAAIN,YAAY,EAAE;IAC/BM,IAAI,CAACC,IAAI,CAACF,MAAM,CAAC;EACnB;AACF,CAAC;AAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;EAC3B,KAAK,MAAMH,MAAM,IAAIF,gBAAgB,EAAE;IACrCM,OAAO,CAACC,EAAE,CAACL,MAAM,EAAED,YAAY,CAAC;EAClC;EACAF,iBAAiB,GAAG,IAAI;AAC1B,CAAC;AAED,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,IAAIX,YAAY,CAACY,IAAI,KAAK,CAAC,EAAE;IAC3B,KAAK,MAAMP,MAAM,IAAIF,gBAAgB,EAAE;MACrCM,OAAO,CAACI,cAAc,CAACR,MAAM,EAAED,YAAY,CAAC;IAC9C;IACAF,iBAAiB,GAAG,KAAK;EAC3B;AACF,CAAC;AAED,MAAMY,GAAG,GAAGR,IAAI,IAAI;EAClBN,YAAY,CAACc,GAAG,CAACR,IAAI,CAAC;EACtB,IAAI,CAACJ,iBAAiB,EACpBM,cAAc,CAAC,CAAC;EAElBF,IAAI,CAACS,IAAI,CAAC,MAAM,EAAE,MAAM;IACtBf,YAAY,CAACgB,MAAM,CAACV,IAAI,CAAC;IACzBK,gBAAgB,CAAC,CAAC;EACpB,CAAC,CAAC;AACJ,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAG;EACfJ,GAAG;EACHV,YAAY;EACZD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}