{"ast":null,"code":"module.exports = init;\nmodule.exports.yes = yes;\nvar PZ = require('promzard').PromZard;\nvar path = require('path');\nvar def = require.resolve('./default-input.js');\nvar fs = require('fs');\nvar semver = require('semver');\nvar read = require('read');\n\n// to validate the data object at the end as a worthwhile package\n// and assign default values for things.\nvar readJson = require('read-package-json');\nfunction yes(conf) {\n  return !!(conf.get('yes') || conf.get('y') || conf.get('force') || conf.get('f'));\n}\nfunction init(dir, input, config, cb) {\n  if (typeof config === 'function') {\n    cb = config;\n    config = {};\n  }\n\n  // accept either a plain-jane object, or a config object\n  // with a \"get\" method.\n  if (typeof config.get !== 'function') {\n    var data = config;\n    config = {\n      get: function (k) {\n        return data[k];\n      },\n      toJSON: function () {\n        return data;\n      }\n    };\n  }\n  var packageFile = path.resolve(dir, 'package.json');\n  input = path.resolve(input);\n  var pkg;\n  var ctx = {\n    yes: yes(config)\n  };\n  var es = readJson.extraSet;\n  readJson.extraSet = es.filter(function (fn) {\n    return fn.name !== 'authors' && fn.name !== 'mans';\n  });\n  readJson(packageFile, function (er, d) {\n    readJson.extraSet = es;\n    if (er) {\n      pkg = {};\n    } else {\n      pkg = d;\n    }\n    ctx.filename = packageFile;\n    ctx.dirname = path.dirname(packageFile);\n    ctx.basename = path.basename(ctx.dirname);\n    if (!pkg.version || !semver.valid(pkg.version)) {\n      delete pkg.version;\n    }\n    ctx.package = pkg;\n    ctx.config = config || {};\n\n    // make sure that the input is valid.\n    // if not, use the default\n    var pz = new PZ(input, ctx);\n    pz.backupFile = def;\n    pz.on('error', cb);\n    pz.on('data', function (data) {\n      Object.keys(data).forEach(function (k) {\n        if (data[k] !== undefined && data[k] !== null) {\n          pkg[k] = data[k];\n        }\n      });\n\n      // only do a few of these.\n      // no need for mans or contributors if they're in the files\n      var es = readJson.extraSet;\n      readJson.extraSet = es.filter(function (fn) {\n        return fn.name !== 'authors' && fn.name !== 'mans';\n      });\n      readJson.extras(packageFile, pkg, function (er, pkg) {\n        if (er) {\n          return cb(er, pkg);\n        }\n        readJson.extraSet = es;\n        pkg = unParsePeople(pkg);\n        // no need for the readme now.\n        delete pkg.readme;\n        delete pkg.readmeFilename;\n\n        // really don't want to have this lying around in the file\n        delete pkg._id;\n\n        // ditto\n        delete pkg.gitHead;\n\n        // if the repo is empty, remove it.\n        if (!pkg.repository) {\n          delete pkg.repository;\n        }\n\n        // readJson filters out empty descriptions, but init-package-json\n        // traditionally leaves them alone\n        if (!pkg.description) {\n          pkg.description = data.description;\n        }\n        var d = JSON.stringify(updateDeps(pkg), null, 2) + '\\n';\n        function write(yes) {\n          fs.writeFile(packageFile, d, 'utf8', function (er) {\n            if (!er && yes && !config.get('silent')) {\n              console.log('Wrote to %s:\\n\\n%s\\n', packageFile, d);\n            }\n            return cb(er, pkg);\n          });\n        }\n        if (ctx.yes) {\n          return write(true);\n        }\n        console.log('About to write to %s:\\n\\n%s\\n', packageFile, d);\n        read({\n          prompt: 'Is this OK? ',\n          default: 'yes'\n        }, function (er, ok) {\n          if (er) {\n            return cb(er);\n          }\n          if (!ok || ok.toLowerCase().charAt(0) !== 'y') {\n            console.log('Aborted.');\n          } else {\n            return write();\n          }\n        });\n      });\n    });\n  });\n}\nfunction updateDeps(depsData) {\n  // optionalDependencies don't need to be repeated in two places\n  if (depsData.dependencies) {\n    if (depsData.optionalDependencies) {\n      for (const name of Object.keys(depsData.optionalDependencies)) {\n        delete depsData.dependencies[name];\n      }\n    }\n    if (Object.keys(depsData.dependencies).length === 0) {\n      delete depsData.dependencies;\n    }\n  }\n  return depsData;\n}\n\n// turn the objects into somewhat more humane strings.\nfunction unParsePeople(data) {\n  if (data.author) {\n    data.author = unParsePerson(data.author);\n  }\n  ['maintainers', 'contributors'].forEach(function (set) {\n    if (!Array.isArray(data[set])) {\n      return;\n    }\n    data[set] = data[set].map(unParsePerson);\n  });\n  return data;\n}\nfunction unParsePerson(person) {\n  if (typeof person === 'string') {\n    return person;\n  }\n  var name = person.name || '';\n  var u = person.url || person.web;\n  var url = u ? ' (' + u + ')' : '';\n  var e = person.email || person.mail;\n  var email = e ? ' <' + e + '>' : '';\n  return name + email + url;\n}","map":{"version":3,"names":["module","exports","init","yes","PZ","require","PromZard","path","def","resolve","fs","semver","read","readJson","conf","get","dir","input","config","cb","data","k","toJSON","packageFile","pkg","ctx","es","extraSet","filter","fn","name","er","d","filename","dirname","basename","version","valid","package","pz","backupFile","on","Object","keys","forEach","undefined","extras","unParsePeople","readme","readmeFilename","_id","gitHead","repository","description","JSON","stringify","updateDeps","write","writeFile","console","log","prompt","default","ok","toLowerCase","charAt","depsData","dependencies","optionalDependencies","length","author","unParsePerson","set","Array","isArray","map","person","u","url","web","e","email","mail"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/init-package-json/lib/init-package-json.js"],"sourcesContent":["\nmodule.exports = init\nmodule.exports.yes = yes\n\nvar PZ = require('promzard').PromZard\nvar path = require('path')\nvar def = require.resolve('./default-input.js')\n\nvar fs = require('fs')\nvar semver = require('semver')\nvar read = require('read')\n\n// to validate the data object at the end as a worthwhile package\n// and assign default values for things.\nvar readJson = require('read-package-json')\n\nfunction yes (conf) {\n  return !!(\n    conf.get('yes') || conf.get('y') ||\n    conf.get('force') || conf.get('f')\n  )\n}\n\nfunction init (dir, input, config, cb) {\n  if (typeof config === 'function') {\n    cb = config\n    config = {}\n  }\n\n  // accept either a plain-jane object, or a config object\n  // with a \"get\" method.\n  if (typeof config.get !== 'function') {\n    var data = config\n    config = {\n      get: function (k) {\n        return data[k]\n      },\n      toJSON: function () {\n        return data\n      },\n    }\n  }\n\n  var packageFile = path.resolve(dir, 'package.json')\n  input = path.resolve(input)\n  var pkg\n  var ctx = { yes: yes(config) }\n\n  var es = readJson.extraSet\n  readJson.extraSet = es.filter(function (fn) {\n    return fn.name !== 'authors' && fn.name !== 'mans'\n  })\n  readJson(packageFile, function (er, d) {\n    readJson.extraSet = es\n\n    if (er) {\n      pkg = {}\n    } else {\n      pkg = d\n    }\n\n    ctx.filename = packageFile\n    ctx.dirname = path.dirname(packageFile)\n    ctx.basename = path.basename(ctx.dirname)\n    if (!pkg.version || !semver.valid(pkg.version)) {\n      delete pkg.version\n    }\n\n    ctx.package = pkg\n    ctx.config = config || {}\n\n    // make sure that the input is valid.\n    // if not, use the default\n    var pz = new PZ(input, ctx)\n    pz.backupFile = def\n    pz.on('error', cb)\n    pz.on('data', function (data) {\n      Object.keys(data).forEach(function (k) {\n        if (data[k] !== undefined && data[k] !== null) {\n          pkg[k] = data[k]\n        }\n      })\n\n      // only do a few of these.\n      // no need for mans or contributors if they're in the files\n      var es = readJson.extraSet\n      readJson.extraSet = es.filter(function (fn) {\n        return fn.name !== 'authors' && fn.name !== 'mans'\n      })\n      readJson.extras(packageFile, pkg, function (er, pkg) {\n        if (er) {\n          return cb(er, pkg)\n        }\n        readJson.extraSet = es\n        pkg = unParsePeople(pkg)\n        // no need for the readme now.\n        delete pkg.readme\n        delete pkg.readmeFilename\n\n        // really don't want to have this lying around in the file\n        delete pkg._id\n\n        // ditto\n        delete pkg.gitHead\n\n        // if the repo is empty, remove it.\n        if (!pkg.repository) {\n          delete pkg.repository\n        }\n\n        // readJson filters out empty descriptions, but init-package-json\n        // traditionally leaves them alone\n        if (!pkg.description) {\n          pkg.description = data.description\n        }\n\n        var d = JSON.stringify(updateDeps(pkg), null, 2) + '\\n'\n        function write (yes) {\n          fs.writeFile(packageFile, d, 'utf8', function (er) {\n            if (!er && yes && !config.get('silent')) {\n              console.log('Wrote to %s:\\n\\n%s\\n', packageFile, d)\n            }\n            return cb(er, pkg)\n          })\n        }\n        if (ctx.yes) {\n          return write(true)\n        }\n        console.log('About to write to %s:\\n\\n%s\\n', packageFile, d)\n        read({prompt: 'Is this OK? ', default: 'yes'}, function (er, ok) {\n          if (er) {\n            return cb(er)\n          }\n          if (!ok || ok.toLowerCase().charAt(0) !== 'y') {\n            console.log('Aborted.')\n          } else {\n            return write()\n          }\n        })\n      })\n    })\n  })\n}\n\nfunction updateDeps (depsData) {\n  // optionalDependencies don't need to be repeated in two places\n  if (depsData.dependencies) {\n    if (depsData.optionalDependencies) {\n      for (const name of Object.keys(depsData.optionalDependencies)) {\n        delete depsData.dependencies[name]\n      }\n    }\n    if (Object.keys(depsData.dependencies).length === 0) {\n      delete depsData.dependencies\n    }\n  }\n\n  return depsData\n}\n\n// turn the objects into somewhat more humane strings.\nfunction unParsePeople (data) {\n  if (data.author) {\n    data.author = unParsePerson(data.author)\n  }['maintainers', 'contributors'].forEach(function (set) {\n    if (!Array.isArray(data[set])) {\n      return\n    }\n    data[set] = data[set].map(unParsePerson)\n  })\n  return data\n}\n\nfunction unParsePerson (person) {\n  if (typeof person === 'string') {\n    return person\n  }\n  var name = person.name || ''\n  var u = person.url || person.web\n  var url = u ? (' (' + u + ')') : ''\n  var e = person.email || person.mail\n  var email = e ? (' <' + e + '>') : ''\n  return name + email + url\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}