{"ast":null,"code":"const makeSpawnArgs = require('./make-spawn-args.js');\nconst promiseSpawn = require('@npmcli/promise-spawn');\nconst packageEnvs = require('./package-envs.js');\nconst {\n  isNodeGypPackage,\n  defaultGypInstallScript\n} = require('@npmcli/node-gyp');\nconst signalManager = require('./signal-manager.js');\nconst isServerPackage = require('./is-server-package.js');\n\n// you wouldn't like me when I'm angry...\nconst bruce = (id, event, cmd) => `\\n> ${id ? id + ' ' : ''}${event}\\n> ${cmd.trim().replace(/\\n/g, '\\n> ')}\\n`;\nconst runScriptPkg = async options => {\n  const {\n    event,\n    path,\n    scriptShell,\n    env = {},\n    stdio = 'pipe',\n    pkg,\n    args = [],\n    stdioString = false,\n    // note: only used when stdio:inherit\n    banner = true,\n    // how long to wait for a process.kill signal\n    // only exposed here so that we can make the test go a bit faster.\n    signalTimeout = 500\n  } = options;\n  const {\n    scripts = {},\n    gypfile\n  } = pkg;\n  let cmd = null;\n  if (options.cmd) cmd = options.cmd;else if (pkg.scripts && pkg.scripts[event]) cmd = pkg.scripts[event] + args.map(a => ` ${JSON.stringify(a)}`).join('');else if (\n  // If there is no preinstall or install script, default to rebuilding node-gyp packages.\n  event === 'install' && !scripts.install && !scripts.preinstall && gypfile !== false && (await isNodeGypPackage(path))) cmd = defaultGypInstallScript;else if (event === 'start' && (await isServerPackage(path))) cmd = 'node server.js' + args.map(a => ` ${JSON.stringify(a)}`).join('');\n  if (!cmd) return {\n    code: 0,\n    signal: null\n  };\n  if (stdio === 'inherit' && banner !== false) {\n    // we're dumping to the parent's stdout, so print the banner\n    console.log(bruce(pkg._id, event, cmd));\n  }\n  const p = promiseSpawn(...makeSpawnArgs({\n    event,\n    path,\n    scriptShell,\n    env: packageEnvs(env, pkg),\n    stdio,\n    cmd,\n    stdioString\n  }), {\n    event,\n    script: cmd,\n    pkgid: pkg._id,\n    path\n  });\n  if (stdio === 'inherit') signalManager.add(p.process);\n  if (p.stdin) p.stdin.end();\n  return p.catch(er => {\n    const {\n      signal\n    } = er;\n    if (stdio === 'inherit' && signal) {\n      process.kill(process.pid, signal);\n      // just in case we don't die, reject after 500ms\n      // this also keeps the node process open long enough to actually\n      // get the signal, rather than terminating gracefully.\n      return new Promise((res, rej) => setTimeout(() => rej(er), signalTimeout));\n    } else throw er;\n  });\n};\nmodule.exports = runScriptPkg;","map":{"version":3,"names":["makeSpawnArgs","require","promiseSpawn","packageEnvs","isNodeGypPackage","defaultGypInstallScript","signalManager","isServerPackage","bruce","id","event","cmd","trim","replace","runScriptPkg","options","path","scriptShell","env","stdio","pkg","args","stdioString","banner","signalTimeout","scripts","gypfile","map","a","JSON","stringify","join","install","preinstall","code","signal","console","log","_id","p","script","pkgid","add","process","stdin","end","catch","er","kill","pid","Promise","res","rej","setTimeout","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/run-script/lib/run-script-pkg.js"],"sourcesContent":["const makeSpawnArgs = require('./make-spawn-args.js')\nconst promiseSpawn = require('@npmcli/promise-spawn')\nconst packageEnvs = require('./package-envs.js')\nconst { isNodeGypPackage, defaultGypInstallScript } = require('@npmcli/node-gyp')\nconst signalManager = require('./signal-manager.js')\nconst isServerPackage = require('./is-server-package.js')\n\n// you wouldn't like me when I'm angry...\nconst bruce = (id, event, cmd) =>\n  `\\n> ${id ? id + ' ' : ''}${event}\\n> ${cmd.trim().replace(/\\n/g, '\\n> ')}\\n`\n\nconst runScriptPkg = async options => {\n  const {\n    event,\n    path,\n    scriptShell,\n    env = {},\n    stdio = 'pipe',\n    pkg,\n    args = [],\n    stdioString = false,\n    // note: only used when stdio:inherit\n    banner = true,\n    // how long to wait for a process.kill signal\n    // only exposed here so that we can make the test go a bit faster.\n    signalTimeout = 500,\n  } = options\n\n  const {scripts = {}, gypfile} = pkg\n  let cmd = null\n  if (options.cmd)\n    cmd = options.cmd\n  else if (pkg.scripts && pkg.scripts[event])\n    cmd = pkg.scripts[event] + args.map(a => ` ${JSON.stringify(a)}`).join('')\n  else if ( // If there is no preinstall or install script, default to rebuilding node-gyp packages.\n    event === 'install' &&\n    !scripts.install &&\n    !scripts.preinstall &&\n    gypfile !== false &&\n    await isNodeGypPackage(path)\n  )\n    cmd = defaultGypInstallScript\n  else if (event === 'start' && await isServerPackage(path))\n    cmd = 'node server.js' + args.map(a => ` ${JSON.stringify(a)}`).join('')\n\n  if (!cmd)\n    return { code: 0, signal: null }\n\n  if (stdio === 'inherit' && banner !== false) {\n    // we're dumping to the parent's stdout, so print the banner\n    console.log(bruce(pkg._id, event, cmd))\n  }\n\n  const p = promiseSpawn(...makeSpawnArgs({\n    event,\n    path,\n    scriptShell,\n    env: packageEnvs(env, pkg),\n    stdio,\n    cmd,\n    stdioString,\n  }), {\n    event,\n    script: cmd,\n    pkgid: pkg._id,\n    path,\n  })\n\n  if (stdio === 'inherit')\n    signalManager.add(p.process)\n\n  if (p.stdin)\n    p.stdin.end()\n\n  return p.catch(er => {\n    const { signal } = er\n    if (stdio === 'inherit' && signal) {\n      process.kill(process.pid, signal)\n      // just in case we don't die, reject after 500ms\n      // this also keeps the node process open long enough to actually\n      // get the signal, rather than terminating gracefully.\n      return new Promise((res, rej) => setTimeout(() => rej(er), signalTimeout))\n    } else\n      throw er\n  })\n}\n\nmodule.exports = runScriptPkg\n"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAMC,YAAY,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACrD,MAAME,WAAW,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAChD,MAAM;EAAEG,gBAAgB;EAAEC;AAAwB,CAAC,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;AACjF,MAAMK,aAAa,GAAGL,OAAO,CAAC,qBAAqB,CAAC;AACpD,MAAMM,eAAe,GAAGN,OAAO,CAAC,wBAAwB,CAAC;;AAEzD;AACA,MAAMO,KAAK,GAAGA,CAACC,EAAE,EAAEC,KAAK,EAAEC,GAAG,KAC3B,OAAOF,EAAE,GAAGA,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGC,KAAK,OAAOC,GAAG,CAACC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI;AAE/E,MAAMC,YAAY,GAAG,MAAMC,OAAO,IAAI;EACpC,MAAM;IACJL,KAAK;IACLM,IAAI;IACJC,WAAW;IACXC,GAAG,GAAG,CAAC,CAAC;IACRC,KAAK,GAAG,MAAM;IACdC,GAAG;IACHC,IAAI,GAAG,EAAE;IACTC,WAAW,GAAG,KAAK;IACnB;IACAC,MAAM,GAAG,IAAI;IACb;IACA;IACAC,aAAa,GAAG;EAClB,CAAC,GAAGT,OAAO;EAEX,MAAM;IAACU,OAAO,GAAG,CAAC,CAAC;IAAEC;EAAO,CAAC,GAAGN,GAAG;EACnC,IAAIT,GAAG,GAAG,IAAI;EACd,IAAII,OAAO,CAACJ,GAAG,EACbA,GAAG,GAAGI,OAAO,CAACJ,GAAG,MACd,IAAIS,GAAG,CAACK,OAAO,IAAIL,GAAG,CAACK,OAAO,CAACf,KAAK,CAAC,EACxCC,GAAG,GAAGS,GAAG,CAACK,OAAO,CAACf,KAAK,CAAC,GAAGW,IAAI,CAACM,GAAG,CAACC,CAAC,IAAI,IAAIC,IAAI,CAACC,SAAS,CAACF,CAAC,CAAC,EAAE,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC,MACvE;EAAK;EACRrB,KAAK,KAAK,SAAS,IACnB,CAACe,OAAO,CAACO,OAAO,IAChB,CAACP,OAAO,CAACQ,UAAU,IACnBP,OAAO,KAAK,KAAK,KACjB,MAAMtB,gBAAgB,CAACY,IAAI,CAAC,GAE5BL,GAAG,GAAGN,uBAAuB,MAC1B,IAAIK,KAAK,KAAK,OAAO,KAAI,MAAMH,eAAe,CAACS,IAAI,CAAC,GACvDL,GAAG,GAAG,gBAAgB,GAAGU,IAAI,CAACM,GAAG,CAACC,CAAC,IAAI,IAAIC,IAAI,CAACC,SAAS,CAACF,CAAC,CAAC,EAAE,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC;EAE1E,IAAI,CAACpB,GAAG,EACN,OAAO;IAAEuB,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAK,CAAC;EAElC,IAAIhB,KAAK,KAAK,SAAS,IAAII,MAAM,KAAK,KAAK,EAAE;IAC3C;IACAa,OAAO,CAACC,GAAG,CAAC7B,KAAK,CAACY,GAAG,CAACkB,GAAG,EAAE5B,KAAK,EAAEC,GAAG,CAAC,CAAC;EACzC;EAEA,MAAM4B,CAAC,GAAGrC,YAAY,CAAC,GAAGF,aAAa,CAAC;IACtCU,KAAK;IACLM,IAAI;IACJC,WAAW;IACXC,GAAG,EAAEf,WAAW,CAACe,GAAG,EAAEE,GAAG,CAAC;IAC1BD,KAAK;IACLR,GAAG;IACHW;EACF,CAAC,CAAC,EAAE;IACFZ,KAAK;IACL8B,MAAM,EAAE7B,GAAG;IACX8B,KAAK,EAAErB,GAAG,CAACkB,GAAG;IACdtB;EACF,CAAC,CAAC;EAEF,IAAIG,KAAK,KAAK,SAAS,EACrBb,aAAa,CAACoC,GAAG,CAACH,CAAC,CAACI,OAAO,CAAC;EAE9B,IAAIJ,CAAC,CAACK,KAAK,EACTL,CAAC,CAACK,KAAK,CAACC,GAAG,CAAC,CAAC;EAEf,OAAON,CAAC,CAACO,KAAK,CAACC,EAAE,IAAI;IACnB,MAAM;MAAEZ;IAAO,CAAC,GAAGY,EAAE;IACrB,IAAI5B,KAAK,KAAK,SAAS,IAAIgB,MAAM,EAAE;MACjCQ,OAAO,CAACK,IAAI,CAACL,OAAO,CAACM,GAAG,EAAEd,MAAM,CAAC;MACjC;MACA;MACA;MACA,OAAO,IAAIe,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKC,UAAU,CAAC,MAAMD,GAAG,CAACL,EAAE,CAAC,EAAEvB,aAAa,CAAC,CAAC;IAC5E,CAAC,MACC,MAAMuB,EAAE;EACZ,CAAC,CAAC;AACJ,CAAC;AAEDO,MAAM,CAACC,OAAO,GAAGzC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}