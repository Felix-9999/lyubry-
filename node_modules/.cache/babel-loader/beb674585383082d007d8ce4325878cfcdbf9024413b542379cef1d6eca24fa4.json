{"ast":null,"code":"const git = require('@npmcli/git');\nmodule.exports = async (version, opts) => {\n  const {\n    signGitTag,\n    allowSameVersion,\n    tagVersionPrefix,\n    message\n  } = opts;\n  const tag = `${tagVersionPrefix}${version}`;\n  const flags = ['-'];\n  if (signGitTag) {\n    flags.push('s');\n  }\n  if (allowSameVersion) {\n    flags.push('f');\n  }\n  flags.push('m');\n  return git.spawn(['tag', flags.join(''), message.replace(/%s/g, version), tag], opts);\n};","map":{"version":3,"names":["git","require","module","exports","version","opts","signGitTag","allowSameVersion","tagVersionPrefix","message","tag","flags","push","spawn","join","replace"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/libnpmversion/lib/tag.js"],"sourcesContent":["const git = require('@npmcli/git')\n\nmodule.exports = async (version, opts) => {\n  const {\n    signGitTag,\n    allowSameVersion,\n    tagVersionPrefix,\n    message\n  } = opts\n\n  const tag = `${tagVersionPrefix}${version}`\n  const flags = ['-']\n\n  if (signGitTag) {\n    flags.push('s')\n  }\n\n  if (allowSameVersion) {\n    flags.push('f')\n  }\n\n  flags.push('m')\n\n  return git.spawn([\n    'tag',\n    flags.join(''),\n    message.replace(/%s/g, version),\n    tag\n  ], opts)\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,aAAa,CAAC;AAElCC,MAAM,CAACC,OAAO,GAAG,OAAOC,OAAO,EAAEC,IAAI,KAAK;EACxC,MAAM;IACJC,UAAU;IACVC,gBAAgB;IAChBC,gBAAgB;IAChBC;EACF,CAAC,GAAGJ,IAAI;EAER,MAAMK,GAAG,GAAG,GAAGF,gBAAgB,GAAGJ,OAAO,EAAE;EAC3C,MAAMO,KAAK,GAAG,CAAC,GAAG,CAAC;EAEnB,IAAIL,UAAU,EAAE;IACdK,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC;EACjB;EAEA,IAAIL,gBAAgB,EAAE;IACpBI,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC;EACjB;EAEAD,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC;EAEf,OAAOZ,GAAG,CAACa,KAAK,CAAC,CACf,KAAK,EACLF,KAAK,CAACG,IAAI,CAAC,EAAE,CAAC,EACdL,OAAO,CAACM,OAAO,CAAC,KAAK,EAAEX,OAAO,CAAC,EAC/BM,GAAG,CACJ,EAAEL,IAAI,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}