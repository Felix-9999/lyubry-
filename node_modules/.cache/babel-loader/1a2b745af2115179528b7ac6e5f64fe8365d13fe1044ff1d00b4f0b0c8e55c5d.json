{"ast":null,"code":"// return the description of the valid values of a field\n// returns a string for one thing, or an array of descriptions\nconst typeDefs = require('./type-defs.js');\nconst typeDescription = t => {\n  if (!t || typeof t !== 'function' && typeof t !== 'object') return t;\n  if (Array.isArray(t)) return t.map(t => typeDescription(t));\n  for (const {\n    type,\n    description\n  } of Object.values(typeDefs)) {\n    if (type === t) return description || type;\n  }\n  return t;\n};\nmodule.exports = t => [].concat(typeDescription(t)).filter(t => t !== undefined);","map":{"version":3,"names":["typeDefs","require","typeDescription","t","Array","isArray","map","type","description","Object","values","module","exports","concat","filter","undefined"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/config/lib/type-description.js"],"sourcesContent":["// return the description of the valid values of a field\n// returns a string for one thing, or an array of descriptions\nconst typeDefs = require('./type-defs.js')\nconst typeDescription = t => {\n  if (!t || typeof t !== 'function' && typeof t !== 'object')\n    return t\n\n  if (Array.isArray(t))\n    return t.map(t => typeDescription(t))\n\n  for (const { type, description } of Object.values(typeDefs)) {\n    if (type === t)\n      return description || type\n  }\n\n  return t\n}\nmodule.exports = t => [].concat(typeDescription(t)).filter(t => t !== undefined)\n"],"mappings":"AAAA;AACA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC1C,MAAMC,eAAe,GAAGC,CAAC,IAAI;EAC3B,IAAI,CAACA,CAAC,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAI,OAAOA,CAAC,KAAK,QAAQ,EACxD,OAAOA,CAAC;EAEV,IAAIC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,EAClB,OAAOA,CAAC,CAACG,GAAG,CAACH,CAAC,IAAID,eAAe,CAACC,CAAC,CAAC,CAAC;EAEvC,KAAK,MAAM;IAAEI,IAAI;IAAEC;EAAY,CAAC,IAAIC,MAAM,CAACC,MAAM,CAACV,QAAQ,CAAC,EAAE;IAC3D,IAAIO,IAAI,KAAKJ,CAAC,EACZ,OAAOK,WAAW,IAAID,IAAI;EAC9B;EAEA,OAAOJ,CAAC;AACV,CAAC;AACDQ,MAAM,CAACC,OAAO,GAAGT,CAAC,IAAI,EAAE,CAACU,MAAM,CAACX,eAAe,CAACC,CAAC,CAAC,CAAC,CAACW,MAAM,CAACX,CAAC,IAAIA,CAAC,KAAKY,SAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}