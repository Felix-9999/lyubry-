{"ast":null,"code":"const Fetcher = require('./fetcher.js');\nconst FileFetcher = require('./file.js');\nconst cacache = require('cacache');\nconst Minipass = require('minipass');\nconst {\n  promisify\n} = require('util');\nconst readPackageJson = require('read-package-json-fast');\nconst tarCreateOptions = require('./util/tar-create-options.js');\nconst packlist = require('npm-packlist');\nconst tar = require('tar');\nconst _prepareDir = Symbol('_prepareDir');\nconst {\n  resolve\n} = require('path');\nconst runScript = require('@npmcli/run-script');\nconst _tarballFromResolved = Symbol.for('pacote.Fetcher._tarballFromResolved');\nclass DirFetcher extends Fetcher {\n  constructor(spec, opts) {\n    super(spec, opts);\n    // just the fully resolved filename\n    this.resolved = this.spec.fetchSpec;\n  }\n\n  // exposes tarCreateOptions as public API\n  static tarCreateOptions(manifest) {\n    return tarCreateOptions(manifest);\n  }\n  get types() {\n    return ['directory'];\n  }\n  [_prepareDir]() {\n    return this.manifest().then(mani => {\n      if (!mani.scripts || !mani.scripts.prepare) return;\n\n      // we *only* run prepare.\n      // pre/post-pack is run by the npm CLI for publish and pack,\n      // but this function is *also* run when installing git deps\n      const stdio = this.opts.foregroundScripts ? 'inherit' : 'pipe';\n\n      // hide the banner if loglevel is silent, or if prepare running\n      // in the background.\n      const banner = this.opts.log && this.opts.log.level === 'silent' ? false : stdio === 'inherit';\n      return runScript({\n        pkg: mani,\n        event: 'prepare',\n        path: this.resolved,\n        stdioString: true,\n        stdio,\n        banner,\n        env: {\n          npm_package_resolved: this.resolved,\n          npm_package_integrity: this.integrity,\n          npm_package_json: resolve(this.resolved, 'package.json')\n        }\n      });\n    });\n  }\n  [_tarballFromResolved]() {\n    const stream = new Minipass();\n    stream.resolved = this.resolved;\n    stream.integrity = this.integrity;\n\n    // run the prepare script, get the list of files, and tar it up\n    // pipe to the stream, and proxy errors the chain.\n    this[_prepareDir]().then(() => packlist({\n      path: this.resolved\n    })).then(files => tar.c(tarCreateOptions(this.package), files).on('error', er => stream.emit('error', er)).pipe(stream)).catch(er => stream.emit('error', er));\n    return stream;\n  }\n  manifest() {\n    if (this.package) return Promise.resolve(this.package);\n    return readPackageJson(this.resolved + '/package.json').then(mani => this.package = {\n      ...mani,\n      _integrity: this.integrity && String(this.integrity),\n      _resolved: this.resolved,\n      _from: this.from\n    });\n  }\n  packument() {\n    return FileFetcher.prototype.packument.apply(this);\n  }\n}\nmodule.exports = DirFetcher;","map":{"version":3,"names":["Fetcher","require","FileFetcher","cacache","Minipass","promisify","readPackageJson","tarCreateOptions","packlist","tar","_prepareDir","Symbol","resolve","runScript","_tarballFromResolved","for","DirFetcher","constructor","spec","opts","resolved","fetchSpec","manifest","types","then","mani","scripts","prepare","stdio","foregroundScripts","banner","log","level","pkg","event","path","stdioString","env","npm_package_resolved","npm_package_integrity","integrity","npm_package_json","stream","files","c","package","on","er","emit","pipe","catch","Promise","_integrity","String","_resolved","_from","from","packument","prototype","apply","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/pacote/lib/dir.js"],"sourcesContent":["const Fetcher = require('./fetcher.js')\nconst FileFetcher = require('./file.js')\nconst cacache = require('cacache')\nconst Minipass = require('minipass')\nconst { promisify } = require('util')\nconst readPackageJson = require('read-package-json-fast')\nconst tarCreateOptions = require('./util/tar-create-options.js')\nconst packlist = require('npm-packlist')\nconst tar = require('tar')\nconst _prepareDir = Symbol('_prepareDir')\nconst { resolve } = require('path')\n\nconst runScript = require('@npmcli/run-script')\n\nconst _tarballFromResolved = Symbol.for('pacote.Fetcher._tarballFromResolved')\nclass DirFetcher extends Fetcher {\n  constructor (spec, opts) {\n    super(spec, opts)\n    // just the fully resolved filename\n    this.resolved = this.spec.fetchSpec\n  }\n\n  // exposes tarCreateOptions as public API\n  static tarCreateOptions (manifest) {\n    return tarCreateOptions(manifest)\n  }\n\n  get types () {\n    return ['directory']\n  }\n\n  [_prepareDir] () {\n    return this.manifest().then(mani => {\n      if (!mani.scripts || !mani.scripts.prepare)\n        return\n\n      // we *only* run prepare.\n      // pre/post-pack is run by the npm CLI for publish and pack,\n      // but this function is *also* run when installing git deps\n      const stdio = this.opts.foregroundScripts ? 'inherit' : 'pipe'\n\n      // hide the banner if loglevel is silent, or if prepare running\n      // in the background.\n      const banner = this.opts.log && this.opts.log.level === 'silent' ? false\n        : stdio === 'inherit'\n\n      return runScript({\n        pkg: mani,\n        event: 'prepare',\n        path: this.resolved,\n        stdioString: true,\n        stdio,\n        banner,\n        env: {\n          npm_package_resolved: this.resolved,\n          npm_package_integrity: this.integrity,\n          npm_package_json: resolve(this.resolved, 'package.json'),\n        },\n      })\n    })\n  }\n\n  [_tarballFromResolved] () {\n    const stream = new Minipass()\n    stream.resolved = this.resolved\n    stream.integrity = this.integrity\n\n    // run the prepare script, get the list of files, and tar it up\n    // pipe to the stream, and proxy errors the chain.\n    this[_prepareDir]()\n      .then(() => packlist({ path: this.resolved }))\n      .then(files => tar.c(tarCreateOptions(this.package), files)\n        .on('error', er => stream.emit('error', er)).pipe(stream))\n      .catch(er => stream.emit('error', er))\n    return stream\n  }\n\n  manifest () {\n    if (this.package)\n      return Promise.resolve(this.package)\n\n    return readPackageJson(this.resolved + '/package.json')\n      .then(mani => this.package = {\n        ...mani,\n        _integrity: this.integrity && String(this.integrity),\n        _resolved: this.resolved,\n        _from: this.from,\n      })\n  }\n\n  packument () {\n    return FileFetcher.prototype.packument.apply(this)\n  }\n}\nmodule.exports = DirFetcher\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}