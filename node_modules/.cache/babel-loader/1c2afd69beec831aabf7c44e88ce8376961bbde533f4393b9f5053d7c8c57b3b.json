{"ast":null,"code":"const cacache = require('cacache');\nconst {\n  promisify\n} = require('util');\nconst log = require('npmlog');\nconst pacote = require('pacote');\nconst path = require('path');\nconst rimraf = promisify(require('rimraf'));\nconst semver = require('semver');\nconst BaseCommand = require('./base-command.js');\nconst npa = require('npm-package-arg');\nconst jsonParse = require('json-parse-even-better-errors');\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\nconst searchCachePackage = async (path, spec, cacheKeys) => {\n  const parsed = npa(spec);\n  if (parsed.rawSpec !== '' && parsed.type === 'tag') throw new Error(`Cannot list cache keys for a tagged package.`);\n  const searchMFH = new RegExp(`^make-fetch-happen:request-cache:.*(?<!/[@a-zA-Z]+)/${parsed.name}/-/(${parsed.name}[^/]+.tgz)$`);\n  const searchPack = new RegExp(`^make-fetch-happen:request-cache:.*/${parsed.escapedName}$`);\n  const results = new Set();\n  cacheKeys = new Set(cacheKeys);\n  for (const key of cacheKeys) {\n    // match on the public key registry url format\n    if (searchMFH.test(key)) {\n      // extract the version from the filename\n      const filename = key.match(searchMFH)[1];\n      const noExt = filename.slice(0, -4);\n      const noScope = `${parsed.name.split('/').pop()}-`;\n      const ver = noExt.slice(noScope.length);\n      if (semver.satisfies(ver, parsed.rawSpec)) results.add(key);\n      continue;\n    }\n    // is this key a packument?\n    if (!searchPack.test(key)) continue;\n    results.add(key);\n    let packument, details;\n    try {\n      details = await cacache.get(path, key);\n      packument = jsonParse(details.data);\n    } catch (_) {\n      // if we couldn't parse the packument, abort\n      continue;\n    }\n    if (!packument.versions || typeof packument.versions !== 'object') continue;\n    // assuming this is a packument\n    for (const ver of Object.keys(packument.versions)) {\n      if (semver.satisfies(ver, parsed.rawSpec)) {\n        if (packument.versions[ver].dist && typeof packument.versions[ver].dist === 'object' && packument.versions[ver].dist.tarball !== undefined && cacheKeys.has(`make-fetch-happen:request-cache:${packument.versions[ver].dist.tarball}`)) results.add(`make-fetch-happen:request-cache:${packument.versions[ver].dist.tarball}`);\n      }\n    }\n  }\n  return results;\n};\nclass Cache extends BaseCommand {\n  static get description() {\n    return 'Manipulates packages cache';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'cache';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['cache'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['add <tarball file>', 'add <folder>', 'add <tarball url>', 'add <git url>', 'add <name>@<version>', 'clean [<key>]', 'ls [<name>@<version>]', 'verify'];\n  }\n  async completion(opts) {\n    const argv = opts.conf.argv.remain;\n    if (argv.length === 2) return ['add', 'clean', 'verify', 'ls', 'delete'];\n\n    // TODO - eventually...\n    switch (argv[2]) {\n      case 'verify':\n      case 'clean':\n      case 'add':\n      case 'ls':\n      case 'delete':\n        return [];\n    }\n  }\n  exec(args, cb) {\n    this.cache(args).then(() => cb()).catch(cb);\n  }\n  async cache(args) {\n    const cmd = args.shift();\n    switch (cmd) {\n      case 'rm':\n      case 'clear':\n      case 'clean':\n        return await this.clean(args);\n      case 'add':\n        return await this.add(args);\n      case 'verify':\n      case 'check':\n        return await this.verify();\n      case 'ls':\n        return await this.ls(args);\n      default:\n        throw Object.assign(new Error(this.usage), {\n          code: 'EUSAGE'\n        });\n    }\n  }\n\n  // npm cache clean [pkg]*\n  async clean(args) {\n    const cachePath = path.join(this.npm.cache, '_cacache');\n    if (args.length === 0) {\n      if (!this.npm.config.get('force')) {\n        throw new Error(`As of npm@5, the npm cache self-heals from corruption issues\n  by treating integrity mismatches as cache misses.  As a result,\n  data extracted from the cache is guaranteed to be valid.  If you\n  want to make sure everything is consistent, use \\`npm cache verify\\`\n  instead.  Deleting the cache can only make npm go slower, and is\n  not likely to correct any problems you may be encountering!\n\n  On the other hand, if you're debugging an issue with the installer,\n  or race conditions that depend on the timing of writing to an empty\n  cache, you can use \\`npm install --cache /tmp/empty-cache\\` to use a\n  temporary cache instead of nuking the actual one.\n\n  If you're sure you want to delete the entire cache, rerun this command\n  with --force.`);\n      }\n      return rimraf(cachePath);\n    }\n    for (const key of args) {\n      let entry;\n      try {\n        entry = await cacache.get(cachePath, key);\n      } catch (err) {\n        this.npm.log.warn(`Not Found: ${key}`);\n        break;\n      }\n      this.npm.output(`Deleted: ${key}`);\n      await cacache.rm.entry(cachePath, key);\n      await cacache.rm.content(cachePath, entry.integrity);\n    }\n  }\n\n  // npm cache add <tarball-url>...\n  // npm cache add <pkg> <ver>...\n  // npm cache add <tarball>...\n  // npm cache add <folder>...\n  async add(args) {\n    const usage = 'Usage:\\n' + '    npm cache add <tarball-url>...\\n' + '    npm cache add <pkg>@<ver>...\\n' + '    npm cache add <tarball>...\\n' + '    npm cache add <folder>...\\n';\n    log.silly('cache add', 'args', args);\n    if (args.length === 0) throw Object.assign(new Error(usage), {\n      code: 'EUSAGE'\n    });\n    return Promise.all(args.map(spec => {\n      log.silly('cache add', 'spec', spec);\n      // we ask pacote for the thing, and then just throw the data\n      // away so that it tee-pipes it into the cache like it does\n      // for a normal request.\n      return pacote.tarball.stream(spec, stream => {\n        stream.resume();\n        return stream.promise();\n      }, this.npm.flatOptions);\n    }));\n  }\n  async verify() {\n    const cache = path.join(this.npm.cache, '_cacache');\n    const prefix = cache.indexOf(process.env.HOME) === 0 ? `~${cache.substr(process.env.HOME.length)}` : cache;\n    const stats = await cacache.verify(cache);\n    this.npm.output(`Cache verified and compressed (${prefix})`);\n    this.npm.output(`Content verified: ${stats.verifiedContent} (${stats.keptSize} bytes)`);\n    stats.badContentCount && this.npm.output(`Corrupted content removed: ${stats.badContentCount}`);\n    stats.reclaimedCount && this.npm.output(`Content garbage-collected: ${stats.reclaimedCount} (${stats.reclaimedSize} bytes)`);\n    stats.missingContent && this.npm.output(`Missing content: ${stats.missingContent}`);\n    this.npm.output(`Index entries: ${stats.totalEntries}`);\n    this.npm.output(`Finished in ${stats.runTime.total / 1000}s`);\n  }\n\n  // npm cache ls [--package <spec> ...]\n  async ls(specs) {\n    const cachePath = path.join(this.npm.cache, '_cacache');\n    const cacheKeys = Object.keys(await cacache.ls(cachePath));\n    if (specs.length > 0) {\n      // get results for each package spec specified\n      const results = new Set();\n      for (const spec of specs) {\n        const keySet = await searchCachePackage(cachePath, spec, cacheKeys);\n        for (const key of keySet) results.add(key);\n      }\n      [...results].sort(localeCompare).forEach(key => this.npm.output(key));\n      return;\n    }\n    cacheKeys.sort(localeCompare).forEach(key => this.npm.output(key));\n  }\n}\nmodule.exports = Cache;","map":{"version":3,"names":["cacache","require","promisify","log","pacote","path","rimraf","semver","BaseCommand","npa","jsonParse","localeCompare","searchCachePackage","spec","cacheKeys","parsed","rawSpec","type","Error","searchMFH","RegExp","name","searchPack","escapedName","results","Set","key","test","filename","match","noExt","slice","noScope","split","pop","ver","length","satisfies","add","packument","details","get","data","_","versions","Object","keys","dist","tarball","undefined","has","Cache","description","params","usage","completion","opts","argv","conf","remain","exec","args","cb","cache","then","catch","cmd","shift","clean","verify","ls","assign","code","cachePath","join","npm","config","entry","err","warn","output","rm","content","integrity","silly","Promise","all","map","stream","resume","promise","flatOptions","prefix","indexOf","process","env","HOME","substr","stats","verifiedContent","keptSize","badContentCount","reclaimedCount","reclaimedSize","missingContent","totalEntries","runTime","total","specs","keySet","sort","forEach","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/cache.js"],"sourcesContent":["const cacache = require('cacache')\nconst { promisify } = require('util')\nconst log = require('npmlog')\nconst pacote = require('pacote')\nconst path = require('path')\nconst rimraf = promisify(require('rimraf'))\nconst semver = require('semver')\nconst BaseCommand = require('./base-command.js')\nconst npa = require('npm-package-arg')\nconst jsonParse = require('json-parse-even-better-errors')\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\n\nconst searchCachePackage = async (path, spec, cacheKeys) => {\n  const parsed = npa(spec)\n  if (parsed.rawSpec !== '' && parsed.type === 'tag')\n    throw new Error(`Cannot list cache keys for a tagged package.`)\n  const searchMFH = new RegExp(`^make-fetch-happen:request-cache:.*(?<!/[@a-zA-Z]+)/${parsed.name}/-/(${parsed.name}[^/]+.tgz)$`)\n  const searchPack = new RegExp(`^make-fetch-happen:request-cache:.*/${parsed.escapedName}$`)\n  const results = new Set()\n  cacheKeys = new Set(cacheKeys)\n  for (const key of cacheKeys) {\n    // match on the public key registry url format\n    if (searchMFH.test(key)) {\n      // extract the version from the filename\n      const filename = key.match(searchMFH)[1]\n      const noExt = filename.slice(0, -4)\n      const noScope = `${parsed.name.split('/').pop()}-`\n      const ver = noExt.slice(noScope.length)\n      if (semver.satisfies(ver, parsed.rawSpec))\n        results.add(key)\n      continue\n    }\n    // is this key a packument?\n    if (!searchPack.test(key))\n      continue\n\n    results.add(key)\n    let packument, details\n    try {\n      details = await cacache.get(path, key)\n      packument = jsonParse(details.data)\n    } catch (_) {\n      // if we couldn't parse the packument, abort\n      continue\n    }\n    if (!packument.versions || typeof packument.versions !== 'object')\n      continue\n    // assuming this is a packument\n    for (const ver of Object.keys(packument.versions)) {\n      if (semver.satisfies(ver, parsed.rawSpec)) {\n        if (packument.versions[ver].dist\n          && typeof packument.versions[ver].dist === 'object'\n          && packument.versions[ver].dist.tarball !== undefined\n          && cacheKeys.has(`make-fetch-happen:request-cache:${packument.versions[ver].dist.tarball}`))\n          results.add(`make-fetch-happen:request-cache:${packument.versions[ver].dist.tarball}`)\n      }\n    }\n  }\n  return results\n}\n\nclass Cache extends BaseCommand {\n  static get description () {\n    return 'Manipulates packages cache'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'cache'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['cache']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return [\n      'add <tarball file>',\n      'add <folder>',\n      'add <tarball url>',\n      'add <git url>',\n      'add <name>@<version>',\n      'clean [<key>]',\n      'ls [<name>@<version>]',\n      'verify',\n    ]\n  }\n\n  async completion (opts) {\n    const argv = opts.conf.argv.remain\n    if (argv.length === 2)\n      return ['add', 'clean', 'verify', 'ls', 'delete']\n\n    // TODO - eventually...\n    switch (argv[2]) {\n      case 'verify':\n      case 'clean':\n      case 'add':\n      case 'ls':\n      case 'delete':\n        return []\n    }\n  }\n\n  exec (args, cb) {\n    this.cache(args).then(() => cb()).catch(cb)\n  }\n\n  async cache (args) {\n    const cmd = args.shift()\n    switch (cmd) {\n      case 'rm': case 'clear': case 'clean':\n        return await this.clean(args)\n      case 'add':\n        return await this.add(args)\n      case 'verify': case 'check':\n        return await this.verify()\n      case 'ls':\n        return await this.ls(args)\n      default:\n        throw Object.assign(new Error(this.usage), { code: 'EUSAGE' })\n    }\n  }\n\n  // npm cache clean [pkg]*\n  async clean (args) {\n    const cachePath = path.join(this.npm.cache, '_cacache')\n    if (args.length === 0) {\n      if (!this.npm.config.get('force')) {\n        throw new Error(`As of npm@5, the npm cache self-heals from corruption issues\n  by treating integrity mismatches as cache misses.  As a result,\n  data extracted from the cache is guaranteed to be valid.  If you\n  want to make sure everything is consistent, use \\`npm cache verify\\`\n  instead.  Deleting the cache can only make npm go slower, and is\n  not likely to correct any problems you may be encountering!\n\n  On the other hand, if you're debugging an issue with the installer,\n  or race conditions that depend on the timing of writing to an empty\n  cache, you can use \\`npm install --cache /tmp/empty-cache\\` to use a\n  temporary cache instead of nuking the actual one.\n\n  If you're sure you want to delete the entire cache, rerun this command\n  with --force.`)\n      }\n      return rimraf(cachePath)\n    }\n    for (const key of args) {\n      let entry\n      try {\n        entry = await cacache.get(cachePath, key)\n      } catch (err) {\n        this.npm.log.warn(`Not Found: ${key}`)\n        break\n      }\n      this.npm.output(`Deleted: ${key}`)\n      await cacache.rm.entry(cachePath, key)\n      await cacache.rm.content(cachePath, entry.integrity)\n    }\n  }\n\n  // npm cache add <tarball-url>...\n  // npm cache add <pkg> <ver>...\n  // npm cache add <tarball>...\n  // npm cache add <folder>...\n  async add (args) {\n    const usage = 'Usage:\\n' +\n      '    npm cache add <tarball-url>...\\n' +\n      '    npm cache add <pkg>@<ver>...\\n' +\n      '    npm cache add <tarball>...\\n' +\n      '    npm cache add <folder>...\\n'\n    log.silly('cache add', 'args', args)\n    if (args.length === 0)\n      throw Object.assign(new Error(usage), { code: 'EUSAGE' })\n\n    return Promise.all(args.map(spec => {\n      log.silly('cache add', 'spec', spec)\n      // we ask pacote for the thing, and then just throw the data\n      // away so that it tee-pipes it into the cache like it does\n      // for a normal request.\n      return pacote.tarball.stream(spec, stream => {\n        stream.resume()\n        return stream.promise()\n      }, this.npm.flatOptions)\n    }))\n  }\n\n  async verify () {\n    const cache = path.join(this.npm.cache, '_cacache')\n    const prefix = cache.indexOf(process.env.HOME) === 0\n      ? `~${cache.substr(process.env.HOME.length)}`\n      : cache\n    const stats = await cacache.verify(cache)\n    this.npm.output(`Cache verified and compressed (${prefix})`)\n    this.npm.output(`Content verified: ${stats.verifiedContent} (${stats.keptSize} bytes)`)\n    stats.badContentCount && this.npm.output(`Corrupted content removed: ${stats.badContentCount}`)\n    stats.reclaimedCount && this.npm.output(`Content garbage-collected: ${stats.reclaimedCount} (${stats.reclaimedSize} bytes)`)\n    stats.missingContent && this.npm.output(`Missing content: ${stats.missingContent}`)\n    this.npm.output(`Index entries: ${stats.totalEntries}`)\n    this.npm.output(`Finished in ${stats.runTime.total / 1000}s`)\n  }\n\n  // npm cache ls [--package <spec> ...]\n  async ls (specs) {\n    const cachePath = path.join(this.npm.cache, '_cacache')\n    const cacheKeys = Object.keys(await cacache.ls(cachePath))\n    if (specs.length > 0) {\n      // get results for each package spec specified\n      const results = new Set()\n      for (const spec of specs) {\n        const keySet = await searchCachePackage(cachePath, spec, cacheKeys)\n        for (const key of keySet)\n          results.add(key)\n      }\n      [...results].sort(localeCompare).forEach(key => this.npm.output(key))\n      return\n    }\n    cacheKeys.sort(localeCompare).forEach(key => this.npm.output(key))\n  }\n}\n\nmodule.exports = Cache\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}