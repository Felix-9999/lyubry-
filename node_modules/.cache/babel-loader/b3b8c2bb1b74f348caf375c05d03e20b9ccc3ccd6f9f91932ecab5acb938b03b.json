{"ast":null,"code":"const columns = require('cli-columns');\nconst libteam = require('libnpmteam');\nconst otplease = require('./utils/otplease.js');\nconst BaseCommand = require('./base-command.js');\nclass Team extends BaseCommand {\n  static get description() {\n    return 'Manage organization teams and team memberships';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'team';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['create <scope:team> [--otp <otpcode>]', 'destroy <scope:team> [--otp <otpcode>]', 'add <scope:team> <user> [--otp <otpcode>]', 'rm <scope:team> <user> [--otp <otpcode>]', 'ls <scope>|<scope:team>'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['registry', 'otp', 'parseable', 'json'];\n  }\n  async completion(opts) {\n    const {\n      conf: {\n        argv: {\n          remain: argv\n        }\n      }\n    } = opts;\n    const subcommands = ['create', 'destroy', 'add', 'rm', 'ls'];\n    if (argv.length === 2) return subcommands;\n    if (subcommands.includes(argv[2])) return [];\n    throw new Error(argv[2] + ' not recognized');\n  }\n  exec(args, cb) {\n    this.team(args).then(() => cb()).catch(cb);\n  }\n  async team([cmd, entity = '', user = '']) {\n    // Entities are in the format <scope>:<team>\n    // XXX: \"description\" option to libnpmteam is used as a description of the\n    // team, but in npm's options, this is a boolean meaning \"show the\n    // description in npm search output\".  Hence its being set to null here.\n    await otplease(this.npm.flatOptions, opts => {\n      entity = entity.replace(/^@/, '');\n      switch (cmd) {\n        case 'create':\n          return this.create(entity, opts);\n        case 'destroy':\n          return this.destroy(entity, opts);\n        case 'add':\n          return this.add(entity, user, opts);\n        case 'rm':\n          return this.rm(entity, user, opts);\n        case 'ls':\n          {\n            const match = entity.match(/[^:]+:.+/);\n            if (match) return this.listUsers(entity, opts);else return this.listTeams(entity, opts);\n          }\n        default:\n          throw this.usage;\n      }\n    });\n  }\n  async create(entity, opts) {\n    await libteam.create(entity, opts);\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        created: true,\n        team: entity\n      }));\n    } else if (opts.parseable) this.npm.output(`${entity}\\tcreated`);else if (!opts.silent && opts.loglevel !== 'silent') this.npm.output(`+@${entity}`);\n  }\n  async destroy(entity, opts) {\n    await libteam.destroy(entity, opts);\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        deleted: true,\n        team: entity\n      }));\n    } else if (opts.parseable) this.npm.output(`${entity}\\tdeleted`);else if (!opts.silent && opts.loglevel !== 'silent') this.npm.output(`-@${entity}`);\n  }\n  async add(entity, user, opts) {\n    await libteam.add(user, entity, opts);\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        added: true,\n        team: entity,\n        user\n      }));\n    } else if (opts.parseable) this.npm.output(`${user}\\t${entity}\\tadded`);else if (!opts.silent && opts.loglevel !== 'silent') this.npm.output(`${user} added to @${entity}`);\n  }\n  async rm(entity, user, opts) {\n    await libteam.rm(user, entity, opts);\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        removed: true,\n        team: entity,\n        user\n      }));\n    } else if (opts.parseable) this.npm.output(`${user}\\t${entity}\\tremoved`);else if (!opts.silent && opts.loglevel !== 'silent') this.npm.output(`${user} removed from @${entity}`);\n  }\n  async listUsers(entity, opts) {\n    const users = (await libteam.lsUsers(entity, opts)).sort();\n    if (opts.json) this.npm.output(JSON.stringify(users, null, 2));else if (opts.parseable) this.npm.output(users.join('\\n'));else if (!opts.silent && opts.loglevel !== 'silent') {\n      const plural = users.length === 1 ? '' : 's';\n      const more = users.length === 0 ? '' : ':\\n';\n      this.npm.output(`\\n@${entity} has ${users.length} user${plural}${more}`);\n      this.npm.output(columns(users, {\n        padding: 1\n      }));\n    }\n  }\n  async listTeams(entity, opts) {\n    const teams = (await libteam.lsTeams(entity, opts)).sort();\n    if (opts.json) this.npm.output(JSON.stringify(teams, null, 2));else if (opts.parseable) this.npm.output(teams.join('\\n'));else if (!opts.silent && opts.loglevel !== 'silent') {\n      const plural = teams.length === 1 ? '' : 's';\n      const more = teams.length === 0 ? '' : ':\\n';\n      this.npm.output(`\\n@${entity} has ${teams.length} team${plural}${more}`);\n      this.npm.output(columns(teams.map(t => `@${t}`), {\n        padding: 1\n      }));\n    }\n  }\n}\nmodule.exports = Team;","map":{"version":3,"names":["columns","require","libteam","otplease","BaseCommand","Team","description","name","usage","params","completion","opts","conf","argv","remain","subcommands","length","includes","Error","exec","args","cb","team","then","catch","cmd","entity","user","npm","flatOptions","replace","create","destroy","add","rm","match","listUsers","listTeams","json","output","JSON","stringify","created","parseable","silent","loglevel","deleted","added","removed","users","lsUsers","sort","join","plural","more","padding","teams","lsTeams","map","t","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/team.js"],"sourcesContent":["const columns = require('cli-columns')\nconst libteam = require('libnpmteam')\n\nconst otplease = require('./utils/otplease.js')\n\nconst BaseCommand = require('./base-command.js')\nclass Team extends BaseCommand {\n  static get description () {\n    return 'Manage organization teams and team memberships'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'team'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return [\n      'create <scope:team> [--otp <otpcode>]',\n      'destroy <scope:team> [--otp <otpcode>]',\n      'add <scope:team> <user> [--otp <otpcode>]',\n      'rm <scope:team> <user> [--otp <otpcode>]',\n      'ls <scope>|<scope:team>',\n    ]\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'registry',\n      'otp',\n      'parseable',\n      'json',\n    ]\n  }\n\n  async completion (opts) {\n    const { conf: { argv: { remain: argv } } } = opts\n    const subcommands = ['create', 'destroy', 'add', 'rm', 'ls']\n\n    if (argv.length === 2)\n      return subcommands\n\n    if (subcommands.includes(argv[2]))\n      return []\n\n    throw new Error(argv[2] + ' not recognized')\n  }\n\n  exec (args, cb) {\n    this.team(args).then(() => cb()).catch(cb)\n  }\n\n  async team ([cmd, entity = '', user = '']) {\n    // Entities are in the format <scope>:<team>\n    // XXX: \"description\" option to libnpmteam is used as a description of the\n    // team, but in npm's options, this is a boolean meaning \"show the\n    // description in npm search output\".  Hence its being set to null here.\n    await otplease(this.npm.flatOptions, opts => {\n      entity = entity.replace(/^@/, '')\n      switch (cmd) {\n        case 'create': return this.create(entity, opts)\n        case 'destroy': return this.destroy(entity, opts)\n        case 'add': return this.add(entity, user, opts)\n        case 'rm': return this.rm(entity, user, opts)\n        case 'ls': {\n          const match = entity.match(/[^:]+:.+/)\n          if (match)\n            return this.listUsers(entity, opts)\n          else\n            return this.listTeams(entity, opts)\n        }\n        default:\n          throw this.usage\n      }\n    })\n  }\n\n  async create (entity, opts) {\n    await libteam.create(entity, opts)\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        created: true,\n        team: entity,\n      }))\n    } else if (opts.parseable)\n      this.npm.output(`${entity}\\tcreated`)\n    else if (!opts.silent && opts.loglevel !== 'silent')\n      this.npm.output(`+@${entity}`)\n  }\n\n  async destroy (entity, opts) {\n    await libteam.destroy(entity, opts)\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        deleted: true,\n        team: entity,\n      }))\n    } else if (opts.parseable)\n      this.npm.output(`${entity}\\tdeleted`)\n    else if (!opts.silent && opts.loglevel !== 'silent')\n      this.npm.output(`-@${entity}`)\n  }\n\n  async add (entity, user, opts) {\n    await libteam.add(user, entity, opts)\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        added: true,\n        team: entity,\n        user,\n      }))\n    } else if (opts.parseable)\n      this.npm.output(`${user}\\t${entity}\\tadded`)\n    else if (!opts.silent && opts.loglevel !== 'silent')\n      this.npm.output(`${user} added to @${entity}`)\n  }\n\n  async rm (entity, user, opts) {\n    await libteam.rm(user, entity, opts)\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        removed: true,\n        team: entity,\n        user,\n      }))\n    } else if (opts.parseable)\n      this.npm.output(`${user}\\t${entity}\\tremoved`)\n    else if (!opts.silent && opts.loglevel !== 'silent')\n      this.npm.output(`${user} removed from @${entity}`)\n  }\n\n  async listUsers (entity, opts) {\n    const users = (await libteam.lsUsers(entity, opts)).sort()\n    if (opts.json)\n      this.npm.output(JSON.stringify(users, null, 2))\n    else if (opts.parseable)\n      this.npm.output(users.join('\\n'))\n    else if (!opts.silent && opts.loglevel !== 'silent') {\n      const plural = users.length === 1 ? '' : 's'\n      const more = users.length === 0 ? '' : ':\\n'\n      this.npm.output(`\\n@${entity} has ${users.length} user${plural}${more}`)\n      this.npm.output(columns(users, { padding: 1 }))\n    }\n  }\n\n  async listTeams (entity, opts) {\n    const teams = (await libteam.lsTeams(entity, opts)).sort()\n    if (opts.json)\n      this.npm.output(JSON.stringify(teams, null, 2))\n    else if (opts.parseable)\n      this.npm.output(teams.join('\\n'))\n    else if (!opts.silent && opts.loglevel !== 'silent') {\n      const plural = teams.length === 1 ? '' : 's'\n      const more = teams.length === 0 ? '' : ':\\n'\n      this.npm.output(`\\n@${entity} has ${teams.length} team${plural}${more}`)\n      this.npm.output(columns(teams.map(t => `@${t}`), { padding: 1 }))\n    }\n  }\n}\nmodule.exports = Team\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}