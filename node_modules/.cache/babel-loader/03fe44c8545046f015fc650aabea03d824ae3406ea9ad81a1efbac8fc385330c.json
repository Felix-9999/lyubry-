{"ast":null,"code":"'use strict';\n\nconst stringWidth = require('string-width');\nconst stripAnsi = require('strip-ansi');\nconst concat = Array.prototype.concat;\nconst defaults = {\n  character: ' ',\n  newline: '\\n',\n  padding: 2,\n  sort: true,\n  width: 0\n};\nfunction byPlainText(a, b) {\n  const plainA = stripAnsi(a);\n  const plainB = stripAnsi(b);\n  if (plainA === plainB) {\n    return 0;\n  }\n  if (plainA > plainB) {\n    return 1;\n  }\n  return -1;\n}\nfunction makeArray() {\n  return [];\n}\nfunction makeList(count) {\n  return Array.apply(null, Array(count));\n}\nfunction padCell(fullWidth, character, value) {\n  const valueWidth = stringWidth(value);\n  const filler = makeList(fullWidth - valueWidth + 1);\n  return value + filler.join(character);\n}\nfunction toRows(rows, cell, i) {\n  rows[i % rows.length].push(cell);\n  return rows;\n}\nfunction toString(arr) {\n  return arr.join('');\n}\nfunction columns(values, options) {\n  values = concat.apply([], values);\n  options = Object.assign({}, defaults, options);\n  let cells = values.filter(Boolean).map(String);\n  if (options.sort !== false) {\n    cells = cells.sort(byPlainText);\n  }\n  const termWidth = options.width || process.stdout.columns;\n  const cellWidth = Math.max.apply(null, cells.map(stringWidth)) + options.padding;\n  const columnCount = Math.floor(termWidth / cellWidth) || 1;\n  const rowCount = Math.ceil(cells.length / columnCount) || 1;\n  if (columnCount === 1) {\n    return cells.join(options.newline);\n  }\n  return cells.map(padCell.bind(null, cellWidth, options.character)).reduce(toRows, makeList(rowCount).map(makeArray)).map(toString).join(options.newline);\n}\nmodule.exports = columns;","map":{"version":3,"names":["stringWidth","require","stripAnsi","concat","Array","prototype","defaults","character","newline","padding","sort","width","byPlainText","a","b","plainA","plainB","makeArray","makeList","count","apply","padCell","fullWidth","value","valueWidth","filler","join","toRows","rows","cell","i","length","push","toString","arr","columns","values","options","Object","assign","cells","filter","Boolean","map","String","termWidth","process","stdout","cellWidth","Math","max","columnCount","floor","rowCount","ceil","bind","reduce","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/cli-columns/index.js"],"sourcesContent":["'use strict';\n\nconst stringWidth = require('string-width');\nconst stripAnsi = require('strip-ansi');\n\nconst concat = Array.prototype.concat;\nconst defaults = {\n\tcharacter: ' ',\n\tnewline: '\\n',\n\tpadding: 2,\n\tsort: true,\n\twidth: 0\n};\n\nfunction byPlainText(a, b) {\n\tconst plainA = stripAnsi(a);\n\tconst plainB = stripAnsi(b);\n\n\tif (plainA === plainB) {\n\t\treturn 0;\n\t}\n\n\tif (plainA > plainB) {\n\t\treturn 1;\n\t}\n\n\treturn -1;\n}\n\nfunction makeArray() {\n\treturn [];\n}\n\nfunction makeList(count) {\n\treturn Array.apply(null, Array(count));\n}\n\nfunction padCell(fullWidth, character, value) {\n\tconst valueWidth = stringWidth(value);\n\tconst filler = makeList(fullWidth - valueWidth + 1);\n\n\treturn value + filler.join(character);\n}\n\nfunction toRows(rows, cell, i) {\n\trows[i % rows.length].push(cell);\n\n\treturn rows;\n}\n\nfunction toString(arr) {\n\treturn arr.join('');\n}\n\nfunction columns(values, options) {\n\tvalues = concat.apply([], values);\n\toptions = Object.assign({}, defaults, options);\n\n\tlet cells = values\n\t\t.filter(Boolean)\n\t\t.map(String);\n\n\tif (options.sort !== false) {\n\t\tcells = cells.sort(byPlainText);\n\t}\n\n\tconst termWidth = options.width || process.stdout.columns;\n\tconst cellWidth = Math.max.apply(null, cells.map(stringWidth)) + options.padding;\n\tconst columnCount = Math.floor(termWidth / cellWidth) || 1;\n\tconst rowCount = Math.ceil(cells.length / columnCount) || 1;\n\n\tif (columnCount === 1) {\n\t\treturn cells.join(options.newline);\n\t}\n\n\treturn cells\n\t\t.map(padCell.bind(null, cellWidth, options.character))\n\t\t.reduce(toRows, makeList(rowCount).map(makeArray))\n\t\t.map(toString)\n\t\t.join(options.newline);\n}\n\nmodule.exports = columns;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}