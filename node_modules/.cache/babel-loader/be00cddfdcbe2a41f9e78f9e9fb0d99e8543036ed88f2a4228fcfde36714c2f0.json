{"ast":null,"code":"// An edge in the dependency graph\n// Represents a dependency relationship of some kind\n\nconst util = require('util');\nconst npa = require('npm-package-arg');\nconst depValid = require('./dep-valid.js');\nconst _from = Symbol('_from');\nconst _to = Symbol('_to');\nconst _type = Symbol('_type');\nconst _spec = Symbol('_spec');\nconst _accept = Symbol('_accept');\nconst _name = Symbol('_name');\nconst _error = Symbol('_error');\nconst _loadError = Symbol('_loadError');\nconst _setFrom = Symbol('_setFrom');\nconst _explain = Symbol('_explain');\nconst _explanation = Symbol('_explanation');\nconst types = new Set(['prod', 'dev', 'optional', 'peer', 'peerOptional', 'workspace']);\nclass ArboristEdge {}\nconst printableEdge = edge => {\n  const edgeFrom = edge.from && edge.from.location;\n  const edgeTo = edge.to && edge.to.location;\n  return Object.assign(new ArboristEdge(), {\n    name: edge.name,\n    spec: edge.spec,\n    type: edge.type,\n    ...(edgeFrom != null ? {\n      from: edgeFrom\n    } : {}),\n    ...(edgeTo ? {\n      to: edgeTo\n    } : {}),\n    ...(edge.error ? {\n      error: edge.error\n    } : {}),\n    ...(edge.overridden ? {\n      overridden: true\n    } : {})\n  });\n};\nclass Edge {\n  constructor(options) {\n    const {\n      type,\n      name,\n      spec,\n      accept,\n      from\n    } = options;\n    if (typeof spec !== 'string') {\n      throw new TypeError('must provide string spec');\n    }\n    if (type === 'workspace' && npa(spec).type !== 'directory') {\n      throw new TypeError('workspace edges must be a symlink');\n    }\n    this[_spec] = spec;\n    if (accept !== undefined) {\n      if (typeof accept !== 'string') {\n        throw new TypeError('accept field must be a string if provided');\n      }\n      this[_accept] = accept || '*';\n    }\n    if (typeof name !== 'string') {\n      throw new TypeError('must provide dependency name');\n    }\n    this[_name] = name;\n    if (!types.has(type)) {\n      throw new TypeError(`invalid type: ${type}\\n` + `(valid types are: ${Edge.types.join(', ')})`);\n    }\n    this[_type] = type;\n    if (!from) {\n      throw new TypeError('must provide \"from\" node');\n    }\n    this[_setFrom](from);\n    this[_error] = this[_loadError]();\n    this.overridden = false;\n  }\n  satisfiedBy(node) {\n    return node.name === this.name && depValid(node, this.spec, this.accept, this.from);\n  }\n  explain(seen = []) {\n    if (this[_explanation]) {\n      return this[_explanation];\n    }\n    return this[_explanation] = this[_explain](seen);\n  }\n\n  // return the edge data, and an explanation of how that edge came to be here\n  [_explain](seen) {\n    const {\n      error,\n      from,\n      bundled\n    } = this;\n    return {\n      type: this.type,\n      name: this.name,\n      spec: this.spec,\n      ...(bundled ? {\n        bundled\n      } : {}),\n      ...(error ? {\n        error\n      } : {}),\n      ...(from ? {\n        from: from.explain(null, seen)\n      } : {})\n    };\n  }\n  get bundled() {\n    if (!this.from) {\n      return false;\n    }\n    const {\n      package: {\n        bundleDependencies = []\n      }\n    } = this.from;\n    return bundleDependencies.includes(this.name);\n  }\n  get workspace() {\n    return this[_type] === 'workspace';\n  }\n  get prod() {\n    return this[_type] === 'prod';\n  }\n  get dev() {\n    return this[_type] === 'dev';\n  }\n  get optional() {\n    return this[_type] === 'optional' || this[_type] === 'peerOptional';\n  }\n  get peer() {\n    return this[_type] === 'peer' || this[_type] === 'peerOptional';\n  }\n  get type() {\n    return this[_type];\n  }\n  get name() {\n    return this[_name];\n  }\n  get spec() {\n    return this[_spec];\n  }\n  get accept() {\n    return this[_accept];\n  }\n  get valid() {\n    return !this.error;\n  }\n  get missing() {\n    return this.error === 'MISSING';\n  }\n  get invalid() {\n    return this.error === 'INVALID';\n  }\n  get peerLocal() {\n    return this.error === 'PEER LOCAL';\n  }\n  get error() {\n    this[_error] = this[_error] || this[_loadError]();\n    return this[_error] === 'OK' ? null : this[_error];\n  }\n  [_loadError]() {\n    return !this[_to] ? this.optional ? null : 'MISSING' : this.peer && this.from === this.to.parent && !this.from.isTop ? 'PEER LOCAL' : !this.satisfiedBy(this.to) ? 'INVALID' : 'OK';\n  }\n  reload(hard = false) {\n    this[_explanation] = null;\n    const newTo = this[_from].resolve(this.name);\n    if (newTo !== this[_to]) {\n      if (this[_to]) {\n        this[_to].edgesIn.delete(this);\n      }\n      this[_to] = newTo;\n      this[_error] = this[_loadError]();\n      if (this[_to]) {\n        this[_to].addEdgeIn(this);\n      }\n    } else if (hard) {\n      this[_error] = this[_loadError]();\n    }\n  }\n  detach() {\n    this[_explanation] = null;\n    if (this[_to]) {\n      this[_to].edgesIn.delete(this);\n    }\n    this[_from].edgesOut.delete(this.name);\n    this[_to] = null;\n    this[_error] = 'DETACHED';\n    this[_from] = null;\n  }\n  [_setFrom](node) {\n    this[_explanation] = null;\n    this[_from] = node;\n    if (node.edgesOut.has(this.name)) {\n      node.edgesOut.get(this.name).detach();\n    }\n    node.addEdgeOut(this);\n    this.reload();\n  }\n  get from() {\n    return this[_from];\n  }\n  get to() {\n    return this[_to];\n  }\n  toJSON() {\n    return printableEdge(this);\n  }\n  [util.inspect.custom]() {\n    return this.toJSON();\n  }\n}\nEdge.types = [...types];\nEdge.errors = ['DETACHED', 'MISSING', 'PEER LOCAL', 'INVALID'];\nmodule.exports = Edge;","map":{"version":3,"names":["util","require","npa","depValid","_from","Symbol","_to","_type","_spec","_accept","_name","_error","_loadError","_setFrom","_explain","_explanation","types","Set","ArboristEdge","printableEdge","edge","edgeFrom","from","location","edgeTo","to","Object","assign","name","spec","type","error","overridden","Edge","constructor","options","accept","TypeError","undefined","has","join","satisfiedBy","node","explain","seen","bundled","package","bundleDependencies","includes","workspace","prod","dev","optional","peer","valid","missing","invalid","peerLocal","parent","isTop","reload","hard","newTo","resolve","edgesIn","delete","addEdgeIn","detach","edgesOut","get","addEdgeOut","toJSON","inspect","custom","errors","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/arborist/lib/edge.js"],"sourcesContent":["// An edge in the dependency graph\n// Represents a dependency relationship of some kind\n\nconst util = require('util')\nconst npa = require('npm-package-arg')\nconst depValid = require('./dep-valid.js')\nconst _from = Symbol('_from')\nconst _to = Symbol('_to')\nconst _type = Symbol('_type')\nconst _spec = Symbol('_spec')\nconst _accept = Symbol('_accept')\nconst _name = Symbol('_name')\nconst _error = Symbol('_error')\nconst _loadError = Symbol('_loadError')\nconst _setFrom = Symbol('_setFrom')\nconst _explain = Symbol('_explain')\nconst _explanation = Symbol('_explanation')\n\nconst types = new Set([\n  'prod',\n  'dev',\n  'optional',\n  'peer',\n  'peerOptional',\n  'workspace',\n])\n\nclass ArboristEdge {}\nconst printableEdge = (edge) => {\n  const edgeFrom = edge.from && edge.from.location\n  const edgeTo = edge.to && edge.to.location\n\n  return Object.assign(new ArboristEdge(), {\n    name: edge.name,\n    spec: edge.spec,\n    type: edge.type,\n    ...(edgeFrom != null ? { from: edgeFrom } : {}),\n    ...(edgeTo ? { to: edgeTo } : {}),\n    ...(edge.error ? { error: edge.error } : {}),\n    ...(edge.overridden ? { overridden: true } : {}),\n  })\n}\n\nclass Edge {\n  constructor (options) {\n    const { type, name, spec, accept, from } = options\n\n    if (typeof spec !== 'string') {\n      throw new TypeError('must provide string spec')\n    }\n\n    if (type === 'workspace' && npa(spec).type !== 'directory') {\n      throw new TypeError('workspace edges must be a symlink')\n    }\n\n    this[_spec] = spec\n\n    if (accept !== undefined) {\n      if (typeof accept !== 'string') {\n        throw new TypeError('accept field must be a string if provided')\n      }\n      this[_accept] = accept || '*'\n    }\n\n    if (typeof name !== 'string') {\n      throw new TypeError('must provide dependency name')\n    }\n    this[_name] = name\n\n    if (!types.has(type)) {\n      throw new TypeError(\n        `invalid type: ${type}\\n` +\n        `(valid types are: ${Edge.types.join(', ')})`)\n    }\n    this[_type] = type\n    if (!from) {\n      throw new TypeError('must provide \"from\" node')\n    }\n    this[_setFrom](from)\n    this[_error] = this[_loadError]()\n    this.overridden = false\n  }\n\n  satisfiedBy (node) {\n    return node.name === this.name &&\n      depValid(node, this.spec, this.accept, this.from)\n  }\n\n  explain (seen = []) {\n    if (this[_explanation]) {\n      return this[_explanation]\n    }\n\n    return this[_explanation] = this[_explain](seen)\n  }\n\n  // return the edge data, and an explanation of how that edge came to be here\n  [_explain] (seen) {\n    const { error, from, bundled } = this\n    return {\n      type: this.type,\n      name: this.name,\n      spec: this.spec,\n      ...(bundled ? { bundled } : {}),\n      ...(error ? { error } : {}),\n      ...(from ? { from: from.explain(null, seen) } : {}),\n    }\n  }\n\n  get bundled () {\n    if (!this.from) {\n      return false\n    }\n    const { package: { bundleDependencies = [] } } = this.from\n    return bundleDependencies.includes(this.name)\n  }\n\n  get workspace () {\n    return this[_type] === 'workspace'\n  }\n\n  get prod () {\n    return this[_type] === 'prod'\n  }\n\n  get dev () {\n    return this[_type] === 'dev'\n  }\n\n  get optional () {\n    return this[_type] === 'optional' || this[_type] === 'peerOptional'\n  }\n\n  get peer () {\n    return this[_type] === 'peer' || this[_type] === 'peerOptional'\n  }\n\n  get type () {\n    return this[_type]\n  }\n\n  get name () {\n    return this[_name]\n  }\n\n  get spec () {\n    return this[_spec]\n  }\n\n  get accept () {\n    return this[_accept]\n  }\n\n  get valid () {\n    return !this.error\n  }\n\n  get missing () {\n    return this.error === 'MISSING'\n  }\n\n  get invalid () {\n    return this.error === 'INVALID'\n  }\n\n  get peerLocal () {\n    return this.error === 'PEER LOCAL'\n  }\n\n  get error () {\n    this[_error] = this[_error] || this[_loadError]()\n    return this[_error] === 'OK' ? null : this[_error]\n  }\n\n  [_loadError] () {\n    return !this[_to] ? (this.optional ? null : 'MISSING')\n      : this.peer && this.from === this.to.parent && !this.from.isTop ? 'PEER LOCAL'\n      : !this.satisfiedBy(this.to) ? 'INVALID'\n      : 'OK'\n  }\n\n  reload (hard = false) {\n    this[_explanation] = null\n    const newTo = this[_from].resolve(this.name)\n    if (newTo !== this[_to]) {\n      if (this[_to]) {\n        this[_to].edgesIn.delete(this)\n      }\n      this[_to] = newTo\n      this[_error] = this[_loadError]()\n      if (this[_to]) {\n        this[_to].addEdgeIn(this)\n      }\n    } else if (hard) {\n      this[_error] = this[_loadError]()\n    }\n  }\n\n  detach () {\n    this[_explanation] = null\n    if (this[_to]) {\n      this[_to].edgesIn.delete(this)\n    }\n    this[_from].edgesOut.delete(this.name)\n    this[_to] = null\n    this[_error] = 'DETACHED'\n    this[_from] = null\n  }\n\n  [_setFrom] (node) {\n    this[_explanation] = null\n    this[_from] = node\n    if (node.edgesOut.has(this.name)) {\n      node.edgesOut.get(this.name).detach()\n    }\n    node.addEdgeOut(this)\n    this.reload()\n  }\n\n  get from () {\n    return this[_from]\n  }\n\n  get to () {\n    return this[_to]\n  }\n\n  toJSON () {\n    return printableEdge(this)\n  }\n\n  [util.inspect.custom] () {\n    return this.toJSON()\n  }\n}\n\nEdge.types = [...types]\nEdge.errors = [\n  'DETACHED',\n  'MISSING',\n  'PEER LOCAL',\n  'INVALID',\n]\n\nmodule.exports = Edge\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACtC,MAAME,QAAQ,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAC1C,MAAMG,KAAK,GAAGC,MAAM,CAAC,OAAO,CAAC;AAC7B,MAAMC,GAAG,GAAGD,MAAM,CAAC,KAAK,CAAC;AACzB,MAAME,KAAK,GAAGF,MAAM,CAAC,OAAO,CAAC;AAC7B,MAAMG,KAAK,GAAGH,MAAM,CAAC,OAAO,CAAC;AAC7B,MAAMI,OAAO,GAAGJ,MAAM,CAAC,SAAS,CAAC;AACjC,MAAMK,KAAK,GAAGL,MAAM,CAAC,OAAO,CAAC;AAC7B,MAAMM,MAAM,GAAGN,MAAM,CAAC,QAAQ,CAAC;AAC/B,MAAMO,UAAU,GAAGP,MAAM,CAAC,YAAY,CAAC;AACvC,MAAMQ,QAAQ,GAAGR,MAAM,CAAC,UAAU,CAAC;AACnC,MAAMS,QAAQ,GAAGT,MAAM,CAAC,UAAU,CAAC;AACnC,MAAMU,YAAY,GAAGV,MAAM,CAAC,cAAc,CAAC;AAE3C,MAAMW,KAAK,GAAG,IAAIC,GAAG,CAAC,CACpB,MAAM,EACN,KAAK,EACL,UAAU,EACV,MAAM,EACN,cAAc,EACd,WAAW,CACZ,CAAC;AAEF,MAAMC,YAAY,CAAC;AACnB,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC9B,MAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAI,IAAIF,IAAI,CAACE,IAAI,CAACC,QAAQ;EAChD,MAAMC,MAAM,GAAGJ,IAAI,CAACK,EAAE,IAAIL,IAAI,CAACK,EAAE,CAACF,QAAQ;EAE1C,OAAOG,MAAM,CAACC,MAAM,CAAC,IAAIT,YAAY,CAAC,CAAC,EAAE;IACvCU,IAAI,EAAER,IAAI,CAACQ,IAAI;IACfC,IAAI,EAAET,IAAI,CAACS,IAAI;IACfC,IAAI,EAAEV,IAAI,CAACU,IAAI;IACf,IAAIT,QAAQ,IAAI,IAAI,GAAG;MAAEC,IAAI,EAAED;IAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/C,IAAIG,MAAM,GAAG;MAAEC,EAAE,EAAED;IAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACjC,IAAIJ,IAAI,CAACW,KAAK,GAAG;MAAEA,KAAK,EAAEX,IAAI,CAACW;IAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,IAAIX,IAAI,CAACY,UAAU,GAAG;MAAEA,UAAU,EAAE;IAAK,CAAC,GAAG,CAAC,CAAC;EACjD,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,IAAI,CAAC;EACTC,WAAWA,CAAEC,OAAO,EAAE;IACpB,MAAM;MAAEL,IAAI;MAAEF,IAAI;MAAEC,IAAI;MAAEO,MAAM;MAAEd;IAAK,CAAC,GAAGa,OAAO;IAElD,IAAI,OAAON,IAAI,KAAK,QAAQ,EAAE;MAC5B,MAAM,IAAIQ,SAAS,CAAC,0BAA0B,CAAC;IACjD;IAEA,IAAIP,IAAI,KAAK,WAAW,IAAI5B,GAAG,CAAC2B,IAAI,CAAC,CAACC,IAAI,KAAK,WAAW,EAAE;MAC1D,MAAM,IAAIO,SAAS,CAAC,mCAAmC,CAAC;IAC1D;IAEA,IAAI,CAAC7B,KAAK,CAAC,GAAGqB,IAAI;IAElB,IAAIO,MAAM,KAAKE,SAAS,EAAE;MACxB,IAAI,OAAOF,MAAM,KAAK,QAAQ,EAAE;QAC9B,MAAM,IAAIC,SAAS,CAAC,2CAA2C,CAAC;MAClE;MACA,IAAI,CAAC5B,OAAO,CAAC,GAAG2B,MAAM,IAAI,GAAG;IAC/B;IAEA,IAAI,OAAOR,IAAI,KAAK,QAAQ,EAAE;MAC5B,MAAM,IAAIS,SAAS,CAAC,8BAA8B,CAAC;IACrD;IACA,IAAI,CAAC3B,KAAK,CAAC,GAAGkB,IAAI;IAElB,IAAI,CAACZ,KAAK,CAACuB,GAAG,CAACT,IAAI,CAAC,EAAE;MACpB,MAAM,IAAIO,SAAS,CACjB,iBAAiBP,IAAI,IAAI,GACzB,qBAAqBG,IAAI,CAACjB,KAAK,CAACwB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;IAClD;IACA,IAAI,CAACjC,KAAK,CAAC,GAAGuB,IAAI;IAClB,IAAI,CAACR,IAAI,EAAE;MACT,MAAM,IAAIe,SAAS,CAAC,0BAA0B,CAAC;IACjD;IACA,IAAI,CAACxB,QAAQ,CAAC,CAACS,IAAI,CAAC;IACpB,IAAI,CAACX,MAAM,CAAC,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;IACjC,IAAI,CAACoB,UAAU,GAAG,KAAK;EACzB;EAEAS,WAAWA,CAAEC,IAAI,EAAE;IACjB,OAAOA,IAAI,CAACd,IAAI,KAAK,IAAI,CAACA,IAAI,IAC5BzB,QAAQ,CAACuC,IAAI,EAAE,IAAI,CAACb,IAAI,EAAE,IAAI,CAACO,MAAM,EAAE,IAAI,CAACd,IAAI,CAAC;EACrD;EAEAqB,OAAOA,CAAEC,IAAI,GAAG,EAAE,EAAE;IAClB,IAAI,IAAI,CAAC7B,YAAY,CAAC,EAAE;MACtB,OAAO,IAAI,CAACA,YAAY,CAAC;IAC3B;IAEA,OAAO,IAAI,CAACA,YAAY,CAAC,GAAG,IAAI,CAACD,QAAQ,CAAC,CAAC8B,IAAI,CAAC;EAClD;;EAEA;EACA,CAAC9B,QAAQ,EAAG8B,IAAI,EAAE;IAChB,MAAM;MAAEb,KAAK;MAAET,IAAI;MAAEuB;IAAQ,CAAC,GAAG,IAAI;IACrC,OAAO;MACLf,IAAI,EAAE,IAAI,CAACA,IAAI;MACfF,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,IAAI,EAAE,IAAI,CAACA,IAAI;MACf,IAAIgB,OAAO,GAAG;QAAEA;MAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MAC/B,IAAId,KAAK,GAAG;QAAEA;MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;MAC3B,IAAIT,IAAI,GAAG;QAAEA,IAAI,EAAEA,IAAI,CAACqB,OAAO,CAAC,IAAI,EAAEC,IAAI;MAAE,CAAC,GAAG,CAAC,CAAC;IACpD,CAAC;EACH;EAEA,IAAIC,OAAOA,CAAA,EAAI;IACb,IAAI,CAAC,IAAI,CAACvB,IAAI,EAAE;MACd,OAAO,KAAK;IACd;IACA,MAAM;MAAEwB,OAAO,EAAE;QAAEC,kBAAkB,GAAG;MAAG;IAAE,CAAC,GAAG,IAAI,CAACzB,IAAI;IAC1D,OAAOyB,kBAAkB,CAACC,QAAQ,CAAC,IAAI,CAACpB,IAAI,CAAC;EAC/C;EAEA,IAAIqB,SAASA,CAAA,EAAI;IACf,OAAO,IAAI,CAAC1C,KAAK,CAAC,KAAK,WAAW;EACpC;EAEA,IAAI2C,IAAIA,CAAA,EAAI;IACV,OAAO,IAAI,CAAC3C,KAAK,CAAC,KAAK,MAAM;EAC/B;EAEA,IAAI4C,GAAGA,CAAA,EAAI;IACT,OAAO,IAAI,CAAC5C,KAAK,CAAC,KAAK,KAAK;EAC9B;EAEA,IAAI6C,QAAQA,CAAA,EAAI;IACd,OAAO,IAAI,CAAC7C,KAAK,CAAC,KAAK,UAAU,IAAI,IAAI,CAACA,KAAK,CAAC,KAAK,cAAc;EACrE;EAEA,IAAI8C,IAAIA,CAAA,EAAI;IACV,OAAO,IAAI,CAAC9C,KAAK,CAAC,KAAK,MAAM,IAAI,IAAI,CAACA,KAAK,CAAC,KAAK,cAAc;EACjE;EAEA,IAAIuB,IAAIA,CAAA,EAAI;IACV,OAAO,IAAI,CAACvB,KAAK,CAAC;EACpB;EAEA,IAAIqB,IAAIA,CAAA,EAAI;IACV,OAAO,IAAI,CAAClB,KAAK,CAAC;EACpB;EAEA,IAAImB,IAAIA,CAAA,EAAI;IACV,OAAO,IAAI,CAACrB,KAAK,CAAC;EACpB;EAEA,IAAI4B,MAAMA,CAAA,EAAI;IACZ,OAAO,IAAI,CAAC3B,OAAO,CAAC;EACtB;EAEA,IAAI6C,KAAKA,CAAA,EAAI;IACX,OAAO,CAAC,IAAI,CAACvB,KAAK;EACpB;EAEA,IAAIwB,OAAOA,CAAA,EAAI;IACb,OAAO,IAAI,CAACxB,KAAK,KAAK,SAAS;EACjC;EAEA,IAAIyB,OAAOA,CAAA,EAAI;IACb,OAAO,IAAI,CAACzB,KAAK,KAAK,SAAS;EACjC;EAEA,IAAI0B,SAASA,CAAA,EAAI;IACf,OAAO,IAAI,CAAC1B,KAAK,KAAK,YAAY;EACpC;EAEA,IAAIA,KAAKA,CAAA,EAAI;IACX,IAAI,CAACpB,MAAM,CAAC,GAAG,IAAI,CAACA,MAAM,CAAC,IAAI,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;IACjD,OAAO,IAAI,CAACD,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAACA,MAAM,CAAC;EACpD;EAEA,CAACC,UAAU,IAAK;IACd,OAAO,CAAC,IAAI,CAACN,GAAG,CAAC,GAAI,IAAI,CAAC8C,QAAQ,GAAG,IAAI,GAAG,SAAS,GACjD,IAAI,CAACC,IAAI,IAAI,IAAI,CAAC/B,IAAI,KAAK,IAAI,CAACG,EAAE,CAACiC,MAAM,IAAI,CAAC,IAAI,CAACpC,IAAI,CAACqC,KAAK,GAAG,YAAY,GAC5E,CAAC,IAAI,CAAClB,WAAW,CAAC,IAAI,CAAChB,EAAE,CAAC,GAAG,SAAS,GACtC,IAAI;EACV;EAEAmC,MAAMA,CAAEC,IAAI,GAAG,KAAK,EAAE;IACpB,IAAI,CAAC9C,YAAY,CAAC,GAAG,IAAI;IACzB,MAAM+C,KAAK,GAAG,IAAI,CAAC1D,KAAK,CAAC,CAAC2D,OAAO,CAAC,IAAI,CAACnC,IAAI,CAAC;IAC5C,IAAIkC,KAAK,KAAK,IAAI,CAACxD,GAAG,CAAC,EAAE;MACvB,IAAI,IAAI,CAACA,GAAG,CAAC,EAAE;QACb,IAAI,CAACA,GAAG,CAAC,CAAC0D,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC;MAChC;MACA,IAAI,CAAC3D,GAAG,CAAC,GAAGwD,KAAK;MACjB,IAAI,CAACnD,MAAM,CAAC,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;MACjC,IAAI,IAAI,CAACN,GAAG,CAAC,EAAE;QACb,IAAI,CAACA,GAAG,CAAC,CAAC4D,SAAS,CAAC,IAAI,CAAC;MAC3B;IACF,CAAC,MAAM,IAAIL,IAAI,EAAE;MACf,IAAI,CAAClD,MAAM,CAAC,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;IACnC;EACF;EAEAuD,MAAMA,CAAA,EAAI;IACR,IAAI,CAACpD,YAAY,CAAC,GAAG,IAAI;IACzB,IAAI,IAAI,CAACT,GAAG,CAAC,EAAE;MACb,IAAI,CAACA,GAAG,CAAC,CAAC0D,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC;IAChC;IACA,IAAI,CAAC7D,KAAK,CAAC,CAACgE,QAAQ,CAACH,MAAM,CAAC,IAAI,CAACrC,IAAI,CAAC;IACtC,IAAI,CAACtB,GAAG,CAAC,GAAG,IAAI;IAChB,IAAI,CAACK,MAAM,CAAC,GAAG,UAAU;IACzB,IAAI,CAACP,KAAK,CAAC,GAAG,IAAI;EACpB;EAEA,CAACS,QAAQ,EAAG6B,IAAI,EAAE;IAChB,IAAI,CAAC3B,YAAY,CAAC,GAAG,IAAI;IACzB,IAAI,CAACX,KAAK,CAAC,GAAGsC,IAAI;IAClB,IAAIA,IAAI,CAAC0B,QAAQ,CAAC7B,GAAG,CAAC,IAAI,CAACX,IAAI,CAAC,EAAE;MAChCc,IAAI,CAAC0B,QAAQ,CAACC,GAAG,CAAC,IAAI,CAACzC,IAAI,CAAC,CAACuC,MAAM,CAAC,CAAC;IACvC;IACAzB,IAAI,CAAC4B,UAAU,CAAC,IAAI,CAAC;IACrB,IAAI,CAACV,MAAM,CAAC,CAAC;EACf;EAEA,IAAItC,IAAIA,CAAA,EAAI;IACV,OAAO,IAAI,CAAClB,KAAK,CAAC;EACpB;EAEA,IAAIqB,EAAEA,CAAA,EAAI;IACR,OAAO,IAAI,CAACnB,GAAG,CAAC;EAClB;EAEAiE,MAAMA,CAAA,EAAI;IACR,OAAOpD,aAAa,CAAC,IAAI,CAAC;EAC5B;EAEA,CAACnB,IAAI,CAACwE,OAAO,CAACC,MAAM,IAAK;IACvB,OAAO,IAAI,CAACF,MAAM,CAAC,CAAC;EACtB;AACF;AAEAtC,IAAI,CAACjB,KAAK,GAAG,CAAC,GAAGA,KAAK,CAAC;AACvBiB,IAAI,CAACyC,MAAM,GAAG,CACZ,UAAU,EACV,SAAS,EACT,YAAY,EACZ,SAAS,CACV;AAEDC,MAAM,CAACC,OAAO,GAAG3C,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}