{"ast":null,"code":"'use strict';\n\nconst npmFetch = require('npm-registry-fetch');\nmodule.exports = search;\nfunction search(query, opts) {\n  return search.stream(query, opts).collect();\n}\nsearch.stream = searchStream;\nfunction searchStream(query, opts = {}) {\n  opts = {\n    detailed: false,\n    limit: 20,\n    from: 0,\n    quality: 0.65,\n    popularity: 0.98,\n    maintenance: 0.5,\n    ...opts.opts,\n    // this is to support the cli's --searchopts parameter\n    ...opts\n  };\n  switch (opts.sortBy) {\n    case 'optimal':\n      {\n        opts.quality = 0.65;\n        opts.popularity = 0.98;\n        opts.maintenance = 0.5;\n        break;\n      }\n    case 'quality':\n      {\n        opts.quality = 1;\n        opts.popularity = 0;\n        opts.maintenance = 0;\n        break;\n      }\n    case 'popularity':\n      {\n        opts.quality = 0;\n        opts.popularity = 1;\n        opts.maintenance = 0;\n        break;\n      }\n    case 'maintenance':\n      {\n        opts.quality = 0;\n        opts.popularity = 0;\n        opts.maintenance = 1;\n        break;\n      }\n  }\n  return npmFetch.json.stream('/-/v1/search', 'objects.*', {\n    ...opts,\n    query: {\n      text: Array.isArray(query) ? query.join(' ') : query,\n      size: opts.limit,\n      from: opts.from,\n      quality: opts.quality,\n      popularity: opts.popularity,\n      maintenance: opts.maintenance\n    },\n    mapJSON: obj => {\n      if (obj.package.date) {\n        obj.package.date = new Date(obj.package.date);\n      }\n      if (opts.detailed) {\n        return obj;\n      } else {\n        return obj.package;\n      }\n    }\n  });\n}","map":{"version":3,"names":["npmFetch","require","module","exports","search","query","opts","stream","collect","searchStream","detailed","limit","from","quality","popularity","maintenance","sortBy","json","text","Array","isArray","join","size","mapJSON","obj","package","date","Date"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/libnpmsearch/index.js"],"sourcesContent":["'use strict'\n\nconst npmFetch = require('npm-registry-fetch')\n\nmodule.exports = search\nfunction search (query, opts) {\n  return search.stream(query, opts).collect()\n}\nsearch.stream = searchStream\nfunction searchStream (query, opts = {}) {\n  opts = {\n    detailed: false,\n    limit: 20,\n    from: 0,\n    quality: 0.65,\n    popularity: 0.98,\n    maintenance: 0.5,\n    ...opts.opts, // this is to support the cli's --searchopts parameter\n    ...opts\n  }\n\n  switch (opts.sortBy) {\n    case 'optimal': {\n      opts.quality = 0.65\n      opts.popularity = 0.98\n      opts.maintenance = 0.5\n      break\n    }\n    case 'quality': {\n      opts.quality = 1\n      opts.popularity = 0\n      opts.maintenance = 0\n      break\n    }\n    case 'popularity': {\n      opts.quality = 0\n      opts.popularity = 1\n      opts.maintenance = 0\n      break\n    }\n    case 'maintenance': {\n      opts.quality = 0\n      opts.popularity = 0\n      opts.maintenance = 1\n      break\n    }\n  }\n  return npmFetch.json.stream('/-/v1/search', 'objects.*',\n    {\n      ...opts,\n      query: {\n        text: Array.isArray(query) ? query.join(' ') : query,\n        size: opts.limit,\n        from: opts.from,\n        quality: opts.quality,\n        popularity: opts.popularity,\n        maintenance: opts.maintenance\n      },\n      mapJSON: (obj) => {\n        if (obj.package.date) {\n          obj.package.date = new Date(obj.package.date)\n        }\n        if (opts.detailed) {\n          return obj\n        } else {\n          return obj.package\n        }\n      }\n    }\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE9CC,MAAM,CAACC,OAAO,GAAGC,MAAM;AACvB,SAASA,MAAMA,CAAEC,KAAK,EAAEC,IAAI,EAAE;EAC5B,OAAOF,MAAM,CAACG,MAAM,CAACF,KAAK,EAAEC,IAAI,CAAC,CAACE,OAAO,CAAC,CAAC;AAC7C;AACAJ,MAAM,CAACG,MAAM,GAAGE,YAAY;AAC5B,SAASA,YAAYA,CAAEJ,KAAK,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACvCA,IAAI,GAAG;IACLI,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,GAAG;IAChB,GAAGT,IAAI,CAACA,IAAI;IAAE;IACd,GAAGA;EACL,CAAC;EAED,QAAQA,IAAI,CAACU,MAAM;IACjB,KAAK,SAAS;MAAE;QACdV,IAAI,CAACO,OAAO,GAAG,IAAI;QACnBP,IAAI,CAACQ,UAAU,GAAG,IAAI;QACtBR,IAAI,CAACS,WAAW,GAAG,GAAG;QACtB;MACF;IACA,KAAK,SAAS;MAAE;QACdT,IAAI,CAACO,OAAO,GAAG,CAAC;QAChBP,IAAI,CAACQ,UAAU,GAAG,CAAC;QACnBR,IAAI,CAACS,WAAW,GAAG,CAAC;QACpB;MACF;IACA,KAAK,YAAY;MAAE;QACjBT,IAAI,CAACO,OAAO,GAAG,CAAC;QAChBP,IAAI,CAACQ,UAAU,GAAG,CAAC;QACnBR,IAAI,CAACS,WAAW,GAAG,CAAC;QACpB;MACF;IACA,KAAK,aAAa;MAAE;QAClBT,IAAI,CAACO,OAAO,GAAG,CAAC;QAChBP,IAAI,CAACQ,UAAU,GAAG,CAAC;QACnBR,IAAI,CAACS,WAAW,GAAG,CAAC;QACpB;MACF;EACF;EACA,OAAOf,QAAQ,CAACiB,IAAI,CAACV,MAAM,CAAC,cAAc,EAAE,WAAW,EACrD;IACE,GAAGD,IAAI;IACPD,KAAK,EAAE;MACLa,IAAI,EAAEC,KAAK,CAACC,OAAO,CAACf,KAAK,CAAC,GAAGA,KAAK,CAACgB,IAAI,CAAC,GAAG,CAAC,GAAGhB,KAAK;MACpDiB,IAAI,EAAEhB,IAAI,CAACK,KAAK;MAChBC,IAAI,EAAEN,IAAI,CAACM,IAAI;MACfC,OAAO,EAAEP,IAAI,CAACO,OAAO;MACrBC,UAAU,EAAER,IAAI,CAACQ,UAAU;MAC3BC,WAAW,EAAET,IAAI,CAACS;IACpB,CAAC;IACDQ,OAAO,EAAGC,GAAG,IAAK;MAChB,IAAIA,GAAG,CAACC,OAAO,CAACC,IAAI,EAAE;QACpBF,GAAG,CAACC,OAAO,CAACC,IAAI,GAAG,IAAIC,IAAI,CAACH,GAAG,CAACC,OAAO,CAACC,IAAI,CAAC;MAC/C;MACA,IAAIpB,IAAI,CAACI,QAAQ,EAAE;QACjB,OAAOc,GAAG;MACZ,CAAC,MAAM;QACL,OAAOA,GAAG,CAACC,OAAO;MACpB;IACF;EACF,CACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}