{"ast":null,"code":"const reifyOutput = require('./reify-output.js');\nconst ini = require('ini');\nconst util = require('util');\nconst fs = require('fs');\nconst {\n  writeFile\n} = fs.promises || {\n  writeFile: util.promisify(fs.writeFile)\n};\nconst {\n  resolve\n} = require('path');\nconst reifyFinish = async (npm, arb) => {\n  await saveBuiltinConfig(npm, arb);\n  reifyOutput(npm, arb);\n};\nconst saveBuiltinConfig = async (npm, arb) => {\n  const {\n    options: {\n      global\n    },\n    actualTree\n  } = arb;\n  if (!global) return;\n\n  // if we are using a builtin config, and just installed npm as\n  // a top-level global package, we have to preserve that config.\n  const npmNode = actualTree.inventory.get('node_modules/npm');\n  if (!npmNode) return;\n  const builtinConf = npm.config.data.get('builtin');\n  if (builtinConf.loadError) return;\n  const content = ini.stringify(builtinConf.raw).trim() + '\\n';\n  await writeFile(resolve(npmNode.path, 'npmrc'), content);\n};\nmodule.exports = reifyFinish;","map":{"version":3,"names":["reifyOutput","require","ini","util","fs","writeFile","promises","promisify","resolve","reifyFinish","npm","arb","saveBuiltinConfig","options","global","actualTree","npmNode","inventory","get","builtinConf","config","data","loadError","content","stringify","raw","trim","path","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/utils/reify-finish.js"],"sourcesContent":["const reifyOutput = require('./reify-output.js')\nconst ini = require('ini')\nconst util = require('util')\nconst fs = require('fs')\nconst { writeFile } = fs.promises || { writeFile: util.promisify(fs.writeFile) }\nconst {resolve} = require('path')\n\nconst reifyFinish = async (npm, arb) => {\n  await saveBuiltinConfig(npm, arb)\n  reifyOutput(npm, arb)\n}\n\nconst saveBuiltinConfig = async (npm, arb) => {\n  const { options: { global }, actualTree } = arb\n  if (!global)\n    return\n\n  // if we are using a builtin config, and just installed npm as\n  // a top-level global package, we have to preserve that config.\n  const npmNode = actualTree.inventory.get('node_modules/npm')\n  if (!npmNode)\n    return\n\n  const builtinConf = npm.config.data.get('builtin')\n  if (builtinConf.loadError)\n    return\n\n  const content = ini.stringify(builtinConf.raw).trim() + '\\n'\n  await writeFile(resolve(npmNode.path, 'npmrc'), content)\n}\n\nmodule.exports = reifyFinish\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAChD,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,EAAE,GAAGH,OAAO,CAAC,IAAI,CAAC;AACxB,MAAM;EAAEI;AAAU,CAAC,GAAGD,EAAE,CAACE,QAAQ,IAAI;EAAED,SAAS,EAAEF,IAAI,CAACI,SAAS,CAACH,EAAE,CAACC,SAAS;AAAE,CAAC;AAChF,MAAM;EAACG;AAAO,CAAC,GAAGP,OAAO,CAAC,MAAM,CAAC;AAEjC,MAAMQ,WAAW,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EACtC,MAAMC,iBAAiB,CAACF,GAAG,EAAEC,GAAG,CAAC;EACjCX,WAAW,CAACU,GAAG,EAAEC,GAAG,CAAC;AACvB,CAAC;AAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAOF,GAAG,EAAEC,GAAG,KAAK;EAC5C,MAAM;IAAEE,OAAO,EAAE;MAAEC;IAAO,CAAC;IAAEC;EAAW,CAAC,GAAGJ,GAAG;EAC/C,IAAI,CAACG,MAAM,EACT;;EAEF;EACA;EACA,MAAME,OAAO,GAAGD,UAAU,CAACE,SAAS,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC5D,IAAI,CAACF,OAAO,EACV;EAEF,MAAMG,WAAW,GAAGT,GAAG,CAACU,MAAM,CAACC,IAAI,CAACH,GAAG,CAAC,SAAS,CAAC;EAClD,IAAIC,WAAW,CAACG,SAAS,EACvB;EAEF,MAAMC,OAAO,GAAGrB,GAAG,CAACsB,SAAS,CAACL,WAAW,CAACM,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC,GAAG,IAAI;EAC5D,MAAMrB,SAAS,CAACG,OAAO,CAACQ,OAAO,CAACW,IAAI,EAAE,OAAO,CAAC,EAAEJ,OAAO,CAAC;AAC1D,CAAC;AAEDK,MAAM,CAACC,OAAO,GAAGpB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}