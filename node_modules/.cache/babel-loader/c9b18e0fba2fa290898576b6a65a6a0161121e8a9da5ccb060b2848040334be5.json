{"ast":null,"code":"// use the defined flattening function, and copy over any scoped\n// registries and registry-specific \"nerfdart\" configs verbatim\n//\n// TODO: make these getters so that we only have to make dirty\n// the thing that changed, and then flatten the fields that\n// could have changed when a config.set is called.\n//\n// TODO: move nerfdart auth stuff into a nested object that\n// is only passed along to paths that end up calling npm-registry-fetch.\nconst definitions = require('./definitions.js');\nconst flatten = (obj, flat = {}) => {\n  for (const [key, val] of Object.entries(obj)) {\n    const def = definitions[key];\n    if (def && def.flatten) def.flatten(key, obj, flat);else if (/@.*:registry$/i.test(key) || /^\\/\\//.test(key)) flat[key] = val;\n  }\n\n  // XXX make this the bin/npm-cli.js file explicitly instead\n  // otherwise using npm programmatically is a bit of a pain.\n  flat.npmBin = require.main ? require.main.filename : /* istanbul ignore next - not configurable property */undefined;\n  flat.nodeBin = process.env.NODE || process.execPath;\n\n  // XXX should this be sha512?  is it even relevant?\n  flat.hashAlgorithm = 'sha1';\n  return flat;\n};\nmodule.exports = flatten;","map":{"version":3,"names":["definitions","require","flatten","obj","flat","key","val","Object","entries","def","test","npmBin","main","filename","undefined","nodeBin","process","env","NODE","execPath","hashAlgorithm","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/utils/config/flatten.js"],"sourcesContent":["// use the defined flattening function, and copy over any scoped\n// registries and registry-specific \"nerfdart\" configs verbatim\n//\n// TODO: make these getters so that we only have to make dirty\n// the thing that changed, and then flatten the fields that\n// could have changed when a config.set is called.\n//\n// TODO: move nerfdart auth stuff into a nested object that\n// is only passed along to paths that end up calling npm-registry-fetch.\nconst definitions = require('./definitions.js')\nconst flatten = (obj, flat = {}) => {\n  for (const [key, val] of Object.entries(obj)) {\n    const def = definitions[key]\n    if (def && def.flatten)\n      def.flatten(key, obj, flat)\n    else if (/@.*:registry$/i.test(key) || /^\\/\\//.test(key))\n      flat[key] = val\n  }\n\n  // XXX make this the bin/npm-cli.js file explicitly instead\n  // otherwise using npm programmatically is a bit of a pain.\n  flat.npmBin = require.main ? require.main.filename\n    : /* istanbul ignore next - not configurable property */ undefined\n  flat.nodeBin = process.env.NODE || process.execPath\n\n  // XXX should this be sha512?  is it even relevant?\n  flat.hashAlgorithm = 'sha1'\n\n  return flat\n}\n\nmodule.exports = flatten\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC/C,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;EAClC,KAAK,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,GAAG,CAAC,EAAE;IAC5C,MAAMM,GAAG,GAAGT,WAAW,CAACK,GAAG,CAAC;IAC5B,IAAII,GAAG,IAAIA,GAAG,CAACP,OAAO,EACpBO,GAAG,CAACP,OAAO,CAACG,GAAG,EAAEF,GAAG,EAAEC,IAAI,CAAC,MACxB,IAAI,gBAAgB,CAACM,IAAI,CAACL,GAAG,CAAC,IAAI,OAAO,CAACK,IAAI,CAACL,GAAG,CAAC,EACtDD,IAAI,CAACC,GAAG,CAAC,GAAGC,GAAG;EACnB;;EAEA;EACA;EACAF,IAAI,CAACO,MAAM,GAAGV,OAAO,CAACW,IAAI,GAAGX,OAAO,CAACW,IAAI,CAACC,QAAQ,GAC9C,sDAAuDC,SAAS;EACpEV,IAAI,CAACW,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAIF,OAAO,CAACG,QAAQ;;EAEnD;EACAf,IAAI,CAACgB,aAAa,GAAG,MAAM;EAE3B,OAAOhB,IAAI;AACb,CAAC;AAEDiB,MAAM,CAACC,OAAO,GAAGpB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}