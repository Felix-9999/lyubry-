{"ast":null,"code":"const isObj = val => !!val && !Array.isArray(val) && typeof val === 'object';\nconst compare = (ak, bk, prefKeys) => prefKeys.includes(ak) && !prefKeys.includes(bk) ? -1 : prefKeys.includes(bk) && !prefKeys.includes(ak) ? 1 : prefKeys.includes(ak) && prefKeys.includes(bk) ? prefKeys.indexOf(ak) - prefKeys.indexOf(bk) : ak.localeCompare(bk, 'en');\nconst sort = (replacer, seen) => (key, val) => {\n  const prefKeys = Array.isArray(replacer) ? replacer : [];\n  if (typeof replacer === 'function') val = replacer(key, val);\n  if (!isObj(val)) return val;\n  if (seen.has(val)) return seen.get(val);\n  const ret = Object.entries(val).sort(([ak, av], [bk, bv]) => isObj(av) === isObj(bv) ? compare(ak, bk, prefKeys) : isObj(av) ? 1 : -1).reduce((set, [k, v]) => {\n    set[k] = v;\n    return set;\n  }, {});\n  seen.set(val, ret);\n  return ret;\n};\nmodule.exports = (obj, replacer, space = 2) => JSON.stringify(obj, sort(replacer, new Map()), space) + (space ? '\\n' : '');","map":{"version":3,"names":["isObj","val","Array","isArray","compare","ak","bk","prefKeys","includes","indexOf","localeCompare","sort","replacer","seen","key","has","get","ret","Object","entries","av","bv","reduce","set","k","v","module","exports","obj","space","JSON","stringify","Map"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/json-stringify-nice/index.js"],"sourcesContent":["const isObj = val => !!val && !Array.isArray(val) && typeof val === 'object'\n\nconst compare = (ak, bk, prefKeys) =>\n  prefKeys.includes(ak) && !prefKeys.includes(bk) ? -1\n  : prefKeys.includes(bk) && !prefKeys.includes(ak) ? 1\n  : prefKeys.includes(ak) && prefKeys.includes(bk)\n    ? prefKeys.indexOf(ak) - prefKeys.indexOf(bk)\n    : ak.localeCompare(bk, 'en')\n\nconst sort = (replacer, seen) => (key, val) => {\n  const prefKeys = Array.isArray(replacer) ? replacer : []\n\n  if (typeof replacer === 'function')\n    val = replacer(key, val)\n\n  if (!isObj(val))\n    return val\n\n  if (seen.has(val))\n    return seen.get(val)\n\n  const ret = Object.entries(val).sort(\n    ([ak, av], [bk, bv]) =>\n      isObj(av) === isObj(bv) ? compare(ak, bk, prefKeys)\n      : isObj(av) ? 1\n      : -1\n  ).reduce((set, [k, v]) => {\n    set[k] = v\n    return set\n  }, {})\n\n  seen.set(val, ret)\n  return ret\n}\n\nmodule.exports = (obj, replacer, space = 2) =>\n  JSON.stringify(obj, sort(replacer, new Map()), space)\n  + (space ? '\\n' : '')\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,GAAG,IAAI,CAAC,CAACA,GAAG,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,QAAQ;AAE5E,MAAMG,OAAO,GAAGA,CAACC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,KAC/BA,QAAQ,CAACC,QAAQ,CAACH,EAAE,CAAC,IAAI,CAACE,QAAQ,CAACC,QAAQ,CAACF,EAAE,CAAC,GAAG,CAAC,CAAC,GAClDC,QAAQ,CAACC,QAAQ,CAACF,EAAE,CAAC,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAACH,EAAE,CAAC,GAAG,CAAC,GACnDE,QAAQ,CAACC,QAAQ,CAACH,EAAE,CAAC,IAAIE,QAAQ,CAACC,QAAQ,CAACF,EAAE,CAAC,GAC5CC,QAAQ,CAACE,OAAO,CAACJ,EAAE,CAAC,GAAGE,QAAQ,CAACE,OAAO,CAACH,EAAE,CAAC,GAC3CD,EAAE,CAACK,aAAa,CAACJ,EAAE,EAAE,IAAI,CAAC;AAEhC,MAAMK,IAAI,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK,CAACC,GAAG,EAAEb,GAAG,KAAK;EAC7C,MAAMM,QAAQ,GAAGL,KAAK,CAACC,OAAO,CAACS,QAAQ,CAAC,GAAGA,QAAQ,GAAG,EAAE;EAExD,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAChCX,GAAG,GAAGW,QAAQ,CAACE,GAAG,EAAEb,GAAG,CAAC;EAE1B,IAAI,CAACD,KAAK,CAACC,GAAG,CAAC,EACb,OAAOA,GAAG;EAEZ,IAAIY,IAAI,CAACE,GAAG,CAACd,GAAG,CAAC,EACf,OAAOY,IAAI,CAACG,GAAG,CAACf,GAAG,CAAC;EAEtB,MAAMgB,GAAG,GAAGC,MAAM,CAACC,OAAO,CAAClB,GAAG,CAAC,CAACU,IAAI,CAClC,CAAC,CAACN,EAAE,EAAEe,EAAE,CAAC,EAAE,CAACd,EAAE,EAAEe,EAAE,CAAC,KACjBrB,KAAK,CAACoB,EAAE,CAAC,KAAKpB,KAAK,CAACqB,EAAE,CAAC,GAAGjB,OAAO,CAACC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,CAAC,GACjDP,KAAK,CAACoB,EAAE,CAAC,GAAG,CAAC,GACb,CAAC,CACP,CAAC,CAACE,MAAM,CAAC,CAACC,GAAG,EAAE,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK;IACxBF,GAAG,CAACC,CAAC,CAAC,GAAGC,CAAC;IACV,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAENV,IAAI,CAACU,GAAG,CAACtB,GAAG,EAAEgB,GAAG,CAAC;EAClB,OAAOA,GAAG;AACZ,CAAC;AAEDS,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEhB,QAAQ,EAAEiB,KAAK,GAAG,CAAC,KACxCC,IAAI,CAACC,SAAS,CAACH,GAAG,EAAEjB,IAAI,CAACC,QAAQ,EAAE,IAAIoB,GAAG,CAAC,CAAC,CAAC,EAAEH,KAAK,CAAC,IAClDA,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}