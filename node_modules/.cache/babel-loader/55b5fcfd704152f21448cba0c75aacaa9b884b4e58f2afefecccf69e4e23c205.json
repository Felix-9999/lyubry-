{"ast":null,"code":"const log = require('npmlog');\nconst getAuth = require('npm-registry-fetch/auth.js');\nconst npmFetch = require('npm-registry-fetch');\nconst BaseCommand = require('./base-command.js');\nclass Logout extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Log out of the registry';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'logout';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['registry', 'scope'];\n  }\n  exec(args, cb) {\n    this.logout(args).then(() => cb()).catch(cb);\n  }\n  async logout(args) {\n    const registry = this.npm.config.get('registry');\n    const scope = this.npm.config.get('scope');\n    const regRef = scope ? `${scope}:registry` : 'registry';\n    const reg = this.npm.config.get(regRef) || registry;\n    const auth = getAuth(reg, this.npm.flatOptions);\n    if (auth.token) {\n      log.verbose('logout', `clearing token for ${reg}`);\n      await npmFetch(`/-/user/token/${encodeURIComponent(auth.token)}`, {\n        ...this.npm.flatOptions,\n        method: 'DELETE',\n        ignoreBody: true\n      });\n    } else if (auth.isBasicAuth) log.verbose('logout', `clearing user credentials for ${reg}`);else {\n      const msg = `not logged in to ${reg}, so can't log out!`;\n      throw Object.assign(new Error(msg), {\n        code: 'ENEEDAUTH'\n      });\n    }\n    if (scope) this.npm.config.delete(regRef, 'user');\n    this.npm.config.clearCredentialsByURI(reg);\n    await this.npm.config.save('user');\n  }\n}\nmodule.exports = Logout;","map":{"version":3,"names":["log","require","getAuth","npmFetch","BaseCommand","Logout","description","name","params","exec","args","cb","logout","then","catch","registry","npm","config","get","scope","regRef","reg","auth","flatOptions","token","verbose","encodeURIComponent","method","ignoreBody","isBasicAuth","msg","Object","assign","Error","code","delete","clearCredentialsByURI","save","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/logout.js"],"sourcesContent":["const log = require('npmlog')\nconst getAuth = require('npm-registry-fetch/auth.js')\nconst npmFetch = require('npm-registry-fetch')\nconst BaseCommand = require('./base-command.js')\n\nclass Logout extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Log out of the registry'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'logout'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'registry',\n      'scope',\n    ]\n  }\n\n  exec (args, cb) {\n    this.logout(args).then(() => cb()).catch(cb)\n  }\n\n  async logout (args) {\n    const registry = this.npm.config.get('registry')\n    const scope = this.npm.config.get('scope')\n    const regRef = scope ? `${scope}:registry` : 'registry'\n    const reg = this.npm.config.get(regRef) || registry\n\n    const auth = getAuth(reg, this.npm.flatOptions)\n\n    if (auth.token) {\n      log.verbose('logout', `clearing token for ${reg}`)\n      await npmFetch(`/-/user/token/${encodeURIComponent(auth.token)}`, {\n        ...this.npm.flatOptions,\n        method: 'DELETE',\n        ignoreBody: true,\n      })\n    } else if (auth.isBasicAuth)\n      log.verbose('logout', `clearing user credentials for ${reg}`)\n    else {\n      const msg = `not logged in to ${reg}, so can't log out!`\n      throw Object.assign(new Error(msg), { code: 'ENEEDAUTH' })\n    }\n\n    if (scope)\n      this.npm.config.delete(regRef, 'user')\n\n    this.npm.config.clearCredentialsByURI(reg)\n\n    await this.npm.config.save('user')\n  }\n}\nmodule.exports = Logout\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC7B,MAAMC,OAAO,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACrD,MAAME,QAAQ,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAMG,WAAW,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAEhD,MAAMI,MAAM,SAASD,WAAW,CAAC;EAC/B;EACA,WAAWE,WAAWA,CAAA,EAAI;IACxB,OAAO,yBAAyB;EAClC;;EAEA;EACA,WAAWC,IAAIA,CAAA,EAAI;IACjB,OAAO,QAAQ;EACjB;;EAEA;EACA,WAAWC,MAAMA,CAAA,EAAI;IACnB,OAAO,CACL,UAAU,EACV,OAAO,CACR;EACH;EAEAC,IAAIA,CAAEC,IAAI,EAAEC,EAAE,EAAE;IACd,IAAI,CAACC,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,MAAMF,EAAE,CAAC,CAAC,CAAC,CAACG,KAAK,CAACH,EAAE,CAAC;EAC9C;EAEA,MAAMC,MAAMA,CAAEF,IAAI,EAAE;IAClB,MAAMK,QAAQ,GAAG,IAAI,CAACC,GAAG,CAACC,MAAM,CAACC,GAAG,CAAC,UAAU,CAAC;IAChD,MAAMC,KAAK,GAAG,IAAI,CAACH,GAAG,CAACC,MAAM,CAACC,GAAG,CAAC,OAAO,CAAC;IAC1C,MAAME,MAAM,GAAGD,KAAK,GAAG,GAAGA,KAAK,WAAW,GAAG,UAAU;IACvD,MAAME,GAAG,GAAG,IAAI,CAACL,GAAG,CAACC,MAAM,CAACC,GAAG,CAACE,MAAM,CAAC,IAAIL,QAAQ;IAEnD,MAAMO,IAAI,GAAGpB,OAAO,CAACmB,GAAG,EAAE,IAAI,CAACL,GAAG,CAACO,WAAW,CAAC;IAE/C,IAAID,IAAI,CAACE,KAAK,EAAE;MACdxB,GAAG,CAACyB,OAAO,CAAC,QAAQ,EAAE,sBAAsBJ,GAAG,EAAE,CAAC;MAClD,MAAMlB,QAAQ,CAAC,iBAAiBuB,kBAAkB,CAACJ,IAAI,CAACE,KAAK,CAAC,EAAE,EAAE;QAChE,GAAG,IAAI,CAACR,GAAG,CAACO,WAAW;QACvBI,MAAM,EAAE,QAAQ;QAChBC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIN,IAAI,CAACO,WAAW,EACzB7B,GAAG,CAACyB,OAAO,CAAC,QAAQ,EAAE,iCAAiCJ,GAAG,EAAE,CAAC,MAC1D;MACH,MAAMS,GAAG,GAAG,oBAAoBT,GAAG,qBAAqB;MACxD,MAAMU,MAAM,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACH,GAAG,CAAC,EAAE;QAAEI,IAAI,EAAE;MAAY,CAAC,CAAC;IAC5D;IAEA,IAAIf,KAAK,EACP,IAAI,CAACH,GAAG,CAACC,MAAM,CAACkB,MAAM,CAACf,MAAM,EAAE,MAAM,CAAC;IAExC,IAAI,CAACJ,GAAG,CAACC,MAAM,CAACmB,qBAAqB,CAACf,GAAG,CAAC;IAE1C,MAAM,IAAI,CAACL,GAAG,CAACC,MAAM,CAACoB,IAAI,CAAC,MAAM,CAAC;EACpC;AACF;AACAC,MAAM,CAACC,OAAO,GAAGlC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}