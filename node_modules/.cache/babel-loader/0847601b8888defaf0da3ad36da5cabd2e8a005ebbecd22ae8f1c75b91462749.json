{"ast":null,"code":"const npa = require('npm-package-arg');\n\n// extracted from npm v6 lib/install/realize-shrinkwrap-specifier.js\nconst specFromLock = (name, lock, where) => {\n  try {\n    if (lock.version) {\n      const spec = npa.resolve(name, lock.version, where);\n      if (lock.integrity || spec.type === 'git') {\n        return spec;\n      }\n    }\n    if (lock.from) {\n      // legacy metadata includes \"from\", but not integrity\n      const spec = npa.resolve(name, lock.from, where);\n      if (spec.registry && lock.version) {\n        return npa.resolve(name, lock.version, where);\n      } else if (!lock.resolved) {\n        return spec;\n      }\n    }\n    if (lock.resolved) {\n      return npa.resolve(name, lock.resolved, where);\n    }\n  } catch (_) {}\n  try {\n    return npa.resolve(name, lock.version, where);\n  } catch (_) {\n    return {};\n  }\n};\nmodule.exports = specFromLock;","map":{"version":3,"names":["npa","require","specFromLock","name","lock","where","version","spec","resolve","integrity","type","from","registry","resolved","_","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/arborist/lib/spec-from-lock.js"],"sourcesContent":["const npa = require('npm-package-arg')\n\n// extracted from npm v6 lib/install/realize-shrinkwrap-specifier.js\nconst specFromLock = (name, lock, where) => {\n  try {\n    if (lock.version) {\n      const spec = npa.resolve(name, lock.version, where)\n      if (lock.integrity || spec.type === 'git') {\n        return spec\n      }\n    }\n    if (lock.from) {\n      // legacy metadata includes \"from\", but not integrity\n      const spec = npa.resolve(name, lock.from, where)\n      if (spec.registry && lock.version) {\n        return npa.resolve(name, lock.version, where)\n      } else if (!lock.resolved) {\n        return spec\n      }\n    }\n    if (lock.resolved) {\n      return npa.resolve(name, lock.resolved, where)\n    }\n  } catch (_) { }\n  try {\n    return npa.resolve(name, lock.version, where)\n  } catch (_) {\n    return {}\n  }\n}\n\nmodule.exports = specFromLock\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAEtC;AACA,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,KAAK;EAC1C,IAAI;IACF,IAAID,IAAI,CAACE,OAAO,EAAE;MAChB,MAAMC,IAAI,GAAGP,GAAG,CAACQ,OAAO,CAACL,IAAI,EAAEC,IAAI,CAACE,OAAO,EAAED,KAAK,CAAC;MACnD,IAAID,IAAI,CAACK,SAAS,IAAIF,IAAI,CAACG,IAAI,KAAK,KAAK,EAAE;QACzC,OAAOH,IAAI;MACb;IACF;IACA,IAAIH,IAAI,CAACO,IAAI,EAAE;MACb;MACA,MAAMJ,IAAI,GAAGP,GAAG,CAACQ,OAAO,CAACL,IAAI,EAAEC,IAAI,CAACO,IAAI,EAAEN,KAAK,CAAC;MAChD,IAAIE,IAAI,CAACK,QAAQ,IAAIR,IAAI,CAACE,OAAO,EAAE;QACjC,OAAON,GAAG,CAACQ,OAAO,CAACL,IAAI,EAAEC,IAAI,CAACE,OAAO,EAAED,KAAK,CAAC;MAC/C,CAAC,MAAM,IAAI,CAACD,IAAI,CAACS,QAAQ,EAAE;QACzB,OAAON,IAAI;MACb;IACF;IACA,IAAIH,IAAI,CAACS,QAAQ,EAAE;MACjB,OAAOb,GAAG,CAACQ,OAAO,CAACL,IAAI,EAAEC,IAAI,CAACS,QAAQ,EAAER,KAAK,CAAC;IAChD;EACF,CAAC,CAAC,OAAOS,CAAC,EAAE,CAAE;EACd,IAAI;IACF,OAAOd,GAAG,CAACQ,OAAO,CAACL,IAAI,EAAEC,IAAI,CAACE,OAAO,EAAED,KAAK,CAAC;EAC/C,CAAC,CAAC,OAAOS,CAAC,EAAE;IACV,OAAO,CAAC,CAAC;EACX;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGd,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}