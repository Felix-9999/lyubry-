{"ast":null,"code":"var QRMode = require('./QRMode');\nvar QRPolynomial = require('./QRPolynomial');\nvar QRMath = require('./QRMath');\nvar QRMaskPattern = require('./QRMaskPattern');\nvar QRUtil = {\n  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n  getBCHTypeInfo: function (data) {\n    var d = data << 10;\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n    }\n    return (data << 10 | d) ^ QRUtil.G15_MASK;\n  },\n  getBCHTypeNumber: function (data) {\n    var d = data << 12;\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n    }\n    return data << 12 | d;\n  },\n  getBCHDigit: function (data) {\n    var digit = 0;\n    while (data !== 0) {\n      digit++;\n      data >>>= 1;\n    }\n    return digit;\n  },\n  getPatternPosition: function (typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n  getMask: function (maskPattern, i, j) {\n    switch (maskPattern) {\n      case QRMaskPattern.PATTERN000:\n        return (i + j) % 2 === 0;\n      case QRMaskPattern.PATTERN001:\n        return i % 2 === 0;\n      case QRMaskPattern.PATTERN010:\n        return j % 3 === 0;\n      case QRMaskPattern.PATTERN011:\n        return (i + j) % 3 === 0;\n      case QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n      case QRMaskPattern.PATTERN101:\n        return i * j % 2 + i * j % 3 === 0;\n      case QRMaskPattern.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 === 0;\n      case QRMaskPattern.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 === 0;\n      default:\n        throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n  },\n  getErrorCorrectPolynomial: function (errorCorrectLength) {\n    var a = new QRPolynomial([1], 0);\n    for (var i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n    }\n    return a;\n  },\n  getLengthInBits: function (mode, type) {\n    if (1 <= type && type < 10) {\n      // 1 - 9\n\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 10;\n        case QRMode.MODE_ALPHA_NUM:\n          return 9;\n        case QRMode.MODE_8BIT_BYTE:\n          return 8;\n        case QRMode.MODE_KANJI:\n          return 8;\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 27) {\n      // 10 - 26\n\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 12;\n        case QRMode.MODE_ALPHA_NUM:\n          return 11;\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n        case QRMode.MODE_KANJI:\n          return 10;\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 41) {\n      // 27 - 40\n\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 14;\n        case QRMode.MODE_ALPHA_NUM:\n          return 13;\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n        case QRMode.MODE_KANJI:\n          return 12;\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else {\n      throw new Error(\"type:\" + type);\n    }\n  },\n  getLostPoint: function (qrCode) {\n    var moduleCount = qrCode.getModuleCount();\n    var lostPoint = 0;\n    var row = 0;\n    var col = 0;\n\n    // LEVEL1\n\n    for (row = 0; row < moduleCount; row++) {\n      for (col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var dark = qrCode.isDark(row, col);\n        for (var r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n          for (var c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n            if (r === 0 && c === 0) {\n              continue;\n            }\n            if (dark === qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n        if (sameCount > 5) {\n          lostPoint += 3 + sameCount - 5;\n        }\n      }\n    }\n\n    // LEVEL2\n\n    for (row = 0; row < moduleCount - 1; row++) {\n      for (col = 0; col < moduleCount - 1; col++) {\n        var count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n        if (count === 0 || count === 4) {\n          lostPoint += 3;\n        }\n      }\n    }\n\n    // LEVEL3\n\n    for (row = 0; row < moduleCount; row++) {\n      for (col = 0; col < moduleCount - 6; col++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n          lostPoint += 40;\n        }\n      }\n    }\n    for (col = 0; col < moduleCount; col++) {\n      for (row = 0; row < moduleCount - 6; row++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    // LEVEL4\n\n    var darkCount = 0;\n    for (col = 0; col < moduleCount; col++) {\n      for (row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  }\n};\nmodule.exports = QRUtil;","map":{"version":3,"names":["QRMode","require","QRPolynomial","QRMath","QRMaskPattern","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHTypeInfo","data","d","getBCHDigit","getBCHTypeNumber","digit","getPatternPosition","typeNumber","getMask","maskPattern","i","j","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","Math","floor","PATTERN101","PATTERN110","PATTERN111","Error","getErrorCorrectPolynomial","errorCorrectLength","a","multiply","gexp","getLengthInBits","mode","type","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","count","darkCount","ratio","abs","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/qrcode-terminal/vendor/QRCode/QRUtil.js"],"sourcesContent":["var QRMode = require('./QRMode');\nvar QRPolynomial = require('./QRPolynomial');\nvar QRMath = require('./QRMath');\nvar QRMaskPattern = require('./QRMaskPattern');\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],        \n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)    | (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n        var d = data << 10;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n            d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) );    \n        }\n        return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n        var d = data << 12;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n            d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) );    \n        }\n        return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n        var digit = 0;\n\n        while (data !== 0) {\n            digit++;\n            data >>>= 1;\n        }\n\n        return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n        \n        switch (maskPattern) {\n            \n        case QRMaskPattern.PATTERN000 : return (i + j) % 2 === 0;\n        case QRMaskPattern.PATTERN001 : return i % 2 === 0;\n        case QRMaskPattern.PATTERN010 : return j % 3 === 0;\n        case QRMaskPattern.PATTERN011 : return (i + j) % 3 === 0;\n        case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 === 0;\n        case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 === 0;\n        case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 === 0;\n        case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 === 0;\n\n        default :\n            throw new Error(\"bad maskPattern:\" + maskPattern);\n        }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n        var a = new QRPolynomial([1], 0);\n\n        for (var i = 0; i < errorCorrectLength; i++) {\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0) );\n        }\n\n        return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n        if (1 <= type && type < 10) {\n\n            // 1 - 9\n\n            switch(mode) {\n            case QRMode.MODE_NUMBER     : return 10;\n            case QRMode.MODE_ALPHA_NUM  : return 9;\n            case QRMode.MODE_8BIT_BYTE  : return 8;\n            case QRMode.MODE_KANJI      : return 8;\n            default :\n                throw new Error(\"mode:\" + mode);\n            }\n\n        } else if (type < 27) {\n\n            // 10 - 26\n\n            switch(mode) {\n            case QRMode.MODE_NUMBER     : return 12;\n            case QRMode.MODE_ALPHA_NUM  : return 11;\n            case QRMode.MODE_8BIT_BYTE  : return 16;\n            case QRMode.MODE_KANJI      : return 10;\n            default :\n                throw new Error(\"mode:\" + mode);\n            }\n\n        } else if (type < 41) {\n\n            // 27 - 40\n\n            switch(mode) {\n            case QRMode.MODE_NUMBER     : return 14;\n            case QRMode.MODE_ALPHA_NUM  : return 13;\n            case QRMode.MODE_8BIT_BYTE  : return 16;\n            case QRMode.MODE_KANJI      : return 12;\n            default :\n                throw new Error(\"mode:\" + mode);\n            }\n\n        } else {\n            throw new Error(\"type:\" + type);\n        }\n    },\n\n    getLostPoint : function(qrCode) {\n        \n        var moduleCount = qrCode.getModuleCount();\n        var lostPoint = 0;\n        var row = 0; \n        var col = 0;\n\n        \n        // LEVEL1\n        \n        for (row = 0; row < moduleCount; row++) {\n\n            for (col = 0; col < moduleCount; col++) {\n\n                var sameCount = 0;\n                var dark = qrCode.isDark(row, col);\n\n                for (var r = -1; r <= 1; r++) {\n\n                    if (row + r < 0 || moduleCount <= row + r) {\n                        continue;\n                    }\n\n                    for (var c = -1; c <= 1; c++) {\n\n                        if (col + c < 0 || moduleCount <= col + c) {\n                            continue;\n                        }\n\n                        if (r === 0 && c === 0) {\n                            continue;\n                        }\n\n                        if (dark === qrCode.isDark(row + r, col + c) ) {\n                            sameCount++;\n                        }\n                    }\n                }\n\n                if (sameCount > 5) {\n                    lostPoint += (3 + sameCount - 5);\n                }\n            }\n        }\n\n        // LEVEL2\n\n        for (row = 0; row < moduleCount - 1; row++) {\n            for (col = 0; col < moduleCount - 1; col++) {\n                var count = 0;\n                if (qrCode.isDark(row,     col    ) ) count++;\n                if (qrCode.isDark(row + 1, col    ) ) count++;\n                if (qrCode.isDark(row,     col + 1) ) count++;\n                if (qrCode.isDark(row + 1, col + 1) ) count++;\n                if (count === 0 || count === 4) {\n                    lostPoint += 3;\n                }\n            }\n        }\n\n        // LEVEL3\n\n        for (row = 0; row < moduleCount; row++) {\n            for (col = 0; col < moduleCount - 6; col++) {\n                if (qrCode.isDark(row, col) && \n                        !qrCode.isDark(row, col + 1) && \n                         qrCode.isDark(row, col + 2) && \n                         qrCode.isDark(row, col + 3) && \n                         qrCode.isDark(row, col + 4) && \n                        !qrCode.isDark(row, col + 5) && \n                         qrCode.isDark(row, col + 6) ) {\n                    lostPoint += 40;\n                }\n            }\n        }\n\n        for (col = 0; col < moduleCount; col++) {\n            for (row = 0; row < moduleCount - 6; row++) {\n                if (qrCode.isDark(row, col) &&\n                        !qrCode.isDark(row + 1, col) &&\n                         qrCode.isDark(row + 2, col) &&\n                         qrCode.isDark(row + 3, col) &&\n                         qrCode.isDark(row + 4, col) &&\n                        !qrCode.isDark(row + 5, col) &&\n                         qrCode.isDark(row + 6, col) ) {\n                    lostPoint += 40;\n                }\n            }\n        }\n\n        // LEVEL4\n        \n        var darkCount = 0;\n\n        for (col = 0; col < moduleCount; col++) {\n            for (row = 0; row < moduleCount; row++) {\n                if (qrCode.isDark(row, col) ) {\n                    darkCount++;\n                }\n            }\n        }\n        \n        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n\n        return lostPoint;       \n    }\n\n};\n\nmodule.exports = QRUtil;\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIG,aAAa,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAE9C,IAAII,MAAM,GAAG;EAETC,sBAAsB,EAAG,CACrB,EAAE,EACF,CAAC,CAAC,EAAE,EAAE,CAAC,EACP,CAAC,CAAC,EAAE,EAAE,CAAC,EACP,CAAC,CAAC,EAAE,EAAE,CAAC,EACP,CAAC,CAAC,EAAE,EAAE,CAAC,EACP,CAAC,CAAC,EAAE,EAAE,CAAC,EACP,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}