{"ast":null,"code":"'use strict';\n\nmodule.exports = npa;\nmodule.exports.resolve = resolve;\nmodule.exports.Result = Result;\nconst url = require('url');\nconst HostedGit = require('hosted-git-info');\nconst semver = require('semver');\nconst path = global.FAKE_WINDOWS ? require('path').win32 : require('path');\nconst validatePackageName = require('validate-npm-package-name');\nconst {\n  homedir\n} = require('os');\nconst isWindows = process.platform === 'win32' || global.FAKE_WINDOWS;\nconst hasSlashes = isWindows ? /\\\\|[/]/ : /[/]/;\nconst isURL = /^(?:git[+])?[a-z]+:/i;\nconst isGit = /^[^@]+@[^:.]+\\.[^:]+:.+$/i;\nconst isFilename = /[.](?:tgz|tar.gz|tar)$/i;\nfunction npa(arg, where) {\n  let name;\n  let spec;\n  if (typeof arg === 'object') {\n    if (arg instanceof Result && (!where || where === arg.where)) return arg;else if (arg.name && arg.rawSpec) return npa.resolve(arg.name, arg.rawSpec, where || arg.where);else return npa(arg.raw, where || arg.where);\n  }\n  const nameEndsAt = arg[0] === '@' ? arg.slice(1).indexOf('@') + 1 : arg.indexOf('@');\n  const namePart = nameEndsAt > 0 ? arg.slice(0, nameEndsAt) : arg;\n  if (isURL.test(arg)) spec = arg;else if (isGit.test(arg)) spec = `git+ssh://${arg}`;else if (namePart[0] !== '@' && (hasSlashes.test(namePart) || isFilename.test(namePart))) spec = arg;else if (nameEndsAt > 0) {\n    name = namePart;\n    spec = arg.slice(nameEndsAt + 1);\n  } else {\n    const valid = validatePackageName(arg);\n    if (valid.validForOldPackages) name = arg;else spec = arg;\n  }\n  return resolve(name, spec, where, arg);\n}\nconst isFilespec = isWindows ? /^(?:[.]|~[/]|[/\\\\]|[a-zA-Z]:)/ : /^(?:[.]|~[/]|[/]|[a-zA-Z]:)/;\nfunction resolve(name, spec, where, arg) {\n  const res = new Result({\n    raw: arg,\n    name: name,\n    rawSpec: spec,\n    fromArgument: arg != null\n  });\n  if (name) res.setName(name);\n  if (spec && (isFilespec.test(spec) || /^file:/i.test(spec))) return fromFile(res, where);else if (spec && /^npm:/i.test(spec)) return fromAlias(res, where);\n  const hosted = HostedGit.fromUrl(spec, {\n    noGitPlus: true,\n    noCommittish: true\n  });\n  if (hosted) return fromHostedGit(res, hosted);else if (spec && isURL.test(spec)) return fromURL(res);else if (spec && (hasSlashes.test(spec) || isFilename.test(spec))) return fromFile(res, where);else return fromRegistry(res);\n}\nfunction invalidPackageName(name, valid) {\n  const err = new Error(`Invalid package name \"${name}\": ${valid.errors.join('; ')}`);\n  err.code = 'EINVALIDPACKAGENAME';\n  return err;\n}\nfunction invalidTagName(name) {\n  const err = new Error(`Invalid tag name \"${name}\": Tags may not have any characters that encodeURIComponent encodes.`);\n  err.code = 'EINVALIDTAGNAME';\n  return err;\n}\nfunction Result(opts) {\n  this.type = opts.type;\n  this.registry = opts.registry;\n  this.where = opts.where;\n  if (opts.raw == null) this.raw = opts.name ? opts.name + '@' + opts.rawSpec : opts.rawSpec;else this.raw = opts.raw;\n  this.name = undefined;\n  this.escapedName = undefined;\n  this.scope = undefined;\n  this.rawSpec = opts.rawSpec == null ? '' : opts.rawSpec;\n  this.saveSpec = opts.saveSpec;\n  this.fetchSpec = opts.fetchSpec;\n  if (opts.name) this.setName(opts.name);\n  this.gitRange = opts.gitRange;\n  this.gitCommittish = opts.gitCommittish;\n  this.hosted = opts.hosted;\n}\nResult.prototype.setName = function (name) {\n  const valid = validatePackageName(name);\n  if (!valid.validForOldPackages) throw invalidPackageName(name, valid);\n  this.name = name;\n  this.scope = name[0] === '@' ? name.slice(0, name.indexOf('/')) : undefined;\n  // scoped packages in couch must have slash url-encoded, e.g. @foo%2Fbar\n  this.escapedName = name.replace('/', '%2f');\n  return this;\n};\nResult.prototype.toString = function () {\n  const full = [];\n  if (this.name != null && this.name !== '') full.push(this.name);\n  const spec = this.saveSpec || this.fetchSpec || this.rawSpec;\n  if (spec != null && spec !== '') full.push(spec);\n  return full.length ? full.join('@') : this.raw;\n};\nResult.prototype.toJSON = function () {\n  const result = Object.assign({}, this);\n  delete result.hosted;\n  return result;\n};\nfunction setGitCommittish(res, committish) {\n  if (committish != null && committish.length >= 7 && committish.slice(0, 7) === 'semver:') {\n    res.gitRange = decodeURIComponent(committish.slice(7));\n    res.gitCommittish = null;\n  } else res.gitCommittish = committish === '' ? null : committish;\n  return res;\n}\nfunction fromFile(res, where) {\n  if (!where) where = process.cwd();\n  res.type = isFilename.test(res.rawSpec) ? 'file' : 'directory';\n  res.where = where;\n\n  // always put the '/' on where when resolving urls, or else\n  // file:foo from /path/to/bar goes to /path/to/foo, when we want\n  // it to be /path/to/foo/bar\n\n  let specUrl;\n  let resolvedUrl;\n  const prefix = !/^file:/.test(res.rawSpec) ? 'file:' : '';\n  const rawWithPrefix = prefix + res.rawSpec;\n  let rawNoPrefix = rawWithPrefix.replace(/^file:/, '');\n  try {\n    resolvedUrl = new url.URL(rawWithPrefix, `file://${path.resolve(where)}/`);\n    specUrl = new url.URL(rawWithPrefix);\n  } catch (originalError) {\n    const er = new Error('Invalid file: URL, must comply with RFC 8909');\n    throw Object.assign(er, {\n      raw: res.rawSpec,\n      spec: res,\n      where,\n      originalError\n    });\n  }\n\n  // environment switch for testing\n  if (process.env.NPM_PACKAGE_ARG_8909_STRICT !== '1') {\n    // XXX backwards compatibility lack of compliance with 8909\n    // Remove when we want a breaking change to come into RFC compliance.\n    if (resolvedUrl.host && resolvedUrl.host !== 'localhost') {\n      const rawSpec = res.rawSpec.replace(/^file:\\/\\//, 'file:///');\n      resolvedUrl = new url.URL(rawSpec, `file://${path.resolve(where)}/`);\n      specUrl = new url.URL(rawSpec);\n      rawNoPrefix = rawSpec.replace(/^file:/, '');\n    }\n    // turn file:/../foo into file:../foo\n    if (/^\\/\\.\\.?(\\/|$)/.test(rawNoPrefix)) {\n      const rawSpec = res.rawSpec.replace(/^file:\\//, 'file:');\n      resolvedUrl = new url.URL(rawSpec, `file://${path.resolve(where)}/`);\n      specUrl = new url.URL(rawSpec);\n      rawNoPrefix = rawSpec.replace(/^file:/, '');\n    }\n    // XXX end 8909 violation backwards compatibility section\n  }\n\n  // file:foo - relative url to ./foo\n  // file:/foo - absolute path /foo\n  // file:///foo - absolute path to /foo, no authority host\n  // file://localhost/foo - absolute path to /foo, on localhost\n  // file://foo - absolute path to / on foo host (error!)\n  if (resolvedUrl.host && resolvedUrl.host !== 'localhost') {\n    const msg = `Invalid file: URL, must be absolute if // present`;\n    throw Object.assign(new Error(msg), {\n      raw: res.rawSpec,\n      parsed: resolvedUrl\n    });\n  }\n\n  // turn /C:/blah into just C:/blah on windows\n  let specPath = decodeURIComponent(specUrl.pathname);\n  let resolvedPath = decodeURIComponent(resolvedUrl.pathname);\n  if (isWindows) {\n    specPath = specPath.replace(/^\\/+([a-z]:\\/)/i, '$1');\n    resolvedPath = resolvedPath.replace(/^\\/+([a-z]:\\/)/i, '$1');\n  }\n\n  // replace ~ with homedir, but keep the ~ in the saveSpec\n  // otherwise, make it relative to where param\n  if (/^\\/~(\\/|$)/.test(specPath)) {\n    res.saveSpec = `file:${specPath.substr(1)}`;\n    resolvedPath = path.resolve(homedir(), specPath.substr(3));\n  } else if (!path.isAbsolute(rawNoPrefix)) res.saveSpec = `file:${path.relative(where, resolvedPath)}`;else res.saveSpec = `file:${path.resolve(resolvedPath)}`;\n  res.fetchSpec = path.resolve(where, resolvedPath);\n  return res;\n}\nfunction fromHostedGit(res, hosted) {\n  res.type = 'git';\n  res.hosted = hosted;\n  res.saveSpec = hosted.toString({\n    noGitPlus: false,\n    noCommittish: false\n  });\n  res.fetchSpec = hosted.getDefaultRepresentation() === 'shortcut' ? null : hosted.toString();\n  return setGitCommittish(res, hosted.committish);\n}\nfunction unsupportedURLType(protocol, spec) {\n  const err = new Error(`Unsupported URL Type \"${protocol}\": ${spec}`);\n  err.code = 'EUNSUPPORTEDPROTOCOL';\n  return err;\n}\nfunction matchGitScp(spec) {\n  // git ssh specifiers are overloaded to also use scp-style git\n  // specifiers, so we have to parse those out and treat them special.\n  // They are NOT true URIs, so we can't hand them to `url.parse`.\n  //\n  // This regex looks for things that look like:\n  // git+ssh://git@my.custom.git.com:username/project.git#deadbeef\n  //\n  // ...and various combinations. The username in the beginning is *required*.\n  const matched = spec.match(/^git\\+ssh:\\/\\/([^:#]+:[^#]+(?:\\.git)?)(?:#(.*))?$/i);\n  return matched && !matched[1].match(/:[0-9]+\\/?.*$/i) && {\n    fetchSpec: matched[1],\n    gitCommittish: matched[2] == null ? null : matched[2]\n  };\n}\nfunction fromURL(res) {\n  // eslint-disable-next-line node/no-deprecated-api\n  const urlparse = url.parse(res.rawSpec);\n  res.saveSpec = res.rawSpec;\n  // check the protocol, and then see if it's git or not\n  switch (urlparse.protocol) {\n    case 'git:':\n    case 'git+http:':\n    case 'git+https:':\n    case 'git+rsync:':\n    case 'git+ftp:':\n    case 'git+file:':\n    case 'git+ssh:':\n      {\n        res.type = 'git';\n        const match = urlparse.protocol === 'git+ssh:' ? matchGitScp(res.rawSpec) : null;\n        if (match) {\n          setGitCommittish(res, match.gitCommittish);\n          res.fetchSpec = match.fetchSpec;\n        } else {\n          setGitCommittish(res, urlparse.hash != null ? urlparse.hash.slice(1) : '');\n          urlparse.protocol = urlparse.protocol.replace(/^git[+]/, '');\n          if (urlparse.protocol === 'file:' && /^git\\+file:\\/\\/[a-z]:/i.test(res.rawSpec)) {\n            // keep the drive letter : on windows file paths\n            urlparse.host += ':';\n            urlparse.hostname += ':';\n          }\n          delete urlparse.hash;\n          res.fetchSpec = url.format(urlparse);\n        }\n        break;\n      }\n    case 'http:':\n    case 'https:':\n      res.type = 'remote';\n      res.fetchSpec = res.saveSpec;\n      break;\n    default:\n      throw unsupportedURLType(urlparse.protocol, res.rawSpec);\n  }\n  return res;\n}\nfunction fromAlias(res, where) {\n  const subSpec = npa(res.rawSpec.substr(4), where);\n  if (subSpec.type === 'alias') throw new Error('nested aliases not supported');\n  if (!subSpec.registry) throw new Error('aliases only work for registry deps');\n  res.subSpec = subSpec;\n  res.registry = true;\n  res.type = 'alias';\n  res.saveSpec = null;\n  res.fetchSpec = null;\n  return res;\n}\nfunction fromRegistry(res) {\n  res.registry = true;\n  const spec = res.rawSpec === '' ? 'latest' : res.rawSpec.trim();\n  // no save spec for registry components as we save based on the fetched\n  // version, not on the argument so this can't compute that.\n  res.saveSpec = null;\n  res.fetchSpec = spec;\n  const version = semver.valid(spec, true);\n  const range = semver.validRange(spec, true);\n  if (version) res.type = 'version';else if (range) res.type = 'range';else {\n    if (encodeURIComponent(spec) !== spec) throw invalidTagName(spec);\n    res.type = 'tag';\n  }\n  return res;\n}","map":{"version":3,"names":["module","exports","npa","resolve","Result","url","require","HostedGit","semver","path","global","FAKE_WINDOWS","win32","validatePackageName","homedir","isWindows","process","platform","hasSlashes","isURL","isGit","isFilename","arg","where","name","spec","rawSpec","raw","nameEndsAt","slice","indexOf","namePart","test","valid","validForOldPackages","isFilespec","res","fromArgument","setName","fromFile","fromAlias","hosted","fromUrl","noGitPlus","noCommittish","fromHostedGit","fromURL","fromRegistry","invalidPackageName","err","Error","errors","join","code","invalidTagName","opts","type","registry","undefined","escapedName","scope","saveSpec","fetchSpec","gitRange","gitCommittish","prototype","replace","toString","full","push","length","toJSON","result","Object","assign","setGitCommittish","committish","decodeURIComponent","cwd","specUrl","resolvedUrl","prefix","rawWithPrefix","rawNoPrefix","URL","originalError","er","env","NPM_PACKAGE_ARG_8909_STRICT","host","msg","parsed","specPath","pathname","resolvedPath","substr","isAbsolute","relative","getDefaultRepresentation","unsupportedURLType","protocol","matchGitScp","matched","match","urlparse","parse","hash","hostname","format","subSpec","trim","version","range","validRange","encodeURIComponent"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/npm-package-arg/npa.js"],"sourcesContent":["'use strict'\nmodule.exports = npa\nmodule.exports.resolve = resolve\nmodule.exports.Result = Result\n\nconst url = require('url')\nconst HostedGit = require('hosted-git-info')\nconst semver = require('semver')\nconst path = global.FAKE_WINDOWS ? require('path').win32 : require('path')\nconst validatePackageName = require('validate-npm-package-name')\nconst { homedir } = require('os')\n\nconst isWindows = process.platform === 'win32' || global.FAKE_WINDOWS\nconst hasSlashes = isWindows ? /\\\\|[/]/ : /[/]/\nconst isURL = /^(?:git[+])?[a-z]+:/i\nconst isGit = /^[^@]+@[^:.]+\\.[^:]+:.+$/i\nconst isFilename = /[.](?:tgz|tar.gz|tar)$/i\n\nfunction npa (arg, where) {\n  let name\n  let spec\n  if (typeof arg === 'object') {\n    if (arg instanceof Result && (!where || where === arg.where))\n      return arg\n    else if (arg.name && arg.rawSpec)\n      return npa.resolve(arg.name, arg.rawSpec, where || arg.where)\n    else\n      return npa(arg.raw, where || arg.where)\n  }\n  const nameEndsAt = arg[0] === '@' ? arg.slice(1).indexOf('@') + 1 : arg.indexOf('@')\n  const namePart = nameEndsAt > 0 ? arg.slice(0, nameEndsAt) : arg\n  if (isURL.test(arg))\n    spec = arg\n  else if (isGit.test(arg))\n    spec = `git+ssh://${arg}`\n  else if (namePart[0] !== '@' && (hasSlashes.test(namePart) || isFilename.test(namePart)))\n    spec = arg\n  else if (nameEndsAt > 0) {\n    name = namePart\n    spec = arg.slice(nameEndsAt + 1)\n  } else {\n    const valid = validatePackageName(arg)\n    if (valid.validForOldPackages)\n      name = arg\n    else\n      spec = arg\n  }\n  return resolve(name, spec, where, arg)\n}\n\nconst isFilespec = isWindows ? /^(?:[.]|~[/]|[/\\\\]|[a-zA-Z]:)/ : /^(?:[.]|~[/]|[/]|[a-zA-Z]:)/\n\nfunction resolve (name, spec, where, arg) {\n  const res = new Result({\n    raw: arg,\n    name: name,\n    rawSpec: spec,\n    fromArgument: arg != null,\n  })\n\n  if (name)\n    res.setName(name)\n\n  if (spec && (isFilespec.test(spec) || /^file:/i.test(spec)))\n    return fromFile(res, where)\n  else if (spec && /^npm:/i.test(spec))\n    return fromAlias(res, where)\n\n  const hosted = HostedGit.fromUrl(spec, {\n    noGitPlus: true,\n    noCommittish: true,\n  })\n  if (hosted)\n    return fromHostedGit(res, hosted)\n  else if (spec && isURL.test(spec))\n    return fromURL(res)\n  else if (spec && (hasSlashes.test(spec) || isFilename.test(spec)))\n    return fromFile(res, where)\n  else\n    return fromRegistry(res)\n}\n\nfunction invalidPackageName (name, valid) {\n  const err = new Error(`Invalid package name \"${name}\": ${valid.errors.join('; ')}`)\n  err.code = 'EINVALIDPACKAGENAME'\n  return err\n}\nfunction invalidTagName (name) {\n  const err = new Error(`Invalid tag name \"${name}\": Tags may not have any characters that encodeURIComponent encodes.`)\n  err.code = 'EINVALIDTAGNAME'\n  return err\n}\n\nfunction Result (opts) {\n  this.type = opts.type\n  this.registry = opts.registry\n  this.where = opts.where\n  if (opts.raw == null)\n    this.raw = opts.name ? opts.name + '@' + opts.rawSpec : opts.rawSpec\n  else\n    this.raw = opts.raw\n\n  this.name = undefined\n  this.escapedName = undefined\n  this.scope = undefined\n  this.rawSpec = opts.rawSpec == null ? '' : opts.rawSpec\n  this.saveSpec = opts.saveSpec\n  this.fetchSpec = opts.fetchSpec\n  if (opts.name)\n    this.setName(opts.name)\n  this.gitRange = opts.gitRange\n  this.gitCommittish = opts.gitCommittish\n  this.hosted = opts.hosted\n}\n\nResult.prototype.setName = function (name) {\n  const valid = validatePackageName(name)\n  if (!valid.validForOldPackages)\n    throw invalidPackageName(name, valid)\n\n  this.name = name\n  this.scope = name[0] === '@' ? name.slice(0, name.indexOf('/')) : undefined\n  // scoped packages in couch must have slash url-encoded, e.g. @foo%2Fbar\n  this.escapedName = name.replace('/', '%2f')\n  return this\n}\n\nResult.prototype.toString = function () {\n  const full = []\n  if (this.name != null && this.name !== '')\n    full.push(this.name)\n  const spec = this.saveSpec || this.fetchSpec || this.rawSpec\n  if (spec != null && spec !== '')\n    full.push(spec)\n  return full.length ? full.join('@') : this.raw\n}\n\nResult.prototype.toJSON = function () {\n  const result = Object.assign({}, this)\n  delete result.hosted\n  return result\n}\n\nfunction setGitCommittish (res, committish) {\n  if (committish != null && committish.length >= 7 && committish.slice(0, 7) === 'semver:') {\n    res.gitRange = decodeURIComponent(committish.slice(7))\n    res.gitCommittish = null\n  } else\n    res.gitCommittish = committish === '' ? null : committish\n\n  return res\n}\n\nfunction fromFile (res, where) {\n  if (!where)\n    where = process.cwd()\n  res.type = isFilename.test(res.rawSpec) ? 'file' : 'directory'\n  res.where = where\n\n  // always put the '/' on where when resolving urls, or else\n  // file:foo from /path/to/bar goes to /path/to/foo, when we want\n  // it to be /path/to/foo/bar\n\n  let specUrl\n  let resolvedUrl\n  const prefix = (!/^file:/.test(res.rawSpec) ? 'file:' : '')\n  const rawWithPrefix = prefix + res.rawSpec\n  let rawNoPrefix = rawWithPrefix.replace(/^file:/, '')\n  try {\n    resolvedUrl = new url.URL(rawWithPrefix, `file://${path.resolve(where)}/`)\n    specUrl = new url.URL(rawWithPrefix)\n  } catch (originalError) {\n    const er = new Error('Invalid file: URL, must comply with RFC 8909')\n    throw Object.assign(er, {\n      raw: res.rawSpec,\n      spec: res,\n      where,\n      originalError,\n    })\n  }\n\n  // environment switch for testing\n  if (process.env.NPM_PACKAGE_ARG_8909_STRICT !== '1') {\n    // XXX backwards compatibility lack of compliance with 8909\n    // Remove when we want a breaking change to come into RFC compliance.\n    if (resolvedUrl.host && resolvedUrl.host !== 'localhost') {\n      const rawSpec = res.rawSpec.replace(/^file:\\/\\//, 'file:///')\n      resolvedUrl = new url.URL(rawSpec, `file://${path.resolve(where)}/`)\n      specUrl = new url.URL(rawSpec)\n      rawNoPrefix = rawSpec.replace(/^file:/, '')\n    }\n    // turn file:/../foo into file:../foo\n    if (/^\\/\\.\\.?(\\/|$)/.test(rawNoPrefix)) {\n      const rawSpec = res.rawSpec.replace(/^file:\\//, 'file:')\n      resolvedUrl = new url.URL(rawSpec, `file://${path.resolve(where)}/`)\n      specUrl = new url.URL(rawSpec)\n      rawNoPrefix = rawSpec.replace(/^file:/, '')\n    }\n    // XXX end 8909 violation backwards compatibility section\n  }\n\n  // file:foo - relative url to ./foo\n  // file:/foo - absolute path /foo\n  // file:///foo - absolute path to /foo, no authority host\n  // file://localhost/foo - absolute path to /foo, on localhost\n  // file://foo - absolute path to / on foo host (error!)\n  if (resolvedUrl.host && resolvedUrl.host !== 'localhost') {\n    const msg = `Invalid file: URL, must be absolute if // present`\n    throw Object.assign(new Error(msg), {\n      raw: res.rawSpec,\n      parsed: resolvedUrl,\n    })\n  }\n\n  // turn /C:/blah into just C:/blah on windows\n  let specPath = decodeURIComponent(specUrl.pathname)\n  let resolvedPath = decodeURIComponent(resolvedUrl.pathname)\n  if (isWindows) {\n    specPath = specPath.replace(/^\\/+([a-z]:\\/)/i, '$1')\n    resolvedPath = resolvedPath.replace(/^\\/+([a-z]:\\/)/i, '$1')\n  }\n\n  // replace ~ with homedir, but keep the ~ in the saveSpec\n  // otherwise, make it relative to where param\n  if (/^\\/~(\\/|$)/.test(specPath)) {\n    res.saveSpec = `file:${specPath.substr(1)}`\n    resolvedPath = path.resolve(homedir(), specPath.substr(3))\n  } else if (!path.isAbsolute(rawNoPrefix))\n    res.saveSpec = `file:${path.relative(where, resolvedPath)}`\n  else\n    res.saveSpec = `file:${path.resolve(resolvedPath)}`\n\n  res.fetchSpec = path.resolve(where, resolvedPath)\n  return res\n}\n\nfunction fromHostedGit (res, hosted) {\n  res.type = 'git'\n  res.hosted = hosted\n  res.saveSpec = hosted.toString({ noGitPlus: false, noCommittish: false })\n  res.fetchSpec = hosted.getDefaultRepresentation() === 'shortcut' ? null : hosted.toString()\n  return setGitCommittish(res, hosted.committish)\n}\n\nfunction unsupportedURLType (protocol, spec) {\n  const err = new Error(`Unsupported URL Type \"${protocol}\": ${spec}`)\n  err.code = 'EUNSUPPORTEDPROTOCOL'\n  return err\n}\n\nfunction matchGitScp (spec) {\n  // git ssh specifiers are overloaded to also use scp-style git\n  // specifiers, so we have to parse those out and treat them special.\n  // They are NOT true URIs, so we can't hand them to `url.parse`.\n  //\n  // This regex looks for things that look like:\n  // git+ssh://git@my.custom.git.com:username/project.git#deadbeef\n  //\n  // ...and various combinations. The username in the beginning is *required*.\n  const matched = spec.match(/^git\\+ssh:\\/\\/([^:#]+:[^#]+(?:\\.git)?)(?:#(.*))?$/i)\n  return matched && !matched[1].match(/:[0-9]+\\/?.*$/i) && {\n    fetchSpec: matched[1],\n    gitCommittish: matched[2] == null ? null : matched[2],\n  }\n}\n\nfunction fromURL (res) {\n  // eslint-disable-next-line node/no-deprecated-api\n  const urlparse = url.parse(res.rawSpec)\n  res.saveSpec = res.rawSpec\n  // check the protocol, and then see if it's git or not\n  switch (urlparse.protocol) {\n    case 'git:':\n    case 'git+http:':\n    case 'git+https:':\n    case 'git+rsync:':\n    case 'git+ftp:':\n    case 'git+file:':\n    case 'git+ssh:': {\n      res.type = 'git'\n      const match = urlparse.protocol === 'git+ssh:' ? matchGitScp(res.rawSpec)\n        : null\n      if (match) {\n        setGitCommittish(res, match.gitCommittish)\n        res.fetchSpec = match.fetchSpec\n      } else {\n        setGitCommittish(res, urlparse.hash != null ? urlparse.hash.slice(1) : '')\n        urlparse.protocol = urlparse.protocol.replace(/^git[+]/, '')\n        if (urlparse.protocol === 'file:' && /^git\\+file:\\/\\/[a-z]:/i.test(res.rawSpec)) {\n          // keep the drive letter : on windows file paths\n          urlparse.host += ':'\n          urlparse.hostname += ':'\n        }\n        delete urlparse.hash\n        res.fetchSpec = url.format(urlparse)\n      }\n      break\n    }\n    case 'http:':\n    case 'https:':\n      res.type = 'remote'\n      res.fetchSpec = res.saveSpec\n      break\n\n    default:\n      throw unsupportedURLType(urlparse.protocol, res.rawSpec)\n  }\n\n  return res\n}\n\nfunction fromAlias (res, where) {\n  const subSpec = npa(res.rawSpec.substr(4), where)\n  if (subSpec.type === 'alias')\n    throw new Error('nested aliases not supported')\n\n  if (!subSpec.registry)\n    throw new Error('aliases only work for registry deps')\n\n  res.subSpec = subSpec\n  res.registry = true\n  res.type = 'alias'\n  res.saveSpec = null\n  res.fetchSpec = null\n  return res\n}\n\nfunction fromRegistry (res) {\n  res.registry = true\n  const spec = res.rawSpec === '' ? 'latest' : res.rawSpec.trim()\n  // no save spec for registry components as we save based on the fetched\n  // version, not on the argument so this can't compute that.\n  res.saveSpec = null\n  res.fetchSpec = spec\n  const version = semver.valid(spec, true)\n  const range = semver.validRange(spec, true)\n  if (version)\n    res.type = 'version'\n  else if (range)\n    res.type = 'range'\n  else {\n    if (encodeURIComponent(spec) !== spec)\n      throw invalidTagName(spec)\n\n    res.type = 'tag'\n  }\n  return res\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}