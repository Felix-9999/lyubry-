{"ast":null,"code":"const EventEmitter = require('events');\nconst {\n  resolve,\n  dirname\n} = require('path');\nconst Config = require('@npmcli/config');\nconst log = require('npmlog');\n\n// Patch the global fs module here at the app level\nrequire('graceful-fs').gracefulify(require('fs'));\n\n// TODO make this only ever load once (or unload) in tests\nconst procLogListener = require('./utils/proc-log-listener.js');\nconst proxyCmds = new Proxy({}, {\n  get: (target, cmd) => {\n    const actual = deref(cmd);\n    if (actual && !Reflect.has(target, actual)) {\n      const Impl = require(`./${actual}.js`);\n      const impl = new Impl(npm);\n      // Our existing npm.commands[x] act like a function with attributes, but\n      // our modules have non-inumerable attributes so we can't just assign\n      // them to an anonymous function like we used to.  This acts like that\n      // old way of doing things, until we can make breaking changes to the\n      // npm.commands[x] api\n      target[actual] = new Proxy((args, cb) => npm[_runCmd](actual, impl, args, cb), {\n        get: (target, attr, receiver) => {\n          return Reflect.get(impl, attr, receiver);\n        }\n      });\n    }\n    return target[actual];\n  }\n});\n\n// Timers in progress\nconst timers = new Map();\n// Finished timers\nconst timings = {};\nconst processOnTimeHandler = name => {\n  timers.set(name, Date.now());\n};\nconst processOnTimeEndHandler = name => {\n  if (timers.has(name)) {\n    const ms = Date.now() - timers.get(name);\n    log.timing(name, `Completed in ${ms}ms`);\n    timings[name] = ms;\n    timers.delete(name);\n  } else log.silly('timing', \"Tried to end timer that doesn't exist:\", name);\n};\nconst {\n  definitions,\n  flatten,\n  shorthands\n} = require('./utils/config/index.js');\nconst {\n  shellouts\n} = require('./utils/cmd-list.js');\nconst usage = require('./utils/npm-usage.js');\nconst which = require('which');\nconst deref = require('./utils/deref-command.js');\nconst setupLog = require('./utils/setup-log.js');\nconst cleanUpLogFiles = require('./utils/cleanup-log-files.js');\nconst getProjectScope = require('./utils/get-project-scope.js');\nlet warnedNonDashArg = false;\nconst _runCmd = Symbol('_runCmd');\nconst _load = Symbol('_load');\nconst _tmpFolder = Symbol('_tmpFolder');\nconst _title = Symbol('_title');\nconst npm = module.exports = new class extends EventEmitter {\n  constructor() {\n    super();\n    this.started = Date.now();\n    this.command = null;\n    this.commands = proxyCmds;\n    this.timings = timings;\n    this.timers = timers;\n    this.perfStart();\n    procLogListener();\n    process.emit('time', 'npm');\n    this.version = require('../package.json').version;\n    this.config = new Config({\n      npmPath: dirname(__dirname),\n      definitions,\n      flatten,\n      shorthands\n    });\n    this[_title] = process.title;\n    this.updateNotification = null;\n  }\n  perfStart() {\n    process.on('time', processOnTimeHandler);\n    process.on('timeEnd', processOnTimeEndHandler);\n  }\n  perfStop() {\n    process.off('time', processOnTimeHandler);\n    process.off('timeEnd', processOnTimeEndHandler);\n  }\n  get shelloutCommands() {\n    return shellouts;\n  }\n  deref(c) {\n    return deref(c);\n  }\n\n  // this will only ever be called with cmd set to the canonical command name\n  [_runCmd](cmd, impl, args, cb) {\n    if (!this.loaded) {\n      throw new Error('Call npm.load() before using this command.\\n' + 'See lib/cli.js for example usage.');\n    }\n    process.emit('time', `command:${cmd}`);\n    // since 'test', 'start', 'stop', etc. commands re-enter this function\n    // to call the run-script command, we need to only set it one time.\n    if (!this.command) {\n      process.env.npm_command = cmd;\n      this.command = cmd;\n    }\n\n    // Options are prefixed by a hyphen-minus (-, \\u2d).\n    // Other dash-type chars look similar but are invalid.\n    if (!warnedNonDashArg) {\n      args.filter(arg => /^[\\u2010-\\u2015\\u2212\\uFE58\\uFE63\\uFF0D]/.test(arg)).forEach(arg => {\n        warnedNonDashArg = true;\n        this.log.error('arg', 'Argument starts with non-ascii dash, this is probably invalid:', arg);\n      });\n    }\n    const workspacesEnabled = this.config.get('workspaces');\n    const workspacesFilters = this.config.get('workspace');\n    const filterByWorkspaces = workspacesEnabled || workspacesFilters.length > 0;\n    if (this.config.get('usage')) {\n      this.output(impl.usage);\n      cb();\n    } else if (filterByWorkspaces) {\n      if (this.config.get('global')) return cb(new Error('Workspaces not supported for global packages'));\n      impl.execWorkspaces(args, this.config.get('workspace'), er => {\n        process.emit('timeEnd', `command:${cmd}`);\n        cb(er);\n      });\n    } else {\n      impl.exec(args, er => {\n        process.emit('timeEnd', `command:${cmd}`);\n        cb(er);\n      });\n    }\n  }\n  load(cb) {\n    if (cb && typeof cb !== 'function') throw new TypeError('callback must be a function if provided');\n    if (!this.loadPromise) {\n      process.emit('time', 'npm:load');\n      this.log.pause();\n      this.loadPromise = new Promise((resolve, reject) => {\n        this[_load]().catch(er => er).then(er => {\n          this.loadErr = er;\n          if (!er && this.config.get('force')) this.log.warn('using --force', 'Recommended protections disabled.');\n          process.emit('timeEnd', 'npm:load');\n          if (er) return reject(er);\n          resolve();\n        });\n      });\n    }\n    if (!cb) return this.loadPromise;\n\n    // loadPromise is returned here for legacy purposes, old code was allowing\n    // the mixing of callback and promise here.\n    return this.loadPromise.then(cb, cb);\n  }\n  get loaded() {\n    return this.config.loaded;\n  }\n  get title() {\n    return this[_title];\n  }\n  set title(t) {\n    process.title = t;\n    this[_title] = t;\n  }\n  async [_load]() {\n    process.emit('time', 'npm:load:whichnode');\n    let node;\n    try {\n      node = which.sync(process.argv[0]);\n    } catch (_) {\n      // TODO should we throw here?\n    }\n    process.emit('timeEnd', 'npm:load:whichnode');\n    if (node && node.toUpperCase() !== process.execPath.toUpperCase()) {\n      this.log.verbose('node symlink', node);\n      process.execPath = node;\n      this.config.execPath = node;\n    }\n    process.emit('time', 'npm:load:configload');\n    await this.config.load();\n    process.emit('timeEnd', 'npm:load:configload');\n    this.argv = this.config.parsedArgv.remain;\n    // note: this MUST be shorter than the actual argv length, because it\n    // uses the same memory, so node will truncate it if it's too long.\n    // if it's a token revocation, then the argv contains a secret, so\n    // don't show that.  (Regrettable historical choice to put it there.)\n    // Any other secrets are configs only, so showing only the positional\n    // args keeps those from being leaked.\n    process.emit('time', 'npm:load:setTitle');\n    const tokrev = deref(this.argv[0]) === 'token' && this.argv[1] === 'revoke';\n    this.title = tokrev ? 'npm token revoke' + (this.argv[2] ? ' ***' : '') : ['npm', ...this.argv].join(' ');\n    process.emit('timeEnd', 'npm:load:setTitle');\n    process.emit('time', 'npm:load:setupLog');\n    setupLog(this.config);\n    process.emit('timeEnd', 'npm:load:setupLog');\n    process.env.COLOR = this.color ? '1' : '0';\n    process.emit('time', 'npm:load:cleanupLog');\n    cleanUpLogFiles(this.cache, this.config.get('logs-max'), this.log.warn);\n    process.emit('timeEnd', 'npm:load:cleanupLog');\n    this.log.resume();\n    process.emit('time', 'npm:load:configScope');\n    const configScope = this.config.get('scope');\n    if (configScope && !/^@/.test(configScope)) this.config.set('scope', `@${configScope}`, this.config.find('scope'));\n    process.emit('timeEnd', 'npm:load:configScope');\n    process.emit('time', 'npm:load:projectScope');\n    this.projectScope = this.config.get('scope') || getProjectScope(this.prefix);\n    process.emit('timeEnd', 'npm:load:projectScope');\n  }\n  get flatOptions() {\n    const {\n      flat\n    } = this.config;\n    if (this.command) flat.npmCommand = this.command;\n    return flat;\n  }\n  get color() {\n    // This is a special derived value that takes into consideration not only\n    // the config, but whether or not we are operating in a tty.\n    return this.flatOptions.color;\n  }\n  get lockfileVersion() {\n    return 2;\n  }\n  get log() {\n    return log;\n  }\n  get cache() {\n    return this.config.get('cache');\n  }\n  set cache(r) {\n    this.config.set('cache', r);\n  }\n  get globalPrefix() {\n    return this.config.globalPrefix;\n  }\n  set globalPrefix(r) {\n    this.config.globalPrefix = r;\n  }\n  get localPrefix() {\n    return this.config.localPrefix;\n  }\n  set localPrefix(r) {\n    this.config.localPrefix = r;\n  }\n  get globalDir() {\n    return process.platform !== 'win32' ? resolve(this.globalPrefix, 'lib', 'node_modules') : resolve(this.globalPrefix, 'node_modules');\n  }\n  get localDir() {\n    return resolve(this.localPrefix, 'node_modules');\n  }\n  get dir() {\n    return this.config.get('global') ? this.globalDir : this.localDir;\n  }\n  get globalBin() {\n    const b = this.globalPrefix;\n    return process.platform !== 'win32' ? resolve(b, 'bin') : b;\n  }\n  get localBin() {\n    return resolve(this.dir, '.bin');\n  }\n  get bin() {\n    return this.config.get('global') ? this.globalBin : this.localBin;\n  }\n  get prefix() {\n    return this.config.get('global') ? this.globalPrefix : this.localPrefix;\n  }\n  set prefix(r) {\n    const k = this.config.get('global') ? 'globalPrefix' : 'localPrefix';\n    this[k] = r;\n  }\n  get usage() {\n    return usage(this);\n  }\n\n  // XXX add logging to see if we actually use this\n  get tmp() {\n    if (!this[_tmpFolder]) {\n      const rand = require('crypto').randomBytes(4).toString('hex');\n      this[_tmpFolder] = `npm-${process.pid}-${rand}`;\n    }\n    return resolve(this.config.get('tmp'), this[_tmpFolder]);\n  }\n\n  // output to stdout in a progress bar compatible way\n  output(...msg) {\n    this.log.clearProgress();\n    console.log(...msg);\n    this.log.showProgress();\n  }\n}();\nif (require.main === module) require('./cli.js')(process);","map":{"version":3,"names":["EventEmitter","require","resolve","dirname","Config","log","gracefulify","procLogListener","proxyCmds","Proxy","get","target","cmd","actual","deref","Reflect","has","Impl","impl","npm","args","cb","_runCmd","attr","receiver","timers","Map","timings","processOnTimeHandler","name","set","Date","now","processOnTimeEndHandler","ms","timing","delete","silly","definitions","flatten","shorthands","shellouts","usage","which","setupLog","cleanUpLogFiles","getProjectScope","warnedNonDashArg","Symbol","_load","_tmpFolder","_title","module","exports","constructor","started","command","commands","perfStart","process","emit","version","config","npmPath","__dirname","title","updateNotification","on","perfStop","off","shelloutCommands","c","loaded","Error","env","npm_command","filter","arg","test","forEach","error","workspacesEnabled","workspacesFilters","filterByWorkspaces","length","output","execWorkspaces","er","exec","load","TypeError","loadPromise","pause","Promise","reject","catch","then","loadErr","warn","t","node","sync","argv","_","toUpperCase","execPath","verbose","parsedArgv","remain","tokrev","join","COLOR","color","cache","resume","configScope","find","projectScope","prefix","flatOptions","flat","npmCommand","lockfileVersion","r","globalPrefix","localPrefix","globalDir","platform","localDir","dir","globalBin","b","localBin","bin","k","tmp","rand","randomBytes","toString","pid","msg","clearProgress","console","showProgress","main"],"sources":["C:/Users/Felo/node_modules/npm/lib/npm.js"],"sourcesContent":["const EventEmitter = require('events')\nconst { resolve, dirname } = require('path')\nconst Config = require('@npmcli/config')\nconst log = require('npmlog')\n\n// Patch the global fs module here at the app level\nrequire('graceful-fs').gracefulify(require('fs'))\n\n// TODO make this only ever load once (or unload) in tests\nconst procLogListener = require('./utils/proc-log-listener.js')\n\nconst proxyCmds = new Proxy({}, {\n  get: (target, cmd) => {\n    const actual = deref(cmd)\n    if (actual && !Reflect.has(target, actual)) {\n      const Impl = require(`./${actual}.js`)\n      const impl = new Impl(npm)\n      // Our existing npm.commands[x] act like a function with attributes, but\n      // our modules have non-inumerable attributes so we can't just assign\n      // them to an anonymous function like we used to.  This acts like that\n      // old way of doing things, until we can make breaking changes to the\n      // npm.commands[x] api\n      target[actual] = new Proxy(\n        (args, cb) => npm[_runCmd](actual, impl, args, cb),\n        {\n          get: (target, attr, receiver) => {\n            return Reflect.get(impl, attr, receiver)\n          },\n        })\n    }\n    return target[actual]\n  },\n})\n\n// Timers in progress\nconst timers = new Map()\n// Finished timers\nconst timings = {}\n\nconst processOnTimeHandler = (name) => {\n  timers.set(name, Date.now())\n}\n\nconst processOnTimeEndHandler = (name) => {\n  if (timers.has(name)) {\n    const ms = Date.now() - timers.get(name)\n    log.timing(name, `Completed in ${ms}ms`)\n    timings[name] = ms\n    timers.delete(name)\n  } else\n    log.silly('timing', \"Tried to end timer that doesn't exist:\", name)\n}\n\nconst { definitions, flatten, shorthands } = require('./utils/config/index.js')\nconst { shellouts } = require('./utils/cmd-list.js')\nconst usage = require('./utils/npm-usage.js')\n\nconst which = require('which')\n\nconst deref = require('./utils/deref-command.js')\nconst setupLog = require('./utils/setup-log.js')\nconst cleanUpLogFiles = require('./utils/cleanup-log-files.js')\nconst getProjectScope = require('./utils/get-project-scope.js')\n\nlet warnedNonDashArg = false\nconst _runCmd = Symbol('_runCmd')\nconst _load = Symbol('_load')\nconst _tmpFolder = Symbol('_tmpFolder')\nconst _title = Symbol('_title')\n\nconst npm = module.exports = new class extends EventEmitter {\n  constructor () {\n    super()\n    this.started = Date.now()\n    this.command = null\n    this.commands = proxyCmds\n    this.timings = timings\n    this.timers = timers\n    this.perfStart()\n    procLogListener()\n    process.emit('time', 'npm')\n    this.version = require('../package.json').version\n    this.config = new Config({\n      npmPath: dirname(__dirname),\n      definitions,\n      flatten,\n      shorthands,\n    })\n    this[_title] = process.title\n    this.updateNotification = null\n  }\n\n  perfStart () {\n    process.on('time', processOnTimeHandler)\n    process.on('timeEnd', processOnTimeEndHandler)\n  }\n\n  perfStop () {\n    process.off('time', processOnTimeHandler)\n    process.off('timeEnd', processOnTimeEndHandler)\n  }\n\n  get shelloutCommands () {\n    return shellouts\n  }\n\n  deref (c) {\n    return deref(c)\n  }\n\n  // this will only ever be called with cmd set to the canonical command name\n  [_runCmd] (cmd, impl, args, cb) {\n    if (!this.loaded) {\n      throw new Error(\n        'Call npm.load() before using this command.\\n' +\n        'See lib/cli.js for example usage.'\n      )\n    }\n\n    process.emit('time', `command:${cmd}`)\n    // since 'test', 'start', 'stop', etc. commands re-enter this function\n    // to call the run-script command, we need to only set it one time.\n    if (!this.command) {\n      process.env.npm_command = cmd\n      this.command = cmd\n    }\n\n    // Options are prefixed by a hyphen-minus (-, \\u2d).\n    // Other dash-type chars look similar but are invalid.\n    if (!warnedNonDashArg) {\n      args.filter(arg => /^[\\u2010-\\u2015\\u2212\\uFE58\\uFE63\\uFF0D]/.test(arg))\n        .forEach(arg => {\n          warnedNonDashArg = true\n          this.log.error('arg', 'Argument starts with non-ascii dash, this is probably invalid:', arg)\n        })\n    }\n\n    const workspacesEnabled = this.config.get('workspaces')\n    const workspacesFilters = this.config.get('workspace')\n    const filterByWorkspaces = workspacesEnabled || workspacesFilters.length > 0\n\n    if (this.config.get('usage')) {\n      this.output(impl.usage)\n      cb()\n    } else if (filterByWorkspaces) {\n      if (this.config.get('global'))\n        return cb(new Error('Workspaces not supported for global packages'))\n\n      impl.execWorkspaces(args, this.config.get('workspace'), er => {\n        process.emit('timeEnd', `command:${cmd}`)\n        cb(er)\n      })\n    } else {\n      impl.exec(args, er => {\n        process.emit('timeEnd', `command:${cmd}`)\n        cb(er)\n      })\n    }\n  }\n\n  load (cb) {\n    if (cb && typeof cb !== 'function')\n      throw new TypeError('callback must be a function if provided')\n\n    if (!this.loadPromise) {\n      process.emit('time', 'npm:load')\n      this.log.pause()\n      this.loadPromise = new Promise((resolve, reject) => {\n        this[_load]().catch(er => er).then((er) => {\n          this.loadErr = er\n          if (!er && this.config.get('force'))\n            this.log.warn('using --force', 'Recommended protections disabled.')\n\n          process.emit('timeEnd', 'npm:load')\n          if (er)\n            return reject(er)\n          resolve()\n        })\n      })\n    }\n    if (!cb)\n      return this.loadPromise\n\n    // loadPromise is returned here for legacy purposes, old code was allowing\n    // the mixing of callback and promise here.\n    return this.loadPromise.then(cb, cb)\n  }\n\n  get loaded () {\n    return this.config.loaded\n  }\n\n  get title () {\n    return this[_title]\n  }\n\n  set title (t) {\n    process.title = t\n    this[_title] = t\n  }\n\n  async [_load] () {\n    process.emit('time', 'npm:load:whichnode')\n    let node\n    try {\n      node = which.sync(process.argv[0])\n    } catch (_) {\n      // TODO should we throw here?\n    }\n    process.emit('timeEnd', 'npm:load:whichnode')\n    if (node && node.toUpperCase() !== process.execPath.toUpperCase()) {\n      this.log.verbose('node symlink', node)\n      process.execPath = node\n      this.config.execPath = node\n    }\n\n    process.emit('time', 'npm:load:configload')\n    await this.config.load()\n    process.emit('timeEnd', 'npm:load:configload')\n\n    this.argv = this.config.parsedArgv.remain\n    // note: this MUST be shorter than the actual argv length, because it\n    // uses the same memory, so node will truncate it if it's too long.\n    // if it's a token revocation, then the argv contains a secret, so\n    // don't show that.  (Regrettable historical choice to put it there.)\n    // Any other secrets are configs only, so showing only the positional\n    // args keeps those from being leaked.\n    process.emit('time', 'npm:load:setTitle')\n    const tokrev = deref(this.argv[0]) === 'token' && this.argv[1] === 'revoke'\n    this.title = tokrev ? 'npm token revoke' + (this.argv[2] ? ' ***' : '')\n      : ['npm', ...this.argv].join(' ')\n    process.emit('timeEnd', 'npm:load:setTitle')\n\n    process.emit('time', 'npm:load:setupLog')\n    setupLog(this.config)\n    process.emit('timeEnd', 'npm:load:setupLog')\n    process.env.COLOR = this.color ? '1' : '0'\n\n    process.emit('time', 'npm:load:cleanupLog')\n    cleanUpLogFiles(this.cache, this.config.get('logs-max'), this.log.warn)\n    process.emit('timeEnd', 'npm:load:cleanupLog')\n\n    this.log.resume()\n\n    process.emit('time', 'npm:load:configScope')\n    const configScope = this.config.get('scope')\n    if (configScope && !/^@/.test(configScope))\n      this.config.set('scope', `@${configScope}`, this.config.find('scope'))\n    process.emit('timeEnd', 'npm:load:configScope')\n\n    process.emit('time', 'npm:load:projectScope')\n    this.projectScope = this.config.get('scope') ||\n      getProjectScope(this.prefix)\n    process.emit('timeEnd', 'npm:load:projectScope')\n  }\n\n  get flatOptions () {\n    const { flat } = this.config\n    if (this.command)\n      flat.npmCommand = this.command\n    return flat\n  }\n\n  get color () {\n    // This is a special derived value that takes into consideration not only\n    // the config, but whether or not we are operating in a tty.\n    return this.flatOptions.color\n  }\n\n  get lockfileVersion () {\n    return 2\n  }\n\n  get log () {\n    return log\n  }\n\n  get cache () {\n    return this.config.get('cache')\n  }\n\n  set cache (r) {\n    this.config.set('cache', r)\n  }\n\n  get globalPrefix () {\n    return this.config.globalPrefix\n  }\n\n  set globalPrefix (r) {\n    this.config.globalPrefix = r\n  }\n\n  get localPrefix () {\n    return this.config.localPrefix\n  }\n\n  set localPrefix (r) {\n    this.config.localPrefix = r\n  }\n\n  get globalDir () {\n    return process.platform !== 'win32'\n      ? resolve(this.globalPrefix, 'lib', 'node_modules')\n      : resolve(this.globalPrefix, 'node_modules')\n  }\n\n  get localDir () {\n    return resolve(this.localPrefix, 'node_modules')\n  }\n\n  get dir () {\n    return (this.config.get('global')) ? this.globalDir : this.localDir\n  }\n\n  get globalBin () {\n    const b = this.globalPrefix\n    return process.platform !== 'win32' ? resolve(b, 'bin') : b\n  }\n\n  get localBin () {\n    return resolve(this.dir, '.bin')\n  }\n\n  get bin () {\n    return this.config.get('global') ? this.globalBin : this.localBin\n  }\n\n  get prefix () {\n    return this.config.get('global') ? this.globalPrefix : this.localPrefix\n  }\n\n  set prefix (r) {\n    const k = this.config.get('global') ? 'globalPrefix' : 'localPrefix'\n    this[k] = r\n  }\n\n  get usage () {\n    return usage(this)\n  }\n\n  // XXX add logging to see if we actually use this\n  get tmp () {\n    if (!this[_tmpFolder]) {\n      const rand = require('crypto').randomBytes(4).toString('hex')\n      this[_tmpFolder] = `npm-${process.pid}-${rand}`\n    }\n    return resolve(this.config.get('tmp'), this[_tmpFolder])\n  }\n\n  // output to stdout in a progress bar compatible way\n  output (...msg) {\n    this.log.clearProgress()\n    console.log(...msg)\n    this.log.showProgress()\n  }\n}()\n\nif (require.main === module)\n  require('./cli.js')(process)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}