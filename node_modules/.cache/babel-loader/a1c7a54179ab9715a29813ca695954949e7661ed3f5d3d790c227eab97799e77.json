{"ast":null,"code":"const chalk = require('chalk');\nconst nocolor = {\n  bold: s => s,\n  dim: s => s,\n  red: s => s,\n  yellow: s => s,\n  cyan: s => s,\n  magenta: s => s,\n  blue: s => s,\n  green: s => s\n};\nconst {\n  relative\n} = require('path');\nconst explainNode = (node, depth, color) => printNode(node, color) + explainDependents(node, depth, color) + explainLinksIn(node, depth, color);\nconst colorType = (type, color) => {\n  const {\n    red,\n    yellow,\n    cyan,\n    magenta,\n    blue,\n    green\n  } = color ? chalk : nocolor;\n  const style = type === 'extraneous' ? red : type === 'dev' ? yellow : type === 'optional' ? cyan : type === 'peer' ? magenta : type === 'bundled' ? blue : type === 'workspace' ? green : /* istanbul ignore next */s => s;\n  return style(type);\n};\nconst printNode = (node, color) => {\n  const {\n    name,\n    version,\n    location,\n    extraneous,\n    dev,\n    optional,\n    peer,\n    bundled,\n    isWorkspace\n  } = node;\n  const {\n    bold,\n    dim,\n    green\n  } = color ? chalk : nocolor;\n  const extra = [];\n  if (extraneous) extra.push(' ' + bold(colorType('extraneous', color)));\n  if (dev) extra.push(' ' + bold(colorType('dev', color)));\n  if (optional) extra.push(' ' + bold(colorType('optional', color)));\n  if (peer) extra.push(' ' + bold(colorType('peer', color)));\n  if (bundled) extra.push(' ' + bold(colorType('bundled', color)));\n  const pkgid = isWorkspace ? green(`${name}@${version}`) : `${bold(name)}@${bold(version)}`;\n  return `${pkgid}${extra.join('')}` + (location ? dim(`\\n${location}`) : '');\n};\nconst explainLinksIn = ({\n  linksIn\n}, depth, color) => {\n  if (!linksIn || !linksIn.length || depth <= 0) return '';\n  const messages = linksIn.map(link => explainNode(link, depth - 1, color));\n  const str = '\\n' + messages.join('\\n');\n  return str.split('\\n').join('\\n  ');\n};\nconst explainDependents = ({\n  name,\n  dependents\n}, depth, color) => {\n  if (!dependents || !dependents.length || depth <= 0) return '';\n  const max = Math.ceil(depth / 2);\n  const messages = dependents.slice(0, max).map(edge => explainEdge(edge, depth, color));\n\n  // show just the names of the first 5 deps that overflowed the list\n  if (dependents.length > max) {\n    let len = 0;\n    const maxLen = 50;\n    const showNames = [];\n    for (let i = max; i < dependents.length; i++) {\n      const {\n        from: {\n          name = 'the root project'\n        }\n      } = dependents[i];\n      len += name.length;\n      if (len >= maxLen && i < dependents.length - 1) {\n        showNames.push('...');\n        break;\n      }\n      showNames.push(name);\n    }\n    const show = `(${showNames.join(', ')})`;\n    messages.push(`${dependents.length - max} more ${show}`);\n  }\n  const str = '\\n' + messages.join('\\n');\n  return str.split('\\n').join('\\n  ');\n};\nconst explainEdge = ({\n  name,\n  type,\n  bundled,\n  from,\n  spec\n}, depth, color) => {\n  const {\n    bold\n  } = color ? chalk : nocolor;\n  const dep = type === 'workspace' ? bold(relative(from.location, spec.slice('file:'.length))) : `${bold(name)}@\"${bold(spec)}\"`;\n  const fromMsg = ` from ${explainFrom(from, depth, color)}`;\n  return (type === 'prod' ? '' : `${colorType(type, color)} `) + (bundled ? `${colorType('bundled', color)} ` : '') + `${dep}${fromMsg}`;\n};\nconst explainFrom = (from, depth, color) => {\n  if (!from.name && !from.version) return 'the root project';\n  return printNode(from, color) + explainDependents(from, depth - 1, color) + explainLinksIn(from, depth - 1, color);\n};\nmodule.exports = {\n  explainNode,\n  printNode,\n  explainEdge\n};","map":{"version":3,"names":["chalk","require","nocolor","bold","s","dim","red","yellow","cyan","magenta","blue","green","relative","explainNode","node","depth","color","printNode","explainDependents","explainLinksIn","colorType","type","style","name","version","location","extraneous","dev","optional","peer","bundled","isWorkspace","extra","push","pkgid","join","linksIn","length","messages","map","link","str","split","dependents","max","Math","ceil","slice","edge","explainEdge","len","maxLen","showNames","i","from","show","spec","dep","fromMsg","explainFrom","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/utils/explain-dep.js"],"sourcesContent":["const chalk = require('chalk')\nconst nocolor = {\n  bold: s => s,\n  dim: s => s,\n  red: s => s,\n  yellow: s => s,\n  cyan: s => s,\n  magenta: s => s,\n  blue: s => s,\n  green: s => s,\n}\n\nconst { relative } = require('path')\n\nconst explainNode = (node, depth, color) =>\n  printNode(node, color) +\n  explainDependents(node, depth, color) +\n  explainLinksIn(node, depth, color)\n\nconst colorType = (type, color) => {\n  const { red, yellow, cyan, magenta, blue, green } = color ? chalk : nocolor\n  const style = type === 'extraneous' ? red\n    : type === 'dev' ? yellow\n    : type === 'optional' ? cyan\n    : type === 'peer' ? magenta\n    : type === 'bundled' ? blue\n    : type === 'workspace' ? green\n    : /* istanbul ignore next */ s => s\n  return style(type)\n}\n\nconst printNode = (node, color) => {\n  const {\n    name,\n    version,\n    location,\n    extraneous,\n    dev,\n    optional,\n    peer,\n    bundled,\n    isWorkspace,\n  } = node\n  const { bold, dim, green } = color ? chalk : nocolor\n  const extra = []\n  if (extraneous)\n    extra.push(' ' + bold(colorType('extraneous', color)))\n\n  if (dev)\n    extra.push(' ' + bold(colorType('dev', color)))\n\n  if (optional)\n    extra.push(' ' + bold(colorType('optional', color)))\n\n  if (peer)\n    extra.push(' ' + bold(colorType('peer', color)))\n\n  if (bundled)\n    extra.push(' ' + bold(colorType('bundled', color)))\n\n  const pkgid = isWorkspace\n    ? green(`${name}@${version}`)\n    : `${bold(name)}@${bold(version)}`\n\n  return `${pkgid}${extra.join('')}` +\n    (location ? dim(`\\n${location}`) : '')\n}\n\nconst explainLinksIn = ({ linksIn }, depth, color) => {\n  if (!linksIn || !linksIn.length || depth <= 0)\n    return ''\n\n  const messages = linksIn.map(link => explainNode(link, depth - 1, color))\n  const str = '\\n' + messages.join('\\n')\n  return str.split('\\n').join('\\n  ')\n}\n\nconst explainDependents = ({ name, dependents }, depth, color) => {\n  if (!dependents || !dependents.length || depth <= 0)\n    return ''\n\n  const max = Math.ceil(depth / 2)\n  const messages = dependents.slice(0, max)\n    .map(edge => explainEdge(edge, depth, color))\n\n  // show just the names of the first 5 deps that overflowed the list\n  if (dependents.length > max) {\n    let len = 0\n    const maxLen = 50\n    const showNames = []\n    for (let i = max; i < dependents.length; i++) {\n      const { from: { name = 'the root project' } } = dependents[i]\n      len += name.length\n      if (len >= maxLen && i < dependents.length - 1) {\n        showNames.push('...')\n        break\n      }\n      showNames.push(name)\n    }\n    const show = `(${showNames.join(', ')})`\n    messages.push(`${dependents.length - max} more ${show}`)\n  }\n\n  const str = '\\n' + messages.join('\\n')\n  return str.split('\\n').join('\\n  ')\n}\n\nconst explainEdge = ({ name, type, bundled, from, spec }, depth, color) => {\n  const { bold } = color ? chalk : nocolor\n  const dep = type === 'workspace'\n    ? bold(relative(from.location, spec.slice('file:'.length)))\n    : `${bold(name)}@\"${bold(spec)}\"`\n  const fromMsg = ` from ${explainFrom(from, depth, color)}`\n\n  return (type === 'prod' ? '' : `${colorType(type, color)} `) +\n    (bundled ? `${colorType('bundled', color)} ` : '') +\n    `${dep}${fromMsg}`\n}\n\nconst explainFrom = (from, depth, color) => {\n  if (!from.name && !from.version)\n    return 'the root project'\n\n  return printNode(from, color) +\n    explainDependents(from, depth - 1, color) +\n    explainLinksIn(from, depth - 1, color)\n}\n\nmodule.exports = { explainNode, printNode, explainEdge }\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,OAAO,GAAG;EACdC,IAAI,EAAEC,CAAC,IAAIA,CAAC;EACZC,GAAG,EAAED,CAAC,IAAIA,CAAC;EACXE,GAAG,EAAEF,CAAC,IAAIA,CAAC;EACXG,MAAM,EAAEH,CAAC,IAAIA,CAAC;EACdI,IAAI,EAAEJ,CAAC,IAAIA,CAAC;EACZK,OAAO,EAAEL,CAAC,IAAIA,CAAC;EACfM,IAAI,EAAEN,CAAC,IAAIA,CAAC;EACZO,KAAK,EAAEP,CAAC,IAAIA;AACd,CAAC;AAED,MAAM;EAAEQ;AAAS,CAAC,GAAGX,OAAO,CAAC,MAAM,CAAC;AAEpC,MAAMY,WAAW,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,KACrCC,SAAS,CAACH,IAAI,EAAEE,KAAK,CAAC,GACtBE,iBAAiB,CAACJ,IAAI,EAAEC,KAAK,EAAEC,KAAK,CAAC,GACrCG,cAAc,CAACL,IAAI,EAAEC,KAAK,EAAEC,KAAK,CAAC;AAEpC,MAAMI,SAAS,GAAGA,CAACC,IAAI,EAAEL,KAAK,KAAK;EACjC,MAAM;IAAEV,GAAG;IAAEC,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGK,KAAK,GAAGhB,KAAK,GAAGE,OAAO;EAC3E,MAAMoB,KAAK,GAAGD,IAAI,KAAK,YAAY,GAAGf,GAAG,GACrCe,IAAI,KAAK,KAAK,GAAGd,MAAM,GACvBc,IAAI,KAAK,UAAU,GAAGb,IAAI,GAC1Ba,IAAI,KAAK,MAAM,GAAGZ,OAAO,GACzBY,IAAI,KAAK,SAAS,GAAGX,IAAI,GACzBW,IAAI,KAAK,WAAW,GAAGV,KAAK,GAC5B,0BAA2BP,CAAC,IAAIA,CAAC;EACrC,OAAOkB,KAAK,CAACD,IAAI,CAAC;AACpB,CAAC;AAED,MAAMJ,SAAS,GAAGA,CAACH,IAAI,EAAEE,KAAK,KAAK;EACjC,MAAM;IACJO,IAAI;IACJC,OAAO;IACPC,QAAQ;IACRC,UAAU;IACVC,GAAG;IACHC,QAAQ;IACRC,IAAI;IACJC,OAAO;IACPC;EACF,CAAC,GAAGjB,IAAI;EACR,MAAM;IAAEX,IAAI;IAAEE,GAAG;IAAEM;EAAM,CAAC,GAAGK,KAAK,GAAGhB,KAAK,GAAGE,OAAO;EACpD,MAAM8B,KAAK,GAAG,EAAE;EAChB,IAAIN,UAAU,EACZM,KAAK,CAACC,IAAI,CAAC,GAAG,GAAG9B,IAAI,CAACiB,SAAS,CAAC,YAAY,EAAEJ,KAAK,CAAC,CAAC,CAAC;EAExD,IAAIW,GAAG,EACLK,KAAK,CAACC,IAAI,CAAC,GAAG,GAAG9B,IAAI,CAACiB,SAAS,CAAC,KAAK,EAAEJ,KAAK,CAAC,CAAC,CAAC;EAEjD,IAAIY,QAAQ,EACVI,KAAK,CAACC,IAAI,CAAC,GAAG,GAAG9B,IAAI,CAACiB,SAAS,CAAC,UAAU,EAAEJ,KAAK,CAAC,CAAC,CAAC;EAEtD,IAAIa,IAAI,EACNG,KAAK,CAACC,IAAI,CAAC,GAAG,GAAG9B,IAAI,CAACiB,SAAS,CAAC,MAAM,EAAEJ,KAAK,CAAC,CAAC,CAAC;EAElD,IAAIc,OAAO,EACTE,KAAK,CAACC,IAAI,CAAC,GAAG,GAAG9B,IAAI,CAACiB,SAAS,CAAC,SAAS,EAAEJ,KAAK,CAAC,CAAC,CAAC;EAErD,MAAMkB,KAAK,GAAGH,WAAW,GACrBpB,KAAK,CAAC,GAAGY,IAAI,IAAIC,OAAO,EAAE,CAAC,GAC3B,GAAGrB,IAAI,CAACoB,IAAI,CAAC,IAAIpB,IAAI,CAACqB,OAAO,CAAC,EAAE;EAEpC,OAAO,GAAGU,KAAK,GAAGF,KAAK,CAACG,IAAI,CAAC,EAAE,CAAC,EAAE,IAC/BV,QAAQ,GAAGpB,GAAG,CAAC,KAAKoB,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC;AAC1C,CAAC;AAED,MAAMN,cAAc,GAAGA,CAAC;EAAEiB;AAAQ,CAAC,EAAErB,KAAK,EAAEC,KAAK,KAAK;EACpD,IAAI,CAACoB,OAAO,IAAI,CAACA,OAAO,CAACC,MAAM,IAAItB,KAAK,IAAI,CAAC,EAC3C,OAAO,EAAE;EAEX,MAAMuB,QAAQ,GAAGF,OAAO,CAACG,GAAG,CAACC,IAAI,IAAI3B,WAAW,CAAC2B,IAAI,EAAEzB,KAAK,GAAG,CAAC,EAAEC,KAAK,CAAC,CAAC;EACzE,MAAMyB,GAAG,GAAG,IAAI,GAAGH,QAAQ,CAACH,IAAI,CAAC,IAAI,CAAC;EACtC,OAAOM,GAAG,CAACC,KAAK,CAAC,IAAI,CAAC,CAACP,IAAI,CAAC,MAAM,CAAC;AACrC,CAAC;AAED,MAAMjB,iBAAiB,GAAGA,CAAC;EAAEK,IAAI;EAAEoB;AAAW,CAAC,EAAE5B,KAAK,EAAEC,KAAK,KAAK;EAChE,IAAI,CAAC2B,UAAU,IAAI,CAACA,UAAU,CAACN,MAAM,IAAItB,KAAK,IAAI,CAAC,EACjD,OAAO,EAAE;EAEX,MAAM6B,GAAG,GAAGC,IAAI,CAACC,IAAI,CAAC/B,KAAK,GAAG,CAAC,CAAC;EAChC,MAAMuB,QAAQ,GAAGK,UAAU,CAACI,KAAK,CAAC,CAAC,EAAEH,GAAG,CAAC,CACtCL,GAAG,CAACS,IAAI,IAAIC,WAAW,CAACD,IAAI,EAAEjC,KAAK,EAAEC,KAAK,CAAC,CAAC;;EAE/C;EACA,IAAI2B,UAAU,CAACN,MAAM,GAAGO,GAAG,EAAE;IAC3B,IAAIM,GAAG,GAAG,CAAC;IACX,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAGT,GAAG,EAAES,CAAC,GAAGV,UAAU,CAACN,MAAM,EAAEgB,CAAC,EAAE,EAAE;MAC5C,MAAM;QAAEC,IAAI,EAAE;UAAE/B,IAAI,GAAG;QAAmB;MAAE,CAAC,GAAGoB,UAAU,CAACU,CAAC,CAAC;MAC7DH,GAAG,IAAI3B,IAAI,CAACc,MAAM;MAClB,IAAIa,GAAG,IAAIC,MAAM,IAAIE,CAAC,GAAGV,UAAU,CAACN,MAAM,GAAG,CAAC,EAAE;QAC9Ce,SAAS,CAACnB,IAAI,CAAC,KAAK,CAAC;QACrB;MACF;MACAmB,SAAS,CAACnB,IAAI,CAACV,IAAI,CAAC;IACtB;IACA,MAAMgC,IAAI,GAAG,IAAIH,SAAS,CAACjB,IAAI,CAAC,IAAI,CAAC,GAAG;IACxCG,QAAQ,CAACL,IAAI,CAAC,GAAGU,UAAU,CAACN,MAAM,GAAGO,GAAG,SAASW,IAAI,EAAE,CAAC;EAC1D;EAEA,MAAMd,GAAG,GAAG,IAAI,GAAGH,QAAQ,CAACH,IAAI,CAAC,IAAI,CAAC;EACtC,OAAOM,GAAG,CAACC,KAAK,CAAC,IAAI,CAAC,CAACP,IAAI,CAAC,MAAM,CAAC;AACrC,CAAC;AAED,MAAMc,WAAW,GAAGA,CAAC;EAAE1B,IAAI;EAAEF,IAAI;EAAES,OAAO;EAAEwB,IAAI;EAAEE;AAAK,CAAC,EAAEzC,KAAK,EAAEC,KAAK,KAAK;EACzE,MAAM;IAAEb;EAAK,CAAC,GAAGa,KAAK,GAAGhB,KAAK,GAAGE,OAAO;EACxC,MAAMuD,GAAG,GAAGpC,IAAI,KAAK,WAAW,GAC5BlB,IAAI,CAACS,QAAQ,CAAC0C,IAAI,CAAC7B,QAAQ,EAAE+B,IAAI,CAACT,KAAK,CAAC,OAAO,CAACV,MAAM,CAAC,CAAC,CAAC,GACzD,GAAGlC,IAAI,CAACoB,IAAI,CAAC,KAAKpB,IAAI,CAACqD,IAAI,CAAC,GAAG;EACnC,MAAME,OAAO,GAAG,SAASC,WAAW,CAACL,IAAI,EAAEvC,KAAK,EAAEC,KAAK,CAAC,EAAE;EAE1D,OAAO,CAACK,IAAI,KAAK,MAAM,GAAG,EAAE,GAAG,GAAGD,SAAS,CAACC,IAAI,EAAEL,KAAK,CAAC,GAAG,KACxDc,OAAO,GAAG,GAAGV,SAAS,CAAC,SAAS,EAAEJ,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,GAClD,GAAGyC,GAAG,GAAGC,OAAO,EAAE;AACtB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACL,IAAI,EAAEvC,KAAK,EAAEC,KAAK,KAAK;EAC1C,IAAI,CAACsC,IAAI,CAAC/B,IAAI,IAAI,CAAC+B,IAAI,CAAC9B,OAAO,EAC7B,OAAO,kBAAkB;EAE3B,OAAOP,SAAS,CAACqC,IAAI,EAAEtC,KAAK,CAAC,GAC3BE,iBAAiB,CAACoC,IAAI,EAAEvC,KAAK,GAAG,CAAC,EAAEC,KAAK,CAAC,GACzCG,cAAc,CAACmC,IAAI,EAAEvC,KAAK,GAAG,CAAC,EAAEC,KAAK,CAAC;AAC1C,CAAC;AAED4C,MAAM,CAACC,OAAO,GAAG;EAAEhD,WAAW;EAAEI,SAAS;EAAEgC;AAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}