{"ast":null,"code":"const rpj = require('read-package-json-fast');\nconst runScriptPkg = require('./run-script-pkg.js');\nconst validateOptions = require('./validate-options.js');\nconst isServerPackage = require('./is-server-package.js');\nconst runScript = options => {\n  validateOptions(options);\n  const {\n    pkg,\n    path\n  } = options;\n  return pkg ? runScriptPkg(options) : rpj(path + '/package.json').then(pkg => runScriptPkg({\n    ...options,\n    pkg\n  }));\n};\nmodule.exports = Object.assign(runScript, {\n  isServerPackage\n});","map":{"version":3,"names":["rpj","require","runScriptPkg","validateOptions","isServerPackage","runScript","options","pkg","path","then","module","exports","Object","assign"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/run-script/lib/run-script.js"],"sourcesContent":["const rpj = require('read-package-json-fast')\nconst runScriptPkg = require('./run-script-pkg.js')\nconst validateOptions = require('./validate-options.js')\nconst isServerPackage = require('./is-server-package.js')\n\nconst runScript = options => {\n  validateOptions(options)\n  const {pkg, path} = options\n  return pkg ? runScriptPkg(options)\n    : rpj(path + '/package.json').then(pkg => runScriptPkg({...options, pkg}))\n}\n\nmodule.exports = Object.assign(runScript, { isServerPackage })\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAC7C,MAAMC,YAAY,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AACnD,MAAME,eAAe,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AACxD,MAAMG,eAAe,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AAEzD,MAAMI,SAAS,GAAGC,OAAO,IAAI;EAC3BH,eAAe,CAACG,OAAO,CAAC;EACxB,MAAM;IAACC,GAAG;IAAEC;EAAI,CAAC,GAAGF,OAAO;EAC3B,OAAOC,GAAG,GAAGL,YAAY,CAACI,OAAO,CAAC,GAC9BN,GAAG,CAACQ,IAAI,GAAG,eAAe,CAAC,CAACC,IAAI,CAACF,GAAG,IAAIL,YAAY,CAAC;IAAC,GAAGI,OAAO;IAAEC;EAAG,CAAC,CAAC,CAAC;AAC9E,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACR,SAAS,EAAE;EAAED;AAAgB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}