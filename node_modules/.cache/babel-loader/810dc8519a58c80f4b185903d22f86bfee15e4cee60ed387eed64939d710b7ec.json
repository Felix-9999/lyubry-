{"ast":null,"code":"module.exports = cls => class Deduper extends cls {\n  async dedupe(options = {}) {\n    // allow the user to set options on the ctor as well.\n    // XXX: deprecate separate method options objects.\n    options = {\n      ...this.options,\n      ...options\n    };\n    const tree = await this.loadVirtual().catch(() => this.loadActual());\n    const names = [];\n    for (const name of tree.inventory.query('name')) {\n      if (tree.inventory.query('name', name).size > 1) {\n        names.push(name);\n      }\n    }\n    return this.reify({\n      ...options,\n      preferDedupe: true,\n      update: {\n        names\n      }\n    });\n  }\n};","map":{"version":3,"names":["module","exports","cls","Deduper","dedupe","options","tree","loadVirtual","catch","loadActual","names","name","inventory","query","size","push","reify","preferDedupe","update"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/@npmcli/arborist/lib/arborist/deduper.js"],"sourcesContent":["module.exports = cls => class Deduper extends cls {\n  async dedupe (options = {}) {\n    // allow the user to set options on the ctor as well.\n    // XXX: deprecate separate method options objects.\n    options = { ...this.options, ...options }\n    const tree = await this.loadVirtual().catch(() => this.loadActual())\n    const names = []\n    for (const name of tree.inventory.query('name')) {\n      if (tree.inventory.query('name', name).size > 1) {\n        names.push(name)\n      }\n    }\n    return this.reify({\n      ...options,\n      preferDedupe: true,\n      update: { names },\n    })\n  }\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,GAAG,IAAI,MAAMC,OAAO,SAASD,GAAG,CAAC;EAChD,MAAME,MAAMA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC1B;IACA;IACAA,OAAO,GAAG;MAAE,GAAG,IAAI,CAACA,OAAO;MAAE,GAAGA;IAAQ,CAAC;IACzC,MAAMC,IAAI,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;IACpE,MAAMC,KAAK,GAAG,EAAE;IAChB,KAAK,MAAMC,IAAI,IAAIL,IAAI,CAACM,SAAS,CAACC,KAAK,CAAC,MAAM,CAAC,EAAE;MAC/C,IAAIP,IAAI,CAACM,SAAS,CAACC,KAAK,CAAC,MAAM,EAAEF,IAAI,CAAC,CAACG,IAAI,GAAG,CAAC,EAAE;QAC/CJ,KAAK,CAACK,IAAI,CAACJ,IAAI,CAAC;MAClB;IACF;IACA,OAAO,IAAI,CAACK,KAAK,CAAC;MAChB,GAAGX,OAAO;MACVY,YAAY,EAAE,IAAI;MAClBC,MAAM,EAAE;QAAER;MAAM;IAClB,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}