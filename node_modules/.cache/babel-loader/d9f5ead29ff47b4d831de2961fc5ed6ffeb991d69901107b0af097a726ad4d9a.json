{"ast":null,"code":"const path = require('path');\nconst Arborist = require('@npmcli/arborist');\nconst log = require('npmlog');\nconst reifyFinish = require('./utils/reify-finish.js');\nconst completion = require('./utils/completion/installed-deep.js');\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js');\nclass Update extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Update packages';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name() {\n    return 'update';\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params() {\n    return ['global', 'global-style', 'legacy-bundling', 'strict-peer-deps', 'package-lock', 'omit', 'ignore-scripts', 'audit', 'bin-links', 'fund', 'dry-run', ...super.params];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage() {\n    return ['[<pkg>...]'];\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  async completion(opts) {\n    return completion(this.npm, opts);\n  }\n  exec(args, cb) {\n    this.update(args).then(() => cb()).catch(cb);\n  }\n  async update(args) {\n    const update = args.length === 0 ? true : args;\n    const global = path.resolve(this.npm.globalDir, '..');\n    const where = this.npm.config.get('global') ? global : this.npm.prefix;\n    if (this.npm.config.get('depth')) {\n      log.warn('update', 'The --depth option no longer has any effect. See RFC0019.\\n' + 'https://github.com/npm/rfcs/blob/latest/implemented/0019-remove-update-depth-option.md');\n    }\n    const arb = new Arborist({\n      ...this.npm.flatOptions,\n      log: this.npm.log,\n      path: where,\n      workspaces: this.workspaceNames\n    });\n    await arb.reify({\n      update\n    });\n    await reifyFinish(this.npm, arb);\n  }\n}\nmodule.exports = Update;","map":{"version":3,"names":["path","require","Arborist","log","reifyFinish","completion","ArboristWorkspaceCmd","Update","description","name","params","usage","opts","npm","exec","args","cb","update","then","catch","length","global","resolve","globalDir","where","config","get","prefix","warn","arb","flatOptions","workspaces","workspaceNames","reify","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/update.js"],"sourcesContent":["const path = require('path')\n\nconst Arborist = require('@npmcli/arborist')\nconst log = require('npmlog')\n\nconst reifyFinish = require('./utils/reify-finish.js')\nconst completion = require('./utils/completion/installed-deep.js')\n\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js')\nclass Update extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Update packages'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'update'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'global',\n      'global-style',\n      'legacy-bundling',\n      'strict-peer-deps',\n      'package-lock',\n      'omit',\n      'ignore-scripts',\n      'audit',\n      'bin-links',\n      'fund',\n      'dry-run',\n      ...super.params,\n    ]\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['[<pkg>...]']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  async completion (opts) {\n    return completion(this.npm, opts)\n  }\n\n  exec (args, cb) {\n    this.update(args).then(() => cb()).catch(cb)\n  }\n\n  async update (args) {\n    const update = args.length === 0 ? true : args\n    const global = path.resolve(this.npm.globalDir, '..')\n    const where = this.npm.config.get('global')\n      ? global\n      : this.npm.prefix\n\n    if (this.npm.config.get('depth')) {\n      log.warn('update', 'The --depth option no longer has any effect. See RFC0019.\\n' +\n        'https://github.com/npm/rfcs/blob/latest/implemented/0019-remove-update-depth-option.md')\n    }\n\n    const arb = new Arborist({\n      ...this.npm.flatOptions,\n      log: this.npm.log,\n      path: where,\n      workspaces: this.workspaceNames,\n    })\n\n    await arb.reify({ update })\n    await reifyFinish(this.npm, arb)\n  }\n}\nmodule.exports = Update\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC5C,MAAME,GAAG,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAE7B,MAAMG,WAAW,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AACtD,MAAMI,UAAU,GAAGJ,OAAO,CAAC,sCAAsC,CAAC;AAElE,MAAMK,oBAAoB,GAAGL,OAAO,CAAC,8BAA8B,CAAC;AACpE,MAAMM,MAAM,SAASD,oBAAoB,CAAC;EACxC;EACA,WAAWE,WAAWA,CAAA,EAAI;IACxB,OAAO,iBAAiB;EAC1B;;EAEA;EACA,WAAWC,IAAIA,CAAA,EAAI;IACjB,OAAO,QAAQ;EACjB;;EAEA;EACA,WAAWC,MAAMA,CAAA,EAAI;IACnB,OAAO,CACL,QAAQ,EACR,cAAc,EACd,iBAAiB,EACjB,kBAAkB,EAClB,cAAc,EACd,MAAM,EACN,gBAAgB,EAChB,OAAO,EACP,WAAW,EACX,MAAM,EACN,SAAS,EACT,GAAG,KAAK,CAACA,MAAM,CAChB;EACH;;EAEA;EACA,WAAWC,KAAKA,CAAA,EAAI;IAClB,OAAO,CAAC,YAAY,CAAC;EACvB;;EAEA;EACA,MAAMN,UAAUA,CAAEO,IAAI,EAAE;IACtB,OAAOP,UAAU,CAAC,IAAI,CAACQ,GAAG,EAAED,IAAI,CAAC;EACnC;EAEAE,IAAIA,CAAEC,IAAI,EAAEC,EAAE,EAAE;IACd,IAAI,CAACC,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,MAAMF,EAAE,CAAC,CAAC,CAAC,CAACG,KAAK,CAACH,EAAE,CAAC;EAC9C;EAEA,MAAMC,MAAMA,CAAEF,IAAI,EAAE;IAClB,MAAME,MAAM,GAAGF,IAAI,CAACK,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGL,IAAI;IAC9C,MAAMM,MAAM,GAAGrB,IAAI,CAACsB,OAAO,CAAC,IAAI,CAACT,GAAG,CAACU,SAAS,EAAE,IAAI,CAAC;IACrD,MAAMC,KAAK,GAAG,IAAI,CAACX,GAAG,CAACY,MAAM,CAACC,GAAG,CAAC,QAAQ,CAAC,GACvCL,MAAM,GACN,IAAI,CAACR,GAAG,CAACc,MAAM;IAEnB,IAAI,IAAI,CAACd,GAAG,CAACY,MAAM,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE;MAChCvB,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAE,6DAA6D,GAC9E,wFAAwF,CAAC;IAC7F;IAEA,MAAMC,GAAG,GAAG,IAAI3B,QAAQ,CAAC;MACvB,GAAG,IAAI,CAACW,GAAG,CAACiB,WAAW;MACvB3B,GAAG,EAAE,IAAI,CAACU,GAAG,CAACV,GAAG;MACjBH,IAAI,EAAEwB,KAAK;MACXO,UAAU,EAAE,IAAI,CAACC;IACnB,CAAC,CAAC;IAEF,MAAMH,GAAG,CAACI,KAAK,CAAC;MAAEhB;IAAO,CAAC,CAAC;IAC3B,MAAMb,WAAW,CAAC,IAAI,CAACS,GAAG,EAAEgB,GAAG,CAAC;EAClC;AACF;AACAK,MAAM,CAACC,OAAO,GAAG5B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}