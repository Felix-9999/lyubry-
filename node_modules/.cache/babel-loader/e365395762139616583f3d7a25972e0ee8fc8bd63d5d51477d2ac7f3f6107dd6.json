{"ast":null,"code":"'use strict';\n\nconst pacote = require('pacote');\nconst npa = require('npm-package-arg');\nconst runScript = require('@npmcli/run-script');\nmodule.exports = pack;\nasync function pack(spec = 'file:.', opts = {}) {\n  // gets spec\n  spec = npa(spec);\n  const manifest = await pacote.manifest(spec, opts);\n\n  // Default to true if no log options passed, set to false if we're in silent\n  // mode\n  const banner = !opts.log || opts.log.level !== 'silent';\n  if (spec.type === 'directory') {\n    // prepack\n    await runScript({\n      ...opts,\n      event: 'prepack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner\n    });\n  }\n\n  // packs tarball\n  const tarball = await pacote.tarball(manifest._resolved, {\n    ...opts,\n    integrity: manifest._integrity\n  });\n  if (spec.type === 'directory') {\n    // postpack\n    await runScript({\n      ...opts,\n      event: 'postpack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner,\n      env: {\n        npm_package_from: tarball.from,\n        npm_package_resolved: tarball.resolved,\n        npm_package_integrity: tarball.integrity\n      }\n    });\n  }\n  return tarball;\n}","map":{"version":3,"names":["pacote","require","npa","runScript","module","exports","pack","spec","opts","manifest","banner","log","level","type","event","path","fetchSpec","stdio","pkg","tarball","_resolved","integrity","_integrity","env","npm_package_from","from","npm_package_resolved","resolved","npm_package_integrity"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/libnpmpack/index.js"],"sourcesContent":["'use strict'\n\nconst pacote = require('pacote')\nconst npa = require('npm-package-arg')\nconst runScript = require('@npmcli/run-script')\n\nmodule.exports = pack\nasync function pack (spec = 'file:.', opts = {}) {\n  // gets spec\n  spec = npa(spec)\n\n  const manifest = await pacote.manifest(spec, opts)\n\n  // Default to true if no log options passed, set to false if we're in silent\n  // mode\n  const banner = !opts.log || (opts.log.level !== 'silent')\n\n  if (spec.type === 'directory') {\n    // prepack\n    await runScript({\n      ...opts,\n      event: 'prepack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner\n    })\n  }\n\n  // packs tarball\n  const tarball = await pacote.tarball(manifest._resolved, {\n    ...opts,\n    integrity: manifest._integrity\n  })\n\n  if (spec.type === 'directory') {\n    // postpack\n    await runScript({\n      ...opts,\n      event: 'postpack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner,\n      env: {\n        npm_package_from: tarball.from,\n        npm_package_resolved: tarball.resolved,\n        npm_package_integrity: tarball.integrity\n      }\n    })\n  }\n\n  return tarball\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACtC,MAAME,SAAS,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAE/CG,MAAM,CAACC,OAAO,GAAGC,IAAI;AACrB,eAAeA,IAAIA,CAAEC,IAAI,GAAG,QAAQ,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EAC/C;EACAD,IAAI,GAAGL,GAAG,CAACK,IAAI,CAAC;EAEhB,MAAME,QAAQ,GAAG,MAAMT,MAAM,CAACS,QAAQ,CAACF,IAAI,EAAEC,IAAI,CAAC;;EAElD;EACA;EACA,MAAME,MAAM,GAAG,CAACF,IAAI,CAACG,GAAG,IAAKH,IAAI,CAACG,GAAG,CAACC,KAAK,KAAK,QAAS;EAEzD,IAAIL,IAAI,CAACM,IAAI,KAAK,WAAW,EAAE;IAC7B;IACA,MAAMV,SAAS,CAAC;MACd,GAAGK,IAAI;MACPM,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAER,IAAI,CAACS,SAAS;MACpBC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAET,QAAQ;MACbC;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMS,OAAO,GAAG,MAAMnB,MAAM,CAACmB,OAAO,CAACV,QAAQ,CAACW,SAAS,EAAE;IACvD,GAAGZ,IAAI;IACPa,SAAS,EAAEZ,QAAQ,CAACa;EACtB,CAAC,CAAC;EAEF,IAAIf,IAAI,CAACM,IAAI,KAAK,WAAW,EAAE;IAC7B;IACA,MAAMV,SAAS,CAAC;MACd,GAAGK,IAAI;MACPM,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAER,IAAI,CAACS,SAAS;MACpBC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAET,QAAQ;MACbC,MAAM;MACNa,GAAG,EAAE;QACHC,gBAAgB,EAAEL,OAAO,CAACM,IAAI;QAC9BC,oBAAoB,EAAEP,OAAO,CAACQ,QAAQ;QACtCC,qBAAqB,EAAET,OAAO,CAACE;MACjC;IACF,CAAC,CAAC;EACJ;EAEA,OAAOF,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}