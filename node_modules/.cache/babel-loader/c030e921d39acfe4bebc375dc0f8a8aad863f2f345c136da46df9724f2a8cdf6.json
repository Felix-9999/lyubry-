{"ast":null,"code":"const URL = require('url').URL;\n\n// replaces auth info in an array of arguments or in a strings\nfunction replaceInfo(arg) {\n  const isArray = Array.isArray(arg);\n  const isString = str => typeof str === 'string';\n  if (!isArray && !isString(arg)) return arg;\n  const testUrlAndReplace = str => {\n    try {\n      const url = new URL(str);\n      return url.password === '' ? str : str.replace(url.password, '***');\n    } catch (e) {\n      return str;\n    }\n  };\n  const args = isString(arg) ? arg.split(' ') : arg;\n  const info = args.map(a => {\n    if (isString(a) && a.indexOf(' ') > -1) return a.split(' ').map(testUrlAndReplace).join(' ');\n    return testUrlAndReplace(a);\n  });\n  return isString(arg) ? info.join(' ') : info;\n}\nmodule.exports = replaceInfo;","map":{"version":3,"names":["URL","require","replaceInfo","arg","isArray","Array","isString","str","testUrlAndReplace","url","password","replace","e","args","split","info","map","a","indexOf","join","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/utils/replace-info.js"],"sourcesContent":["const URL = require('url').URL\n\n// replaces auth info in an array of arguments or in a strings\nfunction replaceInfo (arg) {\n  const isArray = Array.isArray(arg)\n  const isString = str => typeof str === 'string'\n\n  if (!isArray && !isString(arg))\n    return arg\n\n  const testUrlAndReplace = str => {\n    try {\n      const url = new URL(str)\n      return url.password === '' ? str : str.replace(url.password, '***')\n    } catch (e) {\n      return str\n    }\n  }\n\n  const args = isString(arg) ? arg.split(' ') : arg\n  const info = args.map(a => {\n    if (isString(a) && a.indexOf(' ') > -1)\n      return a.split(' ').map(testUrlAndReplace).join(' ')\n\n    return testUrlAndReplace(a)\n  })\n\n  return isString(arg) ? info.join(' ') : info\n}\n\nmodule.exports = replaceInfo\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC,CAACD,GAAG;;AAE9B;AACA,SAASE,WAAWA,CAAEC,GAAG,EAAE;EACzB,MAAMC,OAAO,GAAGC,KAAK,CAACD,OAAO,CAACD,GAAG,CAAC;EAClC,MAAMG,QAAQ,GAAGC,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ;EAE/C,IAAI,CAACH,OAAO,IAAI,CAACE,QAAQ,CAACH,GAAG,CAAC,EAC5B,OAAOA,GAAG;EAEZ,MAAMK,iBAAiB,GAAGD,GAAG,IAAI;IAC/B,IAAI;MACF,MAAME,GAAG,GAAG,IAAIT,GAAG,CAACO,GAAG,CAAC;MACxB,OAAOE,GAAG,CAACC,QAAQ,KAAK,EAAE,GAAGH,GAAG,GAAGA,GAAG,CAACI,OAAO,CAACF,GAAG,CAACC,QAAQ,EAAE,KAAK,CAAC;IACrE,CAAC,CAAC,OAAOE,CAAC,EAAE;MACV,OAAOL,GAAG;IACZ;EACF,CAAC;EAED,MAAMM,IAAI,GAAGP,QAAQ,CAACH,GAAG,CAAC,GAAGA,GAAG,CAACW,KAAK,CAAC,GAAG,CAAC,GAAGX,GAAG;EACjD,MAAMY,IAAI,GAAGF,IAAI,CAACG,GAAG,CAACC,CAAC,IAAI;IACzB,IAAIX,QAAQ,CAACW,CAAC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACpC,OAAOD,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC,CAACE,GAAG,CAACR,iBAAiB,CAAC,CAACW,IAAI,CAAC,GAAG,CAAC;IAEtD,OAAOX,iBAAiB,CAACS,CAAC,CAAC;EAC7B,CAAC,CAAC;EAEF,OAAOX,QAAQ,CAACH,GAAG,CAAC,GAAGY,IAAI,CAACI,IAAI,CAAC,GAAG,CAAC,GAAGJ,IAAI;AAC9C;AAEAK,MAAM,CAACC,OAAO,GAAGnB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}