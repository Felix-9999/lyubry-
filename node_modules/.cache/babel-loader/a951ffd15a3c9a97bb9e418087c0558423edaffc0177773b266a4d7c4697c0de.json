{"ast":null,"code":"'use strict';\n\nconst errors = require('./errors.js');\nconst {\n  Response\n} = require('minipass-fetch');\nconst defaultOpts = require('./default-opts.js');\nconst checkResponse = async ({\n  method,\n  uri,\n  res,\n  registry,\n  startTime,\n  auth,\n  opts\n}) => {\n  opts = {\n    ...defaultOpts,\n    ...opts\n  };\n  if (res.headers.has('npm-notice') && !res.headers.has('x-local-cache')) opts.log.notice('', res.headers.get('npm-notice'));\n  if (res.status >= 400) {\n    logRequest(method, res, startTime, opts);\n    if (auth && auth.scopeAuthKey && !auth.token && !auth.auth) {\n      // we didn't have auth for THIS request, but we do have auth for\n      // requests to the registry indicated by the spec's scope value.\n      // Warn the user.\n      opts.log.warn('registry', `No auth for URI, but auth present for scoped registry.\n\nURI: ${uri}\nScoped Registry Key: ${auth.scopeAuthKey}\n\nMore info here: https://github.com/npm/cli/wiki/No-auth-for-URI,-but-auth-present-for-scoped-registry`);\n    }\n    return checkErrors(method, res, startTime, opts);\n  } else {\n    res.body.on('end', () => logRequest(method, res, startTime, opts));\n    if (opts.ignoreBody) {\n      res.body.resume();\n      return new Response(null, res);\n    }\n    return res;\n  }\n};\nmodule.exports = checkResponse;\nfunction logRequest(method, res, startTime, opts) {\n  const elapsedTime = Date.now() - startTime;\n  const attempt = res.headers.get('x-fetch-attempts');\n  const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : '';\n  const cacheStatus = res.headers.get('x-local-cache-status');\n  const cacheStr = cacheStatus ? ` (cache ${cacheStatus})` : '';\n  let urlStr;\n  try {\n    const {\n      URL\n    } = require('url');\n    const url = new URL(res.url);\n    if (url.password) url.password = '***';\n    urlStr = url.toString();\n  } catch (er) {\n    urlStr = res.url;\n  }\n  opts.log.http('fetch', `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`);\n}\nfunction checkErrors(method, res, startTime, opts) {\n  return res.buffer().catch(() => null).then(body => {\n    let parsed = body;\n    try {\n      parsed = JSON.parse(body.toString('utf8'));\n    } catch (e) {}\n    if (res.status === 401 && res.headers.get('www-authenticate')) {\n      const auth = res.headers.get('www-authenticate').split(/,\\s*/).map(s => s.toLowerCase());\n      if (auth.indexOf('ipaddress') !== -1) {\n        throw new errors.HttpErrorAuthIPAddress(method, res, parsed, opts.spec);\n      } else if (auth.indexOf('otp') !== -1) {\n        throw new errors.HttpErrorAuthOTP(method, res, parsed, opts.spec);\n      } else {\n        throw new errors.HttpErrorAuthUnknown(method, res, parsed, opts.spec);\n      }\n    } else if (res.status === 401 && body != null && /one-time pass/.test(body.toString('utf8'))) {\n      // Heuristic for malformed OTP responses that don't include the\n      // www-authenticate header.\n      throw new errors.HttpErrorAuthOTP(method, res, parsed, opts.spec);\n    } else {\n      throw new errors.HttpErrorGeneral(method, res, parsed, opts.spec);\n    }\n  });\n}","map":{"version":3,"names":["errors","require","Response","defaultOpts","checkResponse","method","uri","res","registry","startTime","auth","opts","headers","has","log","notice","get","status","logRequest","scopeAuthKey","token","warn","checkErrors","body","on","ignoreBody","resume","module","exports","elapsedTime","Date","now","attempt","attemptStr","cacheStatus","cacheStr","urlStr","URL","url","password","toString","er","http","toUpperCase","buffer","catch","then","parsed","JSON","parse","e","split","map","s","toLowerCase","indexOf","HttpErrorAuthIPAddress","spec","HttpErrorAuthOTP","HttpErrorAuthUnknown","test","HttpErrorGeneral"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/npm-registry-fetch/check-response.js"],"sourcesContent":["'use strict'\n\nconst errors = require('./errors.js')\nconst { Response } = require('minipass-fetch')\nconst defaultOpts = require('./default-opts.js')\n\nconst checkResponse =\n  async ({ method, uri, res, registry, startTime, auth, opts }) => {\n    opts = { ...defaultOpts, ...opts }\n    if (res.headers.has('npm-notice') && !res.headers.has('x-local-cache'))\n      opts.log.notice('', res.headers.get('npm-notice'))\n\n    if (res.status >= 400) {\n      logRequest(method, res, startTime, opts)\n      if (auth && auth.scopeAuthKey && !auth.token && !auth.auth) {\n      // we didn't have auth for THIS request, but we do have auth for\n      // requests to the registry indicated by the spec's scope value.\n      // Warn the user.\n        opts.log.warn('registry', `No auth for URI, but auth present for scoped registry.\n\nURI: ${uri}\nScoped Registry Key: ${auth.scopeAuthKey}\n\nMore info here: https://github.com/npm/cli/wiki/No-auth-for-URI,-but-auth-present-for-scoped-registry`)\n      }\n      return checkErrors(method, res, startTime, opts)\n    } else {\n      res.body.on('end', () => logRequest(method, res, startTime, opts))\n      if (opts.ignoreBody) {\n        res.body.resume()\n        return new Response(null, res)\n      }\n      return res\n    }\n  }\nmodule.exports = checkResponse\n\nfunction logRequest (method, res, startTime, opts) {\n  const elapsedTime = Date.now() - startTime\n  const attempt = res.headers.get('x-fetch-attempts')\n  const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\n  const cacheStatus = res.headers.get('x-local-cache-status')\n  const cacheStr = cacheStatus ? ` (cache ${cacheStatus})` : ''\n\n  let urlStr\n  try {\n    const { URL } = require('url')\n    const url = new URL(res.url)\n    if (url.password)\n      url.password = '***'\n\n    urlStr = url.toString()\n  } catch (er) {\n    urlStr = res.url\n  }\n\n  opts.log.http(\n    'fetch',\n    `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`\n  )\n}\n\nfunction checkErrors (method, res, startTime, opts) {\n  return res.buffer()\n    .catch(() => null)\n    .then(body => {\n      let parsed = body\n      try {\n        parsed = JSON.parse(body.toString('utf8'))\n      } catch (e) {}\n      if (res.status === 401 && res.headers.get('www-authenticate')) {\n        const auth = res.headers.get('www-authenticate')\n          .split(/,\\s*/)\n          .map(s => s.toLowerCase())\n        if (auth.indexOf('ipaddress') !== -1) {\n          throw new errors.HttpErrorAuthIPAddress(\n            method, res, parsed, opts.spec\n          )\n        } else if (auth.indexOf('otp') !== -1) {\n          throw new errors.HttpErrorAuthOTP(\n            method, res, parsed, opts.spec\n          )\n        } else {\n          throw new errors.HttpErrorAuthUnknown(\n            method, res, parsed, opts.spec\n          )\n        }\n      } else if (res.status === 401 && body != null && /one-time pass/.test(body.toString('utf8'))) {\n        // Heuristic for malformed OTP responses that don't include the\n        // www-authenticate header.\n        throw new errors.HttpErrorAuthOTP(\n          method, res, parsed, opts.spec\n        )\n      } else {\n        throw new errors.HttpErrorGeneral(\n          method, res, parsed, opts.spec\n        )\n      }\n    })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}