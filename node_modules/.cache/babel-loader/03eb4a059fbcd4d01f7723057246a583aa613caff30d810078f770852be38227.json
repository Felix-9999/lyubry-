{"ast":null,"code":"const {\n  distance\n} = require('fastest-levenshtein');\nconst readJson = require('read-package-json-fast');\nconst {\n  cmdList\n} = require('./cmd-list.js');\nconst didYouMean = async (npm, path, scmd) => {\n  let best = cmdList.filter(cmd => distance(scmd, cmd) < scmd.length * 0.4 && scmd !== cmd).map(str => `    npm ${str} # ${npm.commands[str].description}`);\n\n  // We would already be suggesting this in `npm x` so omit them here\n  const runScripts = ['stop', 'start', 'test', 'restart'];\n  try {\n    const {\n      bin,\n      scripts\n    } = await readJson(`${path}/package.json`);\n    best = best.concat(Object.keys(scripts || {}).filter(cmd => distance(scmd, cmd) < scmd.length * 0.4 && !runScripts.includes(cmd)).map(str => `    npm run ${str} # run the \"${str}\" package script`), Object.keys(bin || {}).filter(cmd => distance(scmd, cmd) < scmd.length * 0.4).map(str => `    npm exec ${str} # run the \"${str}\" command from either this or a remote npm package`));\n  } catch (_) {\n    // gracefully ignore not being in a folder w/ a package.json\n  }\n  if (best.length === 0) return '';\n  const suggestion = best.length === 1 ? `\\n\\nDid you mean this?\\n${best[0]}` : `\\n\\nDid you mean one of these?\\n${best.slice(0, 3).join('\\n')}`;\n  return suggestion;\n};\nmodule.exports = didYouMean;","map":{"version":3,"names":["distance","require","readJson","cmdList","didYouMean","npm","path","scmd","best","filter","cmd","length","map","str","commands","description","runScripts","bin","scripts","concat","Object","keys","includes","_","suggestion","slice","join","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/lib/utils/did-you-mean.js"],"sourcesContent":["const { distance } = require('fastest-levenshtein')\nconst readJson = require('read-package-json-fast')\nconst { cmdList } = require('./cmd-list.js')\n\nconst didYouMean = async (npm, path, scmd) => {\n  let best = cmdList\n    .filter(cmd => distance(scmd, cmd) < scmd.length * 0.4 && scmd !== cmd)\n    .map(str => `    npm ${str} # ${npm.commands[str].description}`)\n\n  // We would already be suggesting this in `npm x` so omit them here\n  const runScripts = ['stop', 'start', 'test', 'restart']\n  try {\n    const { bin, scripts } = await readJson(`${path}/package.json`)\n    best = best.concat(\n      Object.keys(scripts || {})\n        .filter(cmd => distance(scmd, cmd) < scmd.length * 0.4 &&\n          !runScripts.includes(cmd))\n        .map(str => `    npm run ${str} # run the \"${str}\" package script`),\n      Object.keys(bin || {})\n        .filter(cmd => distance(scmd, cmd) < scmd.length * 0.4)\n        .map(str => `    npm exec ${str} # run the \"${str}\" command from either this or a remote npm package`)\n    )\n  } catch (_) {\n    // gracefully ignore not being in a folder w/ a package.json\n  }\n\n  if (best.length === 0)\n    return ''\n\n  const suggestion = best.length === 1 ? `\\n\\nDid you mean this?\\n${best[0]}`\n    : `\\n\\nDid you mean one of these?\\n${best.slice(0, 3).join('\\n')}`\n  return suggestion\n}\nmodule.exports = didYouMean\n"],"mappings":"AAAA,MAAM;EAAEA;AAAS,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACnD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAClD,MAAM;EAAEE;AAAQ,CAAC,GAAGF,OAAO,CAAC,eAAe,CAAC;AAE5C,MAAMG,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC5C,IAAIC,IAAI,GAAGL,OAAO,CACfM,MAAM,CAACC,GAAG,IAAIV,QAAQ,CAACO,IAAI,EAAEG,GAAG,CAAC,GAAGH,IAAI,CAACI,MAAM,GAAG,GAAG,IAAIJ,IAAI,KAAKG,GAAG,CAAC,CACtEE,GAAG,CAACC,GAAG,IAAI,WAAWA,GAAG,MAAMR,GAAG,CAACS,QAAQ,CAACD,GAAG,CAAC,CAACE,WAAW,EAAE,CAAC;;EAElE;EACA,MAAMC,UAAU,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC;EACvD,IAAI;IACF,MAAM;MAAEC,GAAG;MAAEC;IAAQ,CAAC,GAAG,MAAMhB,QAAQ,CAAC,GAAGI,IAAI,eAAe,CAAC;IAC/DE,IAAI,GAAGA,IAAI,CAACW,MAAM,CAChBC,MAAM,CAACC,IAAI,CAACH,OAAO,IAAI,CAAC,CAAC,CAAC,CACvBT,MAAM,CAACC,GAAG,IAAIV,QAAQ,CAACO,IAAI,EAAEG,GAAG,CAAC,GAAGH,IAAI,CAACI,MAAM,GAAG,GAAG,IACpD,CAACK,UAAU,CAACM,QAAQ,CAACZ,GAAG,CAAC,CAAC,CAC3BE,GAAG,CAACC,GAAG,IAAI,eAAeA,GAAG,eAAeA,GAAG,kBAAkB,CAAC,EACrEO,MAAM,CAACC,IAAI,CAACJ,GAAG,IAAI,CAAC,CAAC,CAAC,CACnBR,MAAM,CAACC,GAAG,IAAIV,QAAQ,CAACO,IAAI,EAAEG,GAAG,CAAC,GAAGH,IAAI,CAACI,MAAM,GAAG,GAAG,CAAC,CACtDC,GAAG,CAACC,GAAG,IAAI,gBAAgBA,GAAG,eAAeA,GAAG,oDAAoD,CACzG,CAAC;EACH,CAAC,CAAC,OAAOU,CAAC,EAAE;IACV;EAAA;EAGF,IAAIf,IAAI,CAACG,MAAM,KAAK,CAAC,EACnB,OAAO,EAAE;EAEX,MAAMa,UAAU,GAAGhB,IAAI,CAACG,MAAM,KAAK,CAAC,GAAG,2BAA2BH,IAAI,CAAC,CAAC,CAAC,EAAE,GACvE,mCAAmCA,IAAI,CAACiB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE;EACpE,OAAOF,UAAU;AACnB,CAAC;AACDG,MAAM,CAACC,OAAO,GAAGxB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}