{"ast":null,"code":"const checkBin = require('./check-bin.js');\nconst normalize = require('npm-normalize-package-bin');\nconst checkBins = async ({\n  pkg,\n  path,\n  top,\n  global,\n  force\n}) => {\n  // always ok to clobber when forced\n  // always ok to clobber local bins, or when forced\n  if (force || !global || !top) return;\n  pkg = normalize(pkg);\n  if (!pkg.bin) return;\n  await Promise.all(Object.keys(pkg.bin).map(bin => checkBin({\n    bin,\n    path,\n    top,\n    global,\n    force\n  })));\n};\nmodule.exports = checkBins;","map":{"version":3,"names":["checkBin","require","normalize","checkBins","pkg","path","top","global","force","bin","Promise","all","Object","keys","map","module","exports"],"sources":["C:/Users/Felo/node_modules/npm/node_modules/bin-links/lib/check-bins.js"],"sourcesContent":["const checkBin = require('./check-bin.js')\nconst normalize = require('npm-normalize-package-bin')\nconst checkBins = async ({ pkg, path, top, global, force }) => {\n  // always ok to clobber when forced\n  // always ok to clobber local bins, or when forced\n  if (force || !global || !top)\n    return\n\n  pkg = normalize(pkg)\n  if (!pkg.bin)\n    return\n\n  await Promise.all(Object.keys(pkg.bin)\n    .map(bin => checkBin({bin, path, top, global, force})))\n}\nmodule.exports = checkBins\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC1C,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACtD,MAAME,SAAS,GAAG,MAAAA,CAAO;EAAEC,GAAG;EAAEC,IAAI;EAAEC,GAAG;EAAEC,MAAM;EAAEC;AAAM,CAAC,KAAK;EAC7D;EACA;EACA,IAAIA,KAAK,IAAI,CAACD,MAAM,IAAI,CAACD,GAAG,EAC1B;EAEFF,GAAG,GAAGF,SAAS,CAACE,GAAG,CAAC;EACpB,IAAI,CAACA,GAAG,CAACK,GAAG,EACV;EAEF,MAAMC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,IAAI,CAACT,GAAG,CAACK,GAAG,CAAC,CACnCK,GAAG,CAACL,GAAG,IAAIT,QAAQ,CAAC;IAACS,GAAG;IAAEJ,IAAI;IAAEC,GAAG;IAAEC,MAAM;IAAEC;EAAK,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC;AACDO,MAAM,CAACC,OAAO,GAAGb,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}